"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLanguageTypeEnumList = getLanguageTypeEnumList;
exports.getLanguageFromCode = getLanguageFromCode;
exports.getDefaultLanguage = getDefaultLanguage;
exports.getDefaultCurrencySymbol = getDefaultCurrencySymbol;
exports.getLanguageNodeData = getLanguageNodeData;
exports.createOrInitI18nInstance = createOrInitI18nInstance;
exports.getXJsKitI18nInstance = getXJsKitI18nInstance;
exports.LanguageTypeEnum = void 0;

var _i18next = _interopRequireDefault(require("i18next"));

var _enumTool = require("../common/enumTool");

var _data = require("../common/data");

var _lib = require("../common/lib");

var _data2 = require("./data");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LanguageTypeEnum;
/**
 * 显示语言列表
 * @param isChina true：只返回简体中文，false：返回除简体中文之外的所有语言
 */

exports.LanguageTypeEnum = LanguageTypeEnum;

(function (LanguageTypeEnum) {
  LanguageTypeEnum["\u7B80\u4F53\u4E2D\u6587"] = "zh-CN";
  LanguageTypeEnum["English"] = "en-US";
  LanguageTypeEnum["Fran\xE7ais"] = "fr-FR";
  LanguageTypeEnum["Deutsch"] = "de-DE";
  LanguageTypeEnum["Espa\xF1ol"] = "es-ES";
  LanguageTypeEnum["\u65E5\u672C\u8A9E"] = "ja-JP";
  LanguageTypeEnum["\uD55C\uAD6D\uC5B4"] = "ko-KR";
  LanguageTypeEnum["\u7E41\u9AD4\u4E2D\u6587"] = "zh-TW";
})(LanguageTypeEnum || (exports.LanguageTypeEnum = LanguageTypeEnum = {}));

function getLanguageTypeEnumList(isChina) {
  var lst = (0, _enumTool.convertEnumToList)(LanguageTypeEnum);

  if (isChina === true) {
    return lst.filter(function (k) {
      return k.value == LanguageTypeEnum.简体中文;
    });
  }

  if (isChina === false) {
    return lst.filter(function (k) {
      return k.value != LanguageTypeEnum.简体中文;
    });
  }

  return lst;
}
/**
 * 从语言的字符串代码中获取支持的语言，如：ja-jp -> ja-JP, ja -> ja-JP
 */


function getLanguageFromCode(code) {
  var _getLanguageTypeEnumL;

  var result = (_getLanguageTypeEnumL = getLanguageTypeEnumList().find(function (k) {
    return k.value.toUpperCase() == code.toUpperCase();
  })) === null || _getLanguageTypeEnumL === void 0 ? void 0 : _getLanguageTypeEnumL.value;

  if (!result) {
    var _getLanguageTypeEnumL2;

    result = (_getLanguageTypeEnumL2 = getLanguageTypeEnumList().find(function (k) {
      return k.value.toUpperCase().split("-")[1] == code.toUpperCase();
    })) === null || _getLanguageTypeEnumL2 === void 0 ? void 0 : _getLanguageTypeEnumL2.value;
  }

  if (!result) {
    var _getLanguageTypeEnumL3;

    result = (_getLanguageTypeEnumL3 = getLanguageTypeEnumList().find(function (k) {
      return k.value.toUpperCase().split("-")[0] == code.toUpperCase();
    })) === null || _getLanguageTypeEnumL3 === void 0 ? void 0 : _getLanguageTypeEnumL3.value;
  }

  return result;
}
/**
 * 获取默认语言
 */


function getDefaultLanguage(isChina) {
  return isChina ? LanguageTypeEnum.简体中文 : LanguageTypeEnum.English;
}
/**
 * 获取默认的货币符号
 */


function getDefaultCurrencySymbol(isChina) {
  return isChina ? "¥" : "$";
}
/**
 * 获取指定对象中的某个语言节点中的数据。
 * 如果 data 是字符串，则直接返回该字符串；如果是 object，则返回 object[当前语言] ；如果 object[当前语言] 没有值，则返回 object[默认语言]
 */


function getLanguageNodeData(data, isChina, lang) {
  if (!data) {
    return null;
  } //如果是字符串，则直接返回原数据即可


  if ((0, _data.isString)(data)) {
    return data;
  }

  return data[lang] || data[getDefaultLanguage(isChina)];
}
/**
 * 创建或初始化 i18n 实例。注意：defaultInstance、initReact 必须作为参数由具体使用的项目传过来，因为每个项目的默认实例不一样
 */


function createOrInitI18nInstance(isCreateNewInstance, defaultInstance, initReact, isChina, lang, transData) {
  var defaultLang = getDefaultLanguage(isChina);
  var currentLang = lang && (0, _enumTool.isValueInEnum)(LanguageTypeEnum, lang) ? lang : defaultLang;
  var initOps = {
    lng: currentLang,
    supportedLngs: getLanguageTypeEnumList().map(function (k) {
      return k.value;
    }),
    fallbackLng: defaultLang,
    interpolation: {
      escapeValue: false
    },
    resources: transData
  };
  var instance = isCreateNewInstance ? defaultInstance.createInstance() : defaultInstance;
  var ins = initReact ? instance.use(initReact) : instance; //初始化实例

  ins.init(initOps, function (err) {
    if (!err) {
      return;
    }

    console.error("Init default i18n instance error: ".concat(err));
  });
  return instance;
}
/**
 * 获取当前组件库的 i18n 实例。这里会将 i18n 实例挂载到全局变量上，供不同组件跨模块访问。为什么要这样做？因为这个组件库中的每一个组件最终是分别 build 成一个独立的包，组件与组件是隔离的，并没有数据共享机制，如果不这样做，那么每个打包后的组件都有自己的 i18n 实例。
 */


function getXJsKitI18nInstance() {
  var globalObj = (0, _lib.getGlobalObject)();

  if (globalObj.___xJsKitI18nInstance) {
    return globalObj.___xJsKitI18nInstance;
  }

  globalObj.___xJsKitI18nInstance = createOrInitI18nInstance(true, _i18next.default, null, true, getDefaultLanguage(true), _data2.XJsKitI18nResourcesData);
  return globalObj.___xJsKitI18nInstance;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,