"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getGlobalCache = getGlobalCache;
exports.setGlobalCacheName = setGlobalCacheName;
exports.add = add;
exports.remove = remove;
exports.get = get;
exports.clearExpired = clearExpired;
exports.getAutoClearExpiredTimeSpan = getAutoClearExpiredTimeSpan;
exports.setAutoClearExpiredTimeSpan = setAutoClearExpiredTimeSpan;

var _lib = require("../common/lib");

var globalCacheName = "x-js-kit-localcache";
/**
 * 自动清理过期缓存的间隔时间（毫秒），默认为30分钟
 */

var autoClearExpiredTimeSpan = 30 * 60 * 1000;
var clearExpiredIntervalId;

/**
 * 返回全局缓存对象
 */
function getGlobalCache() {
  var cacheValue = localStorage.getItem(globalCacheName);

  if (!cacheValue) {
    return null;
  }

  return JSON.parse(cacheValue);
}
/**
 * 修改localStorage缓存的默认名称
 */


function setGlobalCacheName(name) {
  var oldValue = localStorage.getItem(globalCacheName);
  localStorage.removeItem(globalCacheName);
  globalCacheName = name;
  localStorage.setItem(globalCacheName, oldValue);
}
/**
 * 添加数据至缓存（默认每30分钟自动清理所有过期的缓存）
 */


function add(key, value) {
  var cache = getGlobalCache();

  if (!cache) {
    return;
  }

  cache.items[key] = value;
  localStorage.setItem(globalCacheName, JSON.stringify(cache));
}
/**
 * 删除指定缓存
 */


function remove(key) {
  var cache = getGlobalCache();

  if (!cache) {
    return;
  }

  delete cache.items[key];
  localStorage.setItem(globalCacheName, JSON.stringify(cache));
}
/**
 * 读取指定缓存
 * @param key 缓存key
 * @param ignoreExpireCheck 是否忽略过期检测，默认为false.（true:即使过期，只要还没被清理，则依然返回。false:如果已过期，则删除此缓存并返回null） 
 */


function get(key) {
  var ignoreExpireCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var cache = getGlobalCache();

  if (!cache) {
    return null;
  }

  var item = cache.items[key];

  if (!item) {
    return null;
  }

  if (!ignoreExpireCheck && item.expire && item.expire < new Date().valueOf()) {
    remove(key);
    return null;
  }

  return item;
}
/**
 * 清理过期缓存
 */


function clearExpired() {
  var ch = getGlobalCache();
  if (!ch) return;
  Object.keys(ch.items).forEach(function (key) {
    var item = ch.items[key];

    if (!item || !item.expire) {
      return;
    }

    if (item.expire < new Date().valueOf()) {
      remove(key);
    }
  });
}
/**
 * 执行自动定期清理
 */


function runClearExpiredInterval() {
  if (clearExpiredIntervalId) {
    clearInterval(clearExpiredIntervalId);
  }

  clearExpiredIntervalId = setInterval(clearExpired, autoClearExpiredTimeSpan);
}
/**
 * 获取自动清理过期缓存的间隔（毫秒）
 */


function getAutoClearExpiredTimeSpan() {
  return autoClearExpiredTimeSpan;
}
/**
 * 设置自动清理过期缓存的间隔（毫秒），并按计划执行清理
 */


function setAutoClearExpiredTimeSpan(timeSpan) {
  if (timeSpan <= 0) {
    throw new Error("timeSpan must > 0.");
  }

  autoClearExpiredTimeSpan = timeSpan;
  runClearExpiredInterval();
}

(function () {
  if (!(0, _lib.getLocalStorage)()) {
    return;
  } //设置默认缓存值


  var defaultGlobalLocalStorage = {
    time: new Date().valueOf(),
    items: {}
  };

  if (!localStorage.getItem(globalCacheName)) {
    localStorage.setItem(globalCacheName, JSON.stringify(defaultGlobalLocalStorage));
  } //立即清理过期缓存


  clearExpired(); //执行定时清理过期缓存

  runClearExpiredInterval();
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jYWNoZS9sb2NhbFN0b3JhZ2UudHMiXSwibmFtZXMiOlsiZ2xvYmFsQ2FjaGVOYW1lIiwiYXV0b0NsZWFyRXhwaXJlZFRpbWVTcGFuIiwiY2xlYXJFeHBpcmVkSW50ZXJ2YWxJZCIsImdldEdsb2JhbENhY2hlIiwiY2FjaGVWYWx1ZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJKU09OIiwicGFyc2UiLCJzZXRHbG9iYWxDYWNoZU5hbWUiLCJuYW1lIiwib2xkVmFsdWUiLCJyZW1vdmVJdGVtIiwic2V0SXRlbSIsImFkZCIsImtleSIsInZhbHVlIiwiY2FjaGUiLCJpdGVtcyIsInN0cmluZ2lmeSIsInJlbW92ZSIsImdldCIsImlnbm9yZUV4cGlyZUNoZWNrIiwiaXRlbSIsImV4cGlyZSIsIkRhdGUiLCJ2YWx1ZU9mIiwiY2xlYXJFeHBpcmVkIiwiY2giLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsInJ1bkNsZWFyRXhwaXJlZEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsInNldEludGVydmFsIiwiZ2V0QXV0b0NsZWFyRXhwaXJlZFRpbWVTcGFuIiwic2V0QXV0b0NsZWFyRXhwaXJlZFRpbWVTcGFuIiwidGltZVNwYW4iLCJFcnJvciIsImRlZmF1bHRHbG9iYWxMb2NhbFN0b3JhZ2UiLCJ0aW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBOztBQUVBLElBQUlBLGVBQWUsR0FBRyxxQkFBdEI7QUFDQTs7OztBQUdBLElBQUlDLHdCQUF3QixHQUFHLEtBQUssRUFBTCxHQUFVLElBQXpDO0FBQ0EsSUFBSUMsc0JBQUo7O0FBdUJBOzs7QUFHTyxTQUFTQyxjQUFULEdBQW9EO0FBQ3ZELE1BQU1DLFVBQVUsR0FBR0MsWUFBWSxDQUFDQyxPQUFiLENBQXFCTixlQUFyQixDQUFuQjs7QUFDQSxNQUFJLENBQUNJLFVBQUwsRUFBaUI7QUFDYixXQUFPLElBQVA7QUFDSDs7QUFDRCxTQUFPRyxJQUFJLENBQUNDLEtBQUwsQ0FB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OztBQUdPLFNBQVNrQywyQkFBVCxHQUF1QztBQUMxQyxTQUFPbEMsd0JBQVA7QUFDSDtBQUVEOzs7OztBQUdPLFNBQVNtQywyQkFBVCxDQUFxQ0MsUUFBckMsRUFBdUQ7QUFDMUQsTUFBSUEsUUFBUSxJQUFJLENBQWhCLEVBQW1CO0FBQ2YsVUFBTSxJQUFJQyxLQUFKLENBQVUsb0JBQVYsQ0FBTjtBQUNIOztBQUNEckMsRUFBQUEsd0JBQXdCLEdBQUdvQyxRQUEzQjtBQUNBTCxFQUFBQSx1QkFBdUI7QUFDMUI7O0FBSUQsQ0FBQyxZQUFNO0FBQ0gsTUFBSSxDQUFDLDJCQUFMLEVBQXdCO0FBQ3BCO0FBQ0gsR0FIRSxDQUlIOzs7QUFDQSxNQUFNTyx5QkFBMEMsR0FBRztBQUMvQ0MsSUFBQUEsSUFBSSxFQUFFLElBQUlmLElBQUosR0FBV0MsT0FBWCxFQUR5QztBQUUvQ1IsSUFBQUEsS0FBSyxFQUFFO0FBRndDLEdBQW5EOztBQUlBLE1BQUksQ0FBQ2IsWUFBWSxDQUFDQyxPQUFiLENBQXFCTixlQUFyQixDQUFMLEVBQTRDO0FBQ3hDSyxJQUFBQSxZQUFZLENBQUNRLE9BQWIsQ0FBcUJiLGVBQXJCLEVBQXNDTyxJQUFJLENBQUNZLFNBQUwsQ0FBZW9CLHlCQUFmLENBQXRDO0FBQ0gsR0FYRSxDQVlIOzs7QUFDQVosRUFBQUEsWUFBWSxHQWJULENBY0g7O0FBQ0FLLEVBQUFBLHVCQUF1QjtBQUMxQixDQWhCRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldExvY2FsU3RvcmFnZSB9IGZyb20gXCIuLi9jb21tb24vbGliXCJcclxuXHJcbmxldCBnbG9iYWxDYWNoZU5hbWUgPSBcIngtanMta2l0LWxvY2FsY2FjaGVcIlxyXG4vKipcclxuICog6Ieq5Yqo5riF55CG6L+H5pyf57yT5a2Y55qE6Ze06ZqU5pe26Ze077yI5q+r56eS77yJ77yM6buY6K6k5Li6MzDliIbpkp9cclxuICovXHJcbmxldCBhdXRvQ2xlYXJFeHBpcmVkVGltZVNwYW4gPSAzMCAqIDYwICogMTAwMFxyXG5sZXQgY2xlYXJFeHBpcmVkSW50ZXJ2YWxJZDogbnVtYmVyXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEl0ZW1Db250ZW50VHlwZSB7XHJcbiAgICAvKipcclxuICAgICAqIOWFt+S9k+eahOe8k+WtmOWAvFxyXG4gICAgICovXHJcbiAgICB2YWx1ZTogYW55XHJcbiAgICAvKipcclxuICAgICAqIOi/h+acn+aXtumXtO+8jOiLpeS4jeaMh+Wumu+8jOWImeaXoOi/h+acn+aXtumXtO+8iOatpOaXtumXtOS4uu+8muS7jjE5NzDlubQx5pyIMeaXpTDml7Yw5YiGMOenku+8iFVUQ++8jOWNs+WNj+iwg+S4lueVjOaXtu+8ieWIsOivpeaXpeacn+eahOavq+enkuaVsOOAguWmgu+8mm5ldyBEYXRlKCkudmFsdWVPZigp77yJXHJcbiAgICAgKi9cclxuICAgIGV4cGlyZT86IG51bWJlclxyXG59XHJcbmV4cG9ydCBpbnRlcmZhY2UgR2xvYmFsQ2FjaGVUeXBlIHtcclxuICAgIC8qKlxyXG4gICAgICog5pe26Ze0XHJcbiAgICAgKi9cclxuICAgIHRpbWU6IG51bWJlcixcclxuICAgIC8qKlxyXG4gICAgICog5omA5pyJ57yT5a2Y6aG5XHJcbiAgICAgKi9cclxuICAgIGl0ZW1zOiB7IFtrZXk6IHN0cmluZ106IEl0ZW1Db250ZW50VHlwZSB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDov5Tlm57lhajlsYDnvJPlrZjlr7nosaFcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRHbG9iYWxDYWNoZSgpOiAoR2xvYmFsQ2FjaGVUeXBlIHwgbnVsbCkge1xyXG4gICAgY29uc3QgY2FjaGVWYWx1ZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGdsb2JhbENhY2hlTmFtZSkgYXMgc3RyaW5nXHJcbiAgICBpZiAoIWNhY2hlVmFsdWUpIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIHJldHVybiBKU09OLnBhcnNlKGNhY2hlVmFsdWUpIGFzIEdsb2JhbENhY2hlVHlwZVxyXG59XHJcbi8qKlxyXG4gKiDkv67mlLlsb2NhbFN0b3JhZ2XnvJPlrZjnmoTpu5jorqTlkI3np7BcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXRHbG9iYWxDYWNoZU5hbWUobmFtZTogc3RyaW5nKSB7XHJcbiAgICBjb25zdCBvbGRWYWx1ZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGdsb2JhbENhY2hlTmFtZSkgYXMgc3RyaW5nO1xyXG4gICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oZ2xvYmFsQ2FjaGVOYW1lKVxyXG4gICAgZ2xvYmFsQ2FjaGVOYW1lID0gbmFtZVxyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oZ2xvYmFsQ2FjaGVOYW1lLCBvbGRWYWx1ZSk7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICog5re75Yqg5pWw5o2u6Iez57yT5a2Y77yI6buY6K6k5q+PMzDliIbpkp/oh6rliqjmuIXnkIbmiYDmnInov4fmnJ/nmoTnvJPlrZjvvIlcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBhZGQoa2V5OiBzdHJpbmcsIHZhbHVlOiBJdGVtQ29udGVudFR5cGUpIHtcclxuICAgIGNvbnN0IGNhY2hlID0gZ2V0R2xvYmFsQ2FjaGUoKVxyXG4gICAgaWYgKCFjYWNoZSkge1xyXG4gICAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgY2FjaGUuaXRlbXNba2V5XSA9IHZhbHVlXHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShnbG9iYWxDYWNoZU5hbWUsIEpTT04uc3RyaW5naWZ5KGNhY2hlKSlcclxufVxyXG5cclxuLyoqXHJcbiAqIOWIoOmZpOaMh+Wumue8k+WtmFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZShrZXk6IHN0cmluZykge1xyXG4gICAgY29uc3QgY2FjaGUgPSBnZXRHbG9iYWxDYWNoZSgpXHJcbiAgICBpZiAoIWNhY2hlKSB7XHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICB9XHJcbiAgICBkZWxldGUgY2FjaGUuaXRlbXNba2V5XVxyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oZ2xvYmFsQ2FjaGVOYW1lLCBKU09OLnN0cmluZ2lmeShjYWNoZSkpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiDor7vlj5bmjIflrprnvJPlrZhcclxuICogQHBhcmFtIGtleSDnvJPlrZhrZXlcclxuICogQHBhcmFtIGlnbm9yZUV4cGlyZUNoZWNrIOaYr+WQpuW/veeVpei/h+acn+ajgOa1i++8jOm7mOiupOS4umZhbHNlLu+8iHRydWU65Y2z5L2/6L+H5pyf77yM5Y+q6KaB6L+Y5rKh6KKr5riF55CG77yM5YiZ5L6d54S26L+U5Zue44CCZmFsc2U65aaC5p6c5bey6L+H5pyf77yM5YiZ5Yig6Zmk5q2k57yT5a2Y5bm26L+U5ZuebnVsbO+8iSBcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXQoa2V5OiBzdHJpbmcsIGlnbm9yZUV4cGlyZUNoZWNrOiBib29sZWFuID0gZmFsc2UpOiBJdGVtQ29udGVudFR5cGUgfCBudWxsIHtcclxuICAgIGNvbnN0IGNhY2hlID0gZ2V0R2xvYmFsQ2FjaGUoKVxyXG4gICAgaWYgKCFjYWNoZSkge1xyXG4gICAgICAgIHJldHVybiBudWxsXHJcbiAgICB9XHJcbiAgICBjb25zdCBpdGVtID0gY2FjaGUuaXRlbXNba2V5XVxyXG4gICAgaWYgKCFpdGVtKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGxcclxuICAgIH1cclxuICAgIGlmICghaWdub3JlRXhwaXJlQ2hlY2sgJiYgaXRlbS5leHBpcmUgJiYgaXRlbS5leHBpcmUgPCBuZXcgRGF0ZSgpLnZhbHVlT2YoKSkge1xyXG4gICAgICAgIHJlbW92ZShrZXkpXHJcbiAgICAgICAgcmV0dXJuIG51bGxcclxuICAgIH1cclxuICAgIHJldHVybiBpdGVtXHJcbn1cclxuXHJcblxyXG4vKipcclxuICog5riF55CG6L+H5pyf57yT5a2YXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJFeHBpcmVkKCkge1xyXG4gICAgY29uc3QgY2ggPSBnZXRHbG9iYWxDYWNoZSgpXHJcbiAgICBpZiAoIWNoKSByZXR1cm5cclxuICAgIE9iamVjdC5rZXlzKGNoLml0ZW1zKS5mb3JFYWNoKGtleSA9PiB7XHJcbiAgICAgICAgY29uc3QgaXRlbSA9IGNoLml0ZW1zW2tleV1cclxuICAgICAgICBpZiAoIWl0ZW0gfHwgIWl0ZW0uZXhwaXJlKSB7XHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaXRlbS5leHBpcmUgPCBuZXcgRGF0ZSgpLnZhbHVlT2YoKSkge1xyXG4gICAgICAgICAgICByZW1vdmUoa2V5KVxyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiDmiafooYzoh6rliqjlrprmnJ/muIXnkIZcclxuICovXHJcbmZ1bmN0aW9uIHJ1bkNsZWFyRXhwaXJlZEludGVydmFsKCkge1xyXG4gICAgaWYgKGNsZWFyRXhwaXJlZEludGVydmFsSWQpIHtcclxuICAgICAgICBjbGVhckludGVydmFsKGNsZWFyRXhwaXJlZEludGVydmFsSWQpXHJcbiAgICB9XHJcbiAgICBjbGVhckV4cGlyZWRJbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoY2xlYXJFeHBpcmVkLCBhdXRvQ2xlYXJFeHBpcmVkVGltZVNwYW4pIGFzIGFueVxyXG59XHJcblxyXG4vKipcclxuICog6I635Y+W6Ieq5Yqo5riF55CG6L+H5pyf57yT5a2Y55qE6Ze06ZqU77yI5q+r56eS77yJXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0QXV0b0NsZWFyRXhwaXJlZFRpbWVTcGFuKCkge1xyXG4gICAgcmV0dXJuIGF1dG9DbGVhckV4cGlyZWRUaW1lU3BhblxyXG59XHJcblxyXG4vKipcclxuICog6K6+572u6Ieq5Yqo5riF55CG6L+H5pyf57yT5a2Y55qE6Ze06ZqU77yI5q+r56eS77yJ77yM5bm25oyJ6K6h5YiS5omn6KGM5riF55CGXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc2V0QXV0b0NsZWFyRXhwaXJlZFRpbWVTcGFuKHRpbWVTcGFuOiBudW1iZXIpIHtcclxuICAgIGlmICh0aW1lU3BhbiA8PSAwKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGltZVNwYW4gbXVzdCA+IDAuXCIpXHJcbiAgICB9XHJcbiAgICBhdXRvQ2xlYXJFeHBpcmVkVGltZVNwYW4gPSB0aW1lU3BhblxyXG4gICAgcnVuQ2xlYXJFeHBpcmVkSW50ZXJ2YWwoKVxyXG59XHJcblxyXG5cclxuXHJcbigoKSA9PiB7XHJcbiAgICBpZiAoIWdldExvY2FsU3RvcmFnZSgpKSB7XHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICB9XHJcbiAgICAvL+iuvue9rum7mOiupOe8k+WtmOWAvFxyXG4gICAgY29uc3QgZGVmYXVsdEdsb2JhbExvY2FsU3RvcmFnZTogR2xvYmFsQ2FjaGVUeXBlID0ge1xyXG4gICAgICAgIHRpbWU6IG5ldyBEYXRlKCkudmFsdWVPZigpLFxyXG4gICAgICAgIGl0ZW1zOiB7fVxyXG4gICAgfVxyXG4gICAgaWYgKCFsb2NhbFN0b3JhZ2UuZ2V0SXRlbShnbG9iYWxDYWNoZU5hbWUpKSB7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oZ2xvYmFsQ2FjaGVOYW1lLCBKU09OLnN0cmluZ2lmeShkZWZhdWx0R2xvYmFsTG9jYWxTdG9yYWdlKSlcclxuICAgIH1cclxuICAgIC8v56uL5Y2z5riF55CG6L+H5pyf57yT5a2YXHJcbiAgICBjbGVhckV4cGlyZWQoKVxyXG4gICAgLy/miafooYzlrprml7bmuIXnkIbov4fmnJ/nvJPlrZhcclxuICAgIHJ1bkNsZWFyRXhwaXJlZEludGVydmFsKClcclxufSkoKSJdfQ==