"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getGlobalCache = getGlobalCache;
exports.setGlobalCacheName = setGlobalCacheName;
exports.add = add;
exports.remove = remove;
exports.get = get;

var _lib = require("../common/lib");

var globalCacheName = "x-js-kit-localcache";

/**
 * 返回全局缓存对象
 */
function getGlobalCache() {
  var cacheValue = localStorage.getItem(globalCacheName);

  if (!cacheValue) {
    return null;
  }

  return JSON.parse(cacheValue);
}
/**
 * 修改localStorage缓存的默认名称
 */


function setGlobalCacheName(name) {
  var oldValue = localStorage.getItem(globalCacheName);
  localStorage.removeItem(globalCacheName);
  globalCacheName = name;
  localStorage.setItem(globalCacheName, oldValue);
}
/**
 * 添加数据至缓存
 */


function add(key, value) {
  var cache = getGlobalCache();

  if (!cache) {
    return;
  }

  cache.items[key] = value;
  localStorage.setItem(globalCacheName, JSON.stringify(cache));
}
/**
 * 删除指定缓存
 */


function remove(key) {
  var cache = getGlobalCache();

  if (!cache) {
    return;
  }

  delete cache.items[key];
  localStorage.setItem(globalCacheName, JSON.stringify(cache));
}
/**
 * 读取指定缓存
 */


function get(key) {
  var cache = getGlobalCache();

  if (!cache) {
    return null;
  }

  var item = cache.items[key];

  if (!item) {
    return null;
  }

  if (item.expire && item.expire < new Date().valueOf()) {
    remove(key);
    return null;
  }

  return item;
}

(function () {
  if (!(0, _lib.getLocalStorage)()) {
    return;
  } //设置默认缓存值


  var defaultGlobalLocalStorage = {
    time: new Date().valueOf(),
    items: {}
  };

  if (!localStorage.getItem(globalCacheName)) {
    localStorage.setItem(globalCacheName, JSON.stringify(defaultGlobalLocalStorage));
  } //清理过期缓存


  var ch = getGlobalCache();
  if (!ch) return;
  Object.keys(ch.items).forEach(function (key) {
    var item = ch.items[key];

    if (!item || !item.expire) {
      return;
    }

    if (item.expire < new Date().valueOf()) {
      remove(key);
    }
  });
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jYWNoZS9sb2NhbFN0b3JhZ2UudHMiXSwibmFtZXMiOlsiZ2xvYmFsQ2FjaGVOYW1lIiwiZ2V0R2xvYmFsQ2FjaGUiLCJjYWNoZVZhbHVlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIkpTT04iLCJwYXJzZSIsInNldEdsb2JhbENhY2hlTmFtZSIsIm5hbWUiLCJvbGRWYWx1ZSIsInJlbW92ZUl0ZW0iLCJzZXRJdGVtIiwiYWRkIiwia2V5IiwidmFsdWUiLCJjYWNoZSIsIml0ZW1zIiwic3RyaW5naWZ5IiwicmVtb3ZlIiwiZ2V0IiwiaXRlbSIsImV4cGlyZSIsIkRhdGUiLCJ2YWx1ZU9mIiwiZGVmYXVsdEdsb2JhbExvY2FsU3RvcmFnZSIsInRpbWUiLCJjaCIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUVBLElBQUlBLGVBQWUsR0FBRyxxQkFBdEI7O0FBdUJBOzs7QUFHTyxTQUFTQyxjQUFULEdBQW9EO0FBQ3ZELE1BQU1DLFVBQVUsR0FBR0MsWUFBWSxDQUFDQyxPQUFiLENBQXFCSixlQUFyQixDQUFuQjs7QUFDQSxNQUFJLENBQUNFLFVBQUwsRUFBaUI7QUFDYixXQUFPLElBQVA7QUFDSDs7QUFDRCxTQUFPRyxJQUFJLENBQUNDLEtBQUwsQ0FBV0osVUFBWCxDQUFQO0FBQ0g7QUFDRDs7Ozs7QUFHTyxTQUFTSyxrQkFBVCxDQUE0QkMsSUFBNUIsRUFBMEM7QUFDN0MsTUFBTUMsUUFBUSxHQUFHTixZQUFZLENBQUNDLE9BQWIsQ0FBcUJKLGVBQXJCLENBQWpCO0FBQ0FHLEVBQUFBLFlBQVksQ0FBQ08sVUFBYixDQUF3QlYsZUFBeEI7QUFDQUEsRUFBQUEsZUFBZSxHQUFHUSxJQUFsQjtBQUNBTCxFQUFBQSxZQUFZLENBQUNRLE9BQWIsQ0FBcUJYLGVBQXJCLEVBQXNDUyxRQUF0QztBQUNIO0FBQ0Q7Ozs7O0FBR08sU0FBU0csR0FBVCxDQUFhQyxHQUFiLEVBQTBCQyxLQUExQixFQUFrRDtBQUNyRCxNQUFNQyxLQUFLLEdBQUdkLGNBQWMsRUFBNUI7O0FBQ0EsTUFBSSxDQUFDYyxLQUFMLEVBQVk7QUFDUjtBQUNIOztBQUNEQSxFQUFBQSxLQUFLLENBQUNDLEtBQU4sQ0FBWUgsR0FBWixJQUFtQkMsS0FBbkI7QUFDQVgsRUFBQUEsWUFBWSxDQUFDUSxPQUFiLENBQXFCWCxlQUFyQixFQUFzQ0ssSUFBSSxDQUFDWSxTQUFMLENBQWVGLEtBQWYsQ0FBdEM7QUFDSDtBQUVEOzs7OztBQUdPLFNBQVNHLE1BQVQsQ0FBZ0JMLEdBQWhCLEVBQTZCO0FBQ2hDLE1BQU1FLEtBQUssR0FBR2QsY0FBYyxFQUE1Qjs7QUFDQSxNQUFJLENBQUNjLEtBQUwsRUFBWTtBQUNSO0FBQ0g7O0FBQ0QsU0FBT0EsS0FBSyxDQUFDQyxLQUFOLENBQVlILEdBQVosQ0FBUDtBQUNBVixFQUFBQSxZQUFZLENBQUNRLE9BQWIsQ0FBcUJYLGVBQXJCLEVBQXNDSyxJQUFJLENBQUNZLFNBQUwsQ0FBZUYsS0FBZixDQUF0QztBQUNIO0FBRUQ7Ozs7O0FBR08sU0FBU0ksR0FBVCxDQUFhTixHQUFiLEVBQWtEO0FBQ3JELE1BQU1FLEtBQUssR0FBR2QsY0FBYyxFQUE1Qjs7QUFDQSxNQUFJLENBQUNjLEtBQUwsRUFBWTtBQUNSLFdBQU8sSUFBUDtBQUNIOztBQUNELE1BQU1LLElBQUksR0FBR0wsS0FBSyxDQUFDQyxLQUFOLENBQVlILEdBQVosQ0FBYjs7QUFDQSxNQUFJLENBQUNPLElBQUwsRUFBVztBQUNQLFdBQU8sSUFBUDtBQUNIOztBQUNELE1BQUlBLElBQUksQ0FBQ0MsTUFBTCxJQUFlRCxJQUFJLENBQUNDLE1BQUwsR0FBYyxJQUFJQyxJQUFKLEdBQVdDLE9BQVgsRUFBakMsRUFBdUQ7QUFDbkRMLElBQUFBLE1BQU0sQ0FBQ0wsR0FBRCxDQUFOO0FBQ0EsV0FBTyxJQUFQO0FBQ0g7O0FBQ0QsU0FBT08sSUFBUDtBQUNIOztBQUdELENBQUMsWUFBTTtBQUNILE1BQUksQ0FBQywyQkFBTCxFQUF3QjtBQUNwQjtBQUNILEdBSEUsQ0FJSDs7O0FBQ0EsTUFBTUkseUJBQTBDLEdBQUc7QUFDL0NDLElBQUFBLElBQUksRUFBRSxJQUFJSCxJQUFKLEdBQVdDLE9BQVgsRUFEeUM7QUFFL0NQLElBQUFBLEtBQUssRUFBRTtBQUZ3QyxHQUFuRDs7QUFJQSxNQUFJLENBQUNiLFlBQVksQ0FBQ0MsT0FBYixDQUFxQkosZUFBckIsQ0FBTCxFQUE0QztBQUN4Q0csSUFBQUEsWUFBWSxDQUFDUSxPQUFiLENBQXFCWCxlQUFyQixFQUFzQ0ssSUFBSSxDQUFDWSxTQUFMLENBQWVPLHlCQUFmLENBQXRDO0FBQ0gsR0FYRSxDQVlIOzs7QUFDQSxNQUFNRSxFQUFFLEdBQUd6QixjQUFjLEVBQXpCO0FBQ0EsTUFBSSxDQUFDeUIsRUFBTCxFQUFTO0FBQ1RDLEVBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRixFQUFFLENBQUNWLEtBQWYsRUFBc0JhLE9BQXRCLENBQThCLFVBQUFoQixHQUFHLEVBQUk7QUFDakMsUUFBTU8sSUFBSSxHQUFHTSxFQUFFLENBQUNWLEtBQUgsQ0FBU0gsR0FBVCxDQUFiOztBQUNBLFFBQUksQ0FBQ08sSUFBRCxJQUFTLENBQUNBLElBQUksQ0FBQ0MsTUFBbkIsRUFBMkI7QUFDdkI7QUFDSDs7QUFDRCxRQUFJRCxJQUFJLENBQUNDLE1BQUwsR0FBYyxJQUFJQyxJQUFKLEdBQVdDLE9BQVgsRUFBbEIsRUFBd0M7QUFDcENMLE1BQUFBLE1BQU0sQ0FBQ0wsR0FBRCxDQUFOO0FBQ0g7QUFDSixHQVJEO0FBU0gsQ0F4QkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRMb2NhbFN0b3JhZ2UgfSBmcm9tIFwiLi4vY29tbW9uL2xpYlwiXHJcblxyXG5sZXQgZ2xvYmFsQ2FjaGVOYW1lID0gXCJ4LWpzLWtpdC1sb2NhbGNhY2hlXCJcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSXRlbUNvbnRlbnRUeXBlIHtcclxuICAgIC8qKlxyXG4gICAgICog5YW35L2T55qE57yT5a2Y5YC8XHJcbiAgICAgKi9cclxuICAgIHZhbHVlOiBhbnlcclxuICAgIC8qKlxyXG4gICAgICog6L+H5pyf5pe26Ze077yM6Iul5LiN5oyH5a6a77yM5YiZ5peg6L+H5pyf5pe26Ze077yI5q2k5pe26Ze05Li677ya5LuOMTk3MOW5tDHmnIgx5pelMOaXtjDliIYw56eS77yIVVRD77yM5Y2z5Y2P6LCD5LiW55WM5pe277yJ5Yiw6K+l5pel5pyf55qE5q+r56eS5pWw44CC5aaC77yabmV3IERhdGUoKS52YWx1ZU9mKCnvvIlcclxuICAgICAqL1xyXG4gICAgZXhwaXJlPzogbnVtYmVyXHJcbn1cclxuZXhwb3J0IGludGVyZmFjZSBHbG9iYWxDYWNoZVR5cGUge1xyXG4gICAgLyoqXHJcbiAgICAgKiDml7bpl7RcclxuICAgICAqL1xyXG4gICAgdGltZTogbnVtYmVyLFxyXG4gICAgLyoqXHJcbiAgICAgKiDmiYDmnInnvJPlrZjpoblcclxuICAgICAqL1xyXG4gICAgaXRlbXM6IHsgW2tleTogc3RyaW5nXTogSXRlbUNvbnRlbnRUeXBlIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIOi/lOWbnuWFqOWxgOe8k+WtmOWvueixoVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEdsb2JhbENhY2hlKCk6IChHbG9iYWxDYWNoZVR5cGUgfCBudWxsKSB7XHJcbiAgICBjb25zdCBjYWNoZVZhbHVlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oZ2xvYmFsQ2FjaGVOYW1lKSBhcyBzdHJpbmdcclxuICAgIGlmICghY2FjaGVWYWx1ZSkge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEpTT04ucGFyc2UoY2FjaGVWYWx1ZSkgYXMgR2xvYmFsQ2FjaGVUeXBlXHJcbn1cclxuLyoqXHJcbiAqIOS/ruaUuWxvY2FsU3RvcmFnZee8k+WtmOeahOm7mOiupOWQjeensFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHNldEdsb2JhbENhY2hlTmFtZShuYW1lOiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IG9sZFZhbHVlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oZ2xvYmFsQ2FjaGVOYW1lKSBhcyBzdHJpbmc7XHJcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShnbG9iYWxDYWNoZU5hbWUpXHJcbiAgICBnbG9iYWxDYWNoZU5hbWUgPSBuYW1lXHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShnbG9iYWxDYWNoZU5hbWUsIG9sZFZhbHVlKTtcclxufVxyXG4vKipcclxuICog5re75Yqg5pWw5o2u6Iez57yT5a2YXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gYWRkKGtleTogc3RyaW5nLCB2YWx1ZTogSXRlbUNvbnRlbnRUeXBlKSB7XHJcbiAgICBjb25zdCBjYWNoZSA9IGdldEdsb2JhbENhY2hlKClcclxuICAgIGlmICghY2FjaGUpIHtcclxuICAgICAgICByZXR1cm5cclxuICAgIH1cclxuICAgIGNhY2hlLml0ZW1zW2tleV0gPSB2YWx1ZVxyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oZ2xvYmFsQ2FjaGVOYW1lLCBKU09OLnN0cmluZ2lmeShjYWNoZSkpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiDliKDpmaTmjIflrprnvJPlrZhcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiByZW1vdmUoa2V5OiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IGNhY2hlID0gZ2V0R2xvYmFsQ2FjaGUoKVxyXG4gICAgaWYgKCFjYWNoZSkge1xyXG4gICAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgZGVsZXRlIGNhY2hlLml0ZW1zW2tleV1cclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGdsb2JhbENhY2hlTmFtZSwgSlNPTi5zdHJpbmdpZnkoY2FjaGUpKVxyXG59XHJcblxyXG4vKipcclxuICog6K+75Y+W5oyH5a6a57yT5a2YXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0KGtleTogc3RyaW5nKTogSXRlbUNvbnRlbnRUeXBlIHwgbnVsbCB7XHJcbiAgICBjb25zdCBjYWNoZSA9IGdldEdsb2JhbENhY2hlKClcclxuICAgIGlmICghY2FjaGUpIHtcclxuICAgICAgICByZXR1cm4gbnVsbFxyXG4gICAgfVxyXG4gICAgY29uc3QgaXRlbSA9IGNhY2hlLml0ZW1zW2tleV1cclxuICAgIGlmICghaXRlbSkge1xyXG4gICAgICAgIHJldHVybiBudWxsXHJcbiAgICB9XHJcbiAgICBpZiAoaXRlbS5leHBpcmUgJiYgaXRlbS5leHBpcmUgPCBuZXcgRGF0ZSgpLnZhbHVlT2YoKSkge1xyXG4gICAgICAgIHJlbW92ZShrZXkpXHJcbiAgICAgICAgcmV0dXJuIG51bGxcclxuICAgIH1cclxuICAgIHJldHVybiBpdGVtXHJcbn1cclxuXHJcblxyXG4oKCkgPT4ge1xyXG4gICAgaWYgKCFnZXRMb2NhbFN0b3JhZ2UoKSkge1xyXG4gICAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgLy/orr7nva7pu5jorqTnvJPlrZjlgLxcclxuICAgIGNvbnN0IGRlZmF1bHRHbG9iYWxMb2NhbFN0b3JhZ2U6IEdsb2JhbENhY2hlVHlwZSA9IHtcclxuICAgICAgICB0aW1lOiBuZXcgRGF0ZSgpLnZhbHVlT2YoKSxcclxuICAgICAgICBpdGVtczoge31cclxuICAgIH1cclxuICAgIGlmICghbG9jYWxTdG9yYWdlLmdldEl0ZW0oZ2xvYmFsQ2FjaGVOYW1lKSkge1xyXG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGdsb2JhbENhY2hlTmFtZSwgSlNPTi5zdHJpbmdpZnkoZGVmYXVsdEdsb2JhbExvY2FsU3RvcmFnZSkpXHJcbiAgICB9XHJcbiAgICAvL+a4heeQhui/h+acn+e8k+WtmFxyXG4gICAgY29uc3QgY2ggPSBnZXRHbG9iYWxDYWNoZSgpXHJcbiAgICBpZiAoIWNoKSByZXR1cm5cclxuICAgIE9iamVjdC5rZXlzKGNoLml0ZW1zKS5mb3JFYWNoKGtleSA9PiB7XHJcbiAgICAgICAgY29uc3QgaXRlbSA9IGNoLml0ZW1zW2tleV1cclxuICAgICAgICBpZiAoIWl0ZW0gfHwgIWl0ZW0uZXhwaXJlKSB7XHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaXRlbS5leHBpcmUgPCBuZXcgRGF0ZSgpLnZhbHVlT2YoKSkge1xyXG4gICAgICAgICAgICByZW1vdmUoa2V5KVxyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbn0pKCkiXX0=