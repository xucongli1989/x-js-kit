"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFileName = getFileName;
exports.getFileNameWithoutExt = getFileNameWithoutExt;
exports.getExt = getExt;
exports.getExtWithoutDot = getExtWithoutDot;
exports.isSystemRecyclePath = isSystemRecyclePath;
exports.isOfficeTempPath = isOfficeTempPath;
exports.convertPathToFileUrl = convertPathToFileUrl;

/**
 * 获取文件名（包含扩展名），如：c:\1\2\3.txt => 3.txt
 */
function getFileName(path) {
  if (!path) {
    return "";
  }

  var str = path.replace(/\//g, "\\");
  var splitIndex = str.lastIndexOf("\\");

  if (splitIndex < 0) {
    return path.trim();
  }

  return str.substr(splitIndex + 1).trim();
}
/**
 * 获取文件名（不包含扩展名），如：c:\1\2\3.txt => 3
 */


function getFileNameWithoutExt(path) {
  var fileName = getFileName(path);

  if (!fileName) {
    return "";
  }

  var dotIndex = fileName.lastIndexOf(".");

  if (dotIndex < 0) {
    return fileName;
  }

  return fileName.substr(0, dotIndex);
}
/**
 * 获取扩展名（包含点）
 */


function getExt(path) {
  var fileName = getFileName(path);

  if (!fileName) {
    return "";
  }

  var dotIndex = fileName.lastIndexOf(".");

  if (dotIndex < 0) {
    return "";
  }

  return fileName.substr(dotIndex);
}
/**
 * 获取扩展名（不包含点）
 */


function getExtWithoutDot(path) {
  var fileName = getFileName(path);

  if (!fileName) {
    return "";
  }

  var dotIndex = fileName.lastIndexOf(".");

  if (dotIndex < 0) {
    return "";
  }

  return fileName.substr(dotIndex + 1);
}
/**
 * 判断一个路径是否为系统回收站的路径
 */


function isSystemRecyclePath(p) {
  if (!p) {
    return false;
  }

  return p.toUpperCase().includes("$RECYCLE.BIN");
}
/**
 * 判断一个路径是否为 Office 临时文件的路径（文件名以 ~$ 开头）
 */


function isOfficeTempPath(p) {
  if (!p) {
    return false;
  }

  return getFileName(p).startsWith("~$");
}
/**
 * 将物理绝对路径转换为 file 协议的 url
 */


function convertPathToFileUrl(p) {
  if (!p) {
    return "";
  }

  return "file://".concat(p.replaceAll("\\", "/").trim());
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9maWxlL3BhdGgudHMiXSwibmFtZXMiOlsiZ2V0RmlsZU5hbWUiLCJwYXRoIiwic3RyIiwicmVwbGFjZSIsInNwbGl0SW5kZXgiLCJsYXN0SW5kZXhPZiIsInRyaW0iLCJzdWJzdHIiLCJnZXRGaWxlTmFtZVdpdGhvdXRFeHQiLCJmaWxlTmFtZSIsImRvdEluZGV4IiwiZ2V0RXh0IiwiZ2V0RXh0V2l0aG91dERvdCIsImlzU3lzdGVtUmVjeWNsZVBhdGgiLCJwIiwidG9VcHBlckNhc2UiLCJpbmNsdWRlcyIsImlzT2ZmaWNlVGVtcFBhdGgiLCJzdGFydHNXaXRoIiwiY29udmVydFBhdGhUb0ZpbGVVcmwiLCJyZXBsYWNlQWxsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ08sU0FBU0EsV0FBVCxDQUFxQkMsSUFBckIsRUFBMkM7QUFDOUMsTUFBSSxDQUFDQSxJQUFMLEVBQVc7QUFDUCxXQUFPLEVBQVA7QUFDSDs7QUFDRCxNQUFNQyxHQUFHLEdBQUdELElBQUksQ0FBQ0UsT0FBTCxDQUFhLEtBQWIsRUFBb0IsSUFBcEIsQ0FBWjtBQUNBLE1BQU1DLFVBQVUsR0FBR0YsR0FBRyxDQUFDRyxXQUFKLENBQWdCLElBQWhCLENBQW5COztBQUNBLE1BQUlELFVBQVUsR0FBRyxDQUFqQixFQUFvQjtBQUNoQixXQUFPSCxJQUFJLENBQUNLLElBQUwsRUFBUDtBQUNIOztBQUNELFNBQU9KLEdBQUcsQ0FBQ0ssTUFBSixDQUFXSCxVQUFVLEdBQUcsQ0FBeEIsRUFBMkJFLElBQTNCLEVBQVA7QUFDSDtBQUVEO0FBQ0E7QUFDQTs7O0FBQ08sU0FBU0UscUJBQVQsQ0FBK0JQLElBQS9CLEVBQXFEO0FBQ3hELE1BQU1RLFFBQVEsR0FBR1QsV0FBVyxDQUFDQyxJQUFELENBQTVCOztBQUNBLE1BQUksQ0FBQ1EsUUFBTCxFQUFlO0FBQ1gsV0FBTyxFQUFQO0FBQ0g7O0FBQ0QsTUFBTUMsUUFBUSxHQUFHRCxRQUFRLENBQUNKLFdBQVQsQ0FBcUIsR0FBckIsQ0FBakI7O0FBQ0EsTUFBSUssUUFBUSxHQUFHLENBQWYsRUFBa0I7QUFDZCxXQUFPRCxRQUFQO0FBQ0g7O0FBQ0QsU0FBT0EsUUFBUSxDQUFDRixNQUFULENBQWdCLENBQWhCLEVBQW1CRyxRQUFuQixDQUFQO0FBQ0g7QUFFRDtBQUNBO0FBQ0E7OztBQUNPLFNBQVNDLE1BQVQsQ0FBZ0JWLElBQWhCLEVBQXNDO0FBQ3pDLE1BQU1RLFFBQVEsR0FBR1QsV0FBVyxDQUFDQyxJQUFELENBQTVCOztBQUNBLE1BQUksQ0FBQ1EsUUFBTCxFQUFlO0FBQ1gsV0FBTyxFQUFQO0FBQ0g7O0FBQ0QsTUFBTUMsUUFBUSxHQUFHRCxRQUFRLENBQUNKLFdBQVQsQ0FBcUIsR0FBckIsQ0FBakI7O0FBQ0EsTUFBSUssUUFBUSxHQUFHLENBQWYsRUFBa0I7QUFDZCxXQUFPLEVBQVA7QUFDSDs7QUFDRCxTQUFPRCxRQUFRLENBQUNGLE1BQVQsQ0FBZ0JHLFFBQWhCLENBQVA7QUFDSDtBQUVEO0FBQ0E7QUFDQTs7O0FBQ08sU0FBU0UsZ0JBQVQsQ0FBMEJYLElBQTFCLEVBQWdEO0FBQ25ELE1BQU1RLFFBQVEsR0FBR1QsV0FBVyxDQUFDQyxJQUFELENBQTVCOztBQUNBLE1BQUksQ0FBQ1EsUUFBTCxFQUFlO0FBQ1gsV0FBTyxFQUFQO0FBQ0g7O0FBQ0QsTUFBTUMsUUFBUSxHQUFHRCxRQUFRLENBQUNKLFdBQVQsQ0FBcUIsR0FBckIsQ0FBakI7O0FBQ0EsTUFBSUssUUFBUSxHQUFHLENBQWYsRUFBa0I7QUFDZCxXQUFPLEVBQVA7QUFDSDs7QUFDRCxTQUFPRCxRQUFRLENBQUNGLE1BQVQsQ0FBZ0JHLFFBQVEsR0FBRyxDQUEzQixDQUFQO0FBQ0g7QUFFRDtBQUNBO0FBQ0E7OztBQUNPLFNBQVNHLG1CQUFULENBQTZCQyxDQUE3QixFQUF3QztBQUMzQyxNQUFJLENBQUNBLENBQUwsRUFBUTtBQUNKLFdBQU8sS0FBUDtBQUNIOztBQUNELFNBQU9BLENBQUMsQ0FBQ0MsV0FBRixHQUFnQkMsUUFBaEIsQ0FBeUIsY0FBekIsQ0FBUDtBQUNIO0FBRUQ7QUFDQTtBQUNBOzs7QUFDTyxTQUFTQyxnQkFBVCxDQUEwQkgsQ0FBMUIsRUFBcUM7QUFDeEMsTUFBSSxDQUFDQSxDQUFMLEVBQVE7QUFDSixXQUFPLEtBQVA7QUFDSDs7QUFDRCxTQUFPZCxXQUFXLENBQUNjLENBQUQsQ0FBWCxDQUFlSSxVQUFmLENBQTBCLElBQTFCLENBQVA7QUFDSDtBQUVEO0FBQ0E7QUFDQTs7O0FBQ08sU0FBU0Msb0JBQVQsQ0FBOEJMLENBQTlCLEVBQXlDO0FBQzVDLE1BQUksQ0FBQ0EsQ0FBTCxFQUFRO0FBQ0osV0FBTyxFQUFQO0FBQ0g7O0FBQ0QsMEJBQWlCQSxDQUFDLENBQUNNLFVBQUYsQ0FBYSxJQUFiLEVBQW1CLEdBQW5CLEVBQXdCZCxJQUF4QixFQUFqQjtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIOiOt+WPluaWh+S7tuWQje+8iOWMheWQq+aJqeWxleWQje+8ie+8jOWmgu+8mmM6XFwxXFwyXFwzLnR4dCA9PiAzLnR4dFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEZpbGVOYW1lKHBhdGg6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICBpZiAoIXBhdGgpIHtcclxuICAgICAgICByZXR1cm4gXCJcIlxyXG4gICAgfVxyXG4gICAgY29uc3Qgc3RyID0gcGF0aC5yZXBsYWNlKC9cXC8vZywgXCJcXFxcXCIpXHJcbiAgICBjb25zdCBzcGxpdEluZGV4ID0gc3RyLmxhc3RJbmRleE9mKFwiXFxcXFwiKVxyXG4gICAgaWYgKHNwbGl0SW5kZXggPCAwKSB7XHJcbiAgICAgICAgcmV0dXJuIHBhdGgudHJpbSgpXHJcbiAgICB9XHJcbiAgICByZXR1cm4gc3RyLnN1YnN0cihzcGxpdEluZGV4ICsgMSkudHJpbSgpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiDojrflj5bmlofku7blkI3vvIjkuI3ljIXlkKvmianlsZXlkI3vvInvvIzlpoLvvJpjOlxcMVxcMlxcMy50eHQgPT4gM1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEZpbGVOYW1lV2l0aG91dEV4dChwYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgY29uc3QgZmlsZU5hbWUgPSBnZXRGaWxlTmFtZShwYXRoKVxyXG4gICAgaWYgKCFmaWxlTmFtZSkge1xyXG4gICAgICAgIHJldHVybiBcIlwiXHJcbiAgICB9XHJcbiAgICBjb25zdCBkb3RJbmRleCA9IGZpbGVOYW1lLmxhc3RJbmRleE9mKFwiLlwiKVxyXG4gICAgaWYgKGRvdEluZGV4IDwgMCkge1xyXG4gICAgICAgIHJldHVybiBmaWxlTmFtZVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZpbGVOYW1lLnN1YnN0cigwLCBkb3RJbmRleClcclxufVxyXG5cclxuLyoqXHJcbiAqIOiOt+WPluaJqeWxleWQje+8iOWMheWQq+eCue+8iVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEV4dChwYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgY29uc3QgZmlsZU5hbWUgPSBnZXRGaWxlTmFtZShwYXRoKVxyXG4gICAgaWYgKCFmaWxlTmFtZSkge1xyXG4gICAgICAgIHJldHVybiBcIlwiXHJcbiAgICB9XHJcbiAgICBjb25zdCBkb3RJbmRleCA9IGZpbGVOYW1lLmxhc3RJbmRleE9mKFwiLlwiKVxyXG4gICAgaWYgKGRvdEluZGV4IDwgMCkge1xyXG4gICAgICAgIHJldHVybiBcIlwiXHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmlsZU5hbWUuc3Vic3RyKGRvdEluZGV4KVxyXG59XHJcblxyXG4vKipcclxuICog6I635Y+W5omp5bGV5ZCN77yI5LiN5YyF5ZCr54K577yJXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RXh0V2l0aG91dERvdChwYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgY29uc3QgZmlsZU5hbWUgPSBnZXRGaWxlTmFtZShwYXRoKVxyXG4gICAgaWYgKCFmaWxlTmFtZSkge1xyXG4gICAgICAgIHJldHVybiBcIlwiXHJcbiAgICB9XHJcbiAgICBjb25zdCBkb3RJbmRleCA9IGZpbGVOYW1lLmxhc3RJbmRleE9mKFwiLlwiKVxyXG4gICAgaWYgKGRvdEluZGV4IDwgMCkge1xyXG4gICAgICAgIHJldHVybiBcIlwiXHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmlsZU5hbWUuc3Vic3RyKGRvdEluZGV4ICsgMSlcclxufVxyXG5cclxuLyoqXHJcbiAqIOWIpOaWreS4gOS4qui3r+W+hOaYr+WQpuS4uuezu+e7n+WbnuaUtuermeeahOi3r+W+hFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzU3lzdGVtUmVjeWNsZVBhdGgocDogc3RyaW5nKSB7XHJcbiAgICBpZiAoIXApIHtcclxuICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgIH1cclxuICAgIHJldHVybiBwLnRvVXBwZXJDYXNlKCkuaW5jbHVkZXMoXCIkUkVDWUNMRS5CSU5cIilcclxufVxyXG5cclxuLyoqXHJcbiAqIOWIpOaWreS4gOS4qui3r+W+hOaYr+WQpuS4uiBPZmZpY2Ug5Li05pe25paH5Lu255qE6Lev5b6E77yI5paH5Lu25ZCN5LulIH4kIOW8gOWktO+8iVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzT2ZmaWNlVGVtcFBhdGgocDogc3RyaW5nKSB7XHJcbiAgICBpZiAoIXApIHtcclxuICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgIH1cclxuICAgIHJldHVybiBnZXRGaWxlTmFtZShwKS5zdGFydHNXaXRoKFwifiRcIilcclxufVxyXG5cclxuLyoqXHJcbiAqIOWwhueJqeeQhue7neWvuei3r+W+hOi9rOaNouS4uiBmaWxlIOWNj+iurueahCB1cmxcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0UGF0aFRvRmlsZVVybChwOiBzdHJpbmcpIHtcclxuICAgIGlmICghcCkge1xyXG4gICAgICAgIHJldHVybiBcIlwiXHJcbiAgICB9XHJcbiAgICByZXR1cm4gYGZpbGU6Ly8ke3AucmVwbGFjZUFsbChcIlxcXFxcIiwgXCIvXCIpLnRyaW0oKX1gXHJcbn1cclxuIl19