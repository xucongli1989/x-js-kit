"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hexToEntity = hexToEntity;
exports.rgbaToHex = rgbaToHex;

var _convert = require("./convert");

var _data = require("./data");

var _string = require("./string");

/**
 * 将十六进制的 RGBA 颜色转换为实体对象
 */
function hexToEntity(hex) {
  var _hex;

  var result = null;
  hex = (_hex = hex) === null || _hex === void 0 ? void 0 : _hex.replaceAll("#", "").trim();

  if (!hex) {
    return result;
  }

  var arr = (0, _string.splitString)(hex, 2);

  if (arr.length == 3) {
    result = {};
    result.r = parseInt(arr[0], 16);
    result.g = parseInt(arr[1], 16);
    result.b = parseInt(arr[2], 16);
    result.a = 255;
    result.a01 = 1;
    result.a100 = 100;
    return result;
  }

  if (arr.length == 4) {
    result = {};
    result.r = parseInt(arr[0], 16);
    result.g = parseInt(arr[1], 16);
    result.b = parseInt(arr[2], 16);
    result.a = parseInt(arr[3], 16);
    result.a01 = result.a / 255.0;
    result.a100 = (0, _convert.toInt)(result.a01 * 100);
    return result;
  }

  return result;
}
/**
 * 将 RGBA 转换为十六进制的颜色字符串（小写，如：#ff001199）
 */


function rgbaToHex(rgba) {
  if (!rgba) {
    return "";
  }

  var getHex = function getHex(v) {
    return v.toString(16).padStart(2, "0");
  };

  var aHex = "ff";

  if ((0, _data.isNumber)(rgba.a)) {
    aHex = getHex(rgba.a);
  } else if ((0, _data.isNumber)(rgba.a01)) {
    aHex = getHex((0, _convert.toInt)(rgba.a01 * 255));
  } else if ((0, _data.isNumber)(rgba.a100)) {
    aHex = getHex((0, _convert.toInt)(rgba.a100 / 100.0 * 255));
  }

  return "#".concat(getHex(rgba.r)).concat(getHex(rgba.g)).concat(getHex(rgba.b)).concat(aHex);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb24vY29sb3IudHMiXSwibmFtZXMiOlsiaGV4VG9FbnRpdHkiLCJoZXgiLCJyZXN1bHQiLCJyZXBsYWNlQWxsIiwidHJpbSIsImFyciIsImxlbmd0aCIsInIiLCJwYXJzZUludCIsImciLCJiIiwiYSIsImEwMSIsImExMDAiLCJyZ2JhVG9IZXgiLCJyZ2JhIiwiZ2V0SGV4IiwidiIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJhSGV4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQWdDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQSxXQUFULENBQXFCQyxHQUFyQixFQUFrQztBQUFBOztBQUNyQyxNQUFJQyxNQUFxQixHQUFHLElBQTVCO0FBQ0FELEVBQUFBLEdBQUcsV0FBR0EsR0FBSCx5Q0FBRyxLQUFLRSxVQUFMLENBQWdCLEdBQWhCLEVBQXFCLEVBQXJCLEVBQXlCQyxJQUF6QixFQUFOOztBQUNBLE1BQUksQ0FBQ0gsR0FBTCxFQUFVO0FBQ04sV0FBT0MsTUFBUDtBQUNIOztBQUNELE1BQU1HLEdBQUcsR0FBRyx5QkFBWUosR0FBWixFQUFpQixDQUFqQixDQUFaOztBQUNBLE1BQUlJLEdBQUcsQ0FBQ0MsTUFBSixJQUFjLENBQWxCLEVBQXFCO0FBQ2pCSixJQUFBQSxNQUFNLEdBQUcsRUFBVDtBQUNBQSxJQUFBQSxNQUFNLENBQUNLLENBQVAsR0FBV0MsUUFBUSxDQUFDSCxHQUFHLENBQUMsQ0FBRCxDQUFKLEVBQVMsRUFBVCxDQUFuQjtBQUNBSCxJQUFBQSxNQUFNLENBQUNPLENBQVAsR0FBV0QsUUFBUSxDQUFDSCxHQUFHLENBQUMsQ0FBRCxDQUFKLEVBQVMsRUFBVCxDQUFuQjtBQUNBSCxJQUFBQSxNQUFNLENBQUNRLENBQVAsR0FBV0YsUUFBUSxDQUFDSCxHQUFHLENBQUMsQ0FBRCxDQUFKLEVBQVMsRUFBVCxDQUFuQjtBQUNBSCxJQUFBQSxNQUFNLENBQUNTLENBQVAsR0FBVyxHQUFYO0FBQ0FULElBQUFBLE1BQU0sQ0FBQ1UsR0FBUCxHQUFhLENBQWI7QUFDQVYsSUFBQUEsTUFBTSxDQUFDVyxJQUFQLEdBQWMsR0FBZDtBQUNBLFdBQU9YLE1BQVA7QUFDSDs7QUFDRCxNQUFJRyxHQUFHLENBQUNDLE1BQUosSUFBYyxDQUFsQixFQUFxQjtBQUNqQkosSUFBQUEsTUFBTSxHQUFHLEVBQVQ7QUFDQUEsSUFBQUEsTUFBTSxDQUFDSyxDQUFQLEdBQVdDLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDLENBQUQsQ0FBSixFQUFTLEVBQVQsQ0FBbkI7QUFDQUgsSUFBQUEsTUFBTSxDQUFDTyxDQUFQLEdBQVdELFFBQVEsQ0FBQ0gsR0FBRyxDQUFDLENBQUQsQ0FBSixFQUFTLEVBQVQsQ0FBbkI7QUFDQUgsSUFBQUEsTUFBTSxDQUFDUSxDQUFQLEdBQVdGLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDLENBQUQsQ0FBSixFQUFTLEVBQVQsQ0FBbkI7QUFDQUgsSUFBQUEsTUFBTSxDQUFDUyxDQUFQLEdBQVdILFFBQVEsQ0FBQ0gsR0FBRyxDQUFDLENBQUQsQ0FBSixFQUFTLEVBQVQsQ0FBbkI7QUFDQUgsSUFBQUEsTUFBTSxDQUFDVSxHQUFQLEdBQWFWLE1BQU0sQ0FBQ1MsQ0FBUCxHQUFXLEtBQXhCO0FBQ0FULElBQUFBLE1BQU0sQ0FBQ1csSUFBUCxHQUFjLG9CQUFNWCxNQUFNLENBQUNVLEdBQVAsR0FBYSxHQUFuQixDQUFkO0FBQ0EsV0FBT1YsTUFBUDtBQUNIOztBQUNELFNBQU9BLE1BQVA7QUFDSDtBQUVEO0FBQ0E7QUFDQTs7O0FBQ08sU0FBU1ksU0FBVCxDQUFtQkMsSUFBbkIsRUFBd0M7QUFDM0MsTUFBSSxDQUFDQSxJQUFMLEVBQVc7QUFDUCxXQUFPLEVBQVA7QUFDSDs7QUFDRCxNQUFNQyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxDQUFDQyxDQUFEO0FBQUEsV0FBZUEsQ0FBQyxDQUFDQyxRQUFGLENBQVcsRUFBWCxFQUFlQyxRQUFmLENBQXdCLENBQXhCLEVBQTJCLEdBQTNCLENBQWY7QUFBQSxHQUFmOztBQUNBLE1BQUlDLElBQUksR0FBRyxJQUFYOztBQUNBLE1BQUksb0JBQVNMLElBQUksQ0FBQ0osQ0FBZCxDQUFKLEVBQXNCO0FBQ2xCUyxJQUFBQSxJQUFJLEdBQUdKLE1BQU0sQ0FBQ0QsSUFBSSxDQUFDSixDQUFOLENBQWI7QUFDSCxHQUZELE1BRU8sSUFBSSxvQkFBU0ksSUFBSSxDQUFDSCxHQUFkLENBQUosRUFBd0I7QUFDM0JRLElBQUFBLElBQUksR0FBR0osTUFBTSxDQUFDLG9CQUFPRCxJQUFJLENBQUNILEdBQU4sR0FBdUIsR0FBN0IsQ0FBRCxDQUFiO0FBQ0gsR0FGTSxNQUVBLElBQUksb0JBQVNHLElBQUksQ0FBQ0YsSUFBZCxDQUFKLEVBQXlCO0FBQzVCTyxJQUFBQSxJQUFJLEdBQUdKLE1BQU0sQ0FBQyxvQkFBUUQsSUFBSSxDQUFDRixJQUFOLEdBQXdCLEtBQXpCLEdBQWtDLEdBQXhDLENBQUQsQ0FBYjtBQUNIOztBQUNELG9CQUFXRyxNQUFNLENBQUNELElBQUksQ0FBQ1IsQ0FBTixDQUFqQixTQUE0QlMsTUFBTSxDQUFDRCxJQUFJLENBQUNOLENBQU4sQ0FBbEMsU0FBNkNPLE1BQU0sQ0FBQ0QsSUFBSSxDQUFDTCxDQUFOLENBQW5ELFNBQThEVSxJQUE5RDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdG9JbnQgfSBmcm9tIFwiLi9jb252ZXJ0XCJcclxuaW1wb3J0IHsgaXNOdW1iZXIgfSBmcm9tIFwiLi9kYXRhXCJcclxuaW1wb3J0IHsgc3BsaXRTdHJpbmcgfSBmcm9tIFwiLi9zdHJpbmdcIlxyXG5cclxuLyoqXHJcbiAqIOminOiJsuWunuS9k1xyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBSR0JBQ29sb3JUeXBlIHtcclxuICAgIC8qKlxyXG4gICAgICogMC0yNTVcclxuICAgICAqL1xyXG4gICAgcjogbnVtYmVyXHJcbiAgICAvKipcclxuICAgICAqIDAtMjU1XHJcbiAgICAgKi9cclxuICAgIGc6IG51bWJlclxyXG4gICAgLyoqXHJcbiAgICAgKiAwLTI1NVxyXG4gICAgICovXHJcbiAgICBiOiBudW1iZXJcclxuICAgIC8qKlxyXG4gICAgICogMC0yNTVcclxuICAgICAqL1xyXG4gICAgYT86IG51bWJlclxyXG4gICAgLyoqXHJcbiAgICAgKiBhIOeahCAwfjEg5bCP5pWw5b2i5byPXHJcbiAgICAgKi9cclxuICAgIGEwMT86IG51bWJlclxyXG4gICAgLyoqXHJcbiAgICAgKiBhIOeahCAwfjEwMCDnmb7liIbmr5TlvaLlvI9cclxuICAgICAqL1xyXG4gICAgYTEwMD86IG51bWJlclxyXG59XHJcblxyXG4vKipcclxuICog5bCG5Y2B5YWt6L+b5Yi255qEIFJHQkEg6aKc6Imy6L2s5o2i5Li65a6e5L2T5a+56LGhXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaGV4VG9FbnRpdHkoaGV4OiBzdHJpbmcpIHtcclxuICAgIGxldCByZXN1bHQ6IFJHQkFDb2xvclR5cGUgPSBudWxsIGFzIGFueVxyXG4gICAgaGV4ID0gaGV4Py5yZXBsYWNlQWxsKFwiI1wiLCBcIlwiKS50cmltKClcclxuICAgIGlmICghaGV4KSB7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdFxyXG4gICAgfVxyXG4gICAgY29uc3QgYXJyID0gc3BsaXRTdHJpbmcoaGV4LCAyKVxyXG4gICAgaWYgKGFyci5sZW5ndGggPT0gMykge1xyXG4gICAgICAgIHJlc3VsdCA9IHt9IGFzIGFueVxyXG4gICAgICAgIHJlc3VsdC5yID0gcGFyc2VJbnQoYXJyWzBdLCAxNilcclxuICAgICAgICByZXN1bHQuZyA9IHBhcnNlSW50KGFyclsxXSwgMTYpXHJcbiAgICAgICAgcmVzdWx0LmIgPSBwYXJzZUludChhcnJbMl0sIDE2KVxyXG4gICAgICAgIHJlc3VsdC5hID0gMjU1XHJcbiAgICAgICAgcmVzdWx0LmEwMSA9IDFcclxuICAgICAgICByZXN1bHQuYTEwMCA9IDEwMFxyXG4gICAgICAgIHJldHVybiByZXN1bHRcclxuICAgIH1cclxuICAgIGlmIChhcnIubGVuZ3RoID09IDQpIHtcclxuICAgICAgICByZXN1bHQgPSB7fSBhcyBhbnlcclxuICAgICAgICByZXN1bHQuciA9IHBhcnNlSW50KGFyclswXSwgMTYpXHJcbiAgICAgICAgcmVzdWx0LmcgPSBwYXJzZUludChhcnJbMV0sIDE2KVxyXG4gICAgICAgIHJlc3VsdC5iID0gcGFyc2VJbnQoYXJyWzJdLCAxNilcclxuICAgICAgICByZXN1bHQuYSA9IHBhcnNlSW50KGFyclszXSwgMTYpXHJcbiAgICAgICAgcmVzdWx0LmEwMSA9IHJlc3VsdC5hIC8gMjU1LjBcclxuICAgICAgICByZXN1bHQuYTEwMCA9IHRvSW50KHJlc3VsdC5hMDEgKiAxMDApXHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdFxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdFxyXG59XHJcblxyXG4vKipcclxuICog5bCGIFJHQkEg6L2s5o2i5Li65Y2B5YWt6L+b5Yi255qE6aKc6Imy5a2X56ym5Liy77yI5bCP5YaZ77yM5aaC77yaI2ZmMDAxMTk577yJXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcmdiYVRvSGV4KHJnYmE6IFJHQkFDb2xvclR5cGUpIHtcclxuICAgIGlmICghcmdiYSkge1xyXG4gICAgICAgIHJldHVybiBcIlwiXHJcbiAgICB9XHJcbiAgICBjb25zdCBnZXRIZXggPSAodjogbnVtYmVyKSA9PiB2LnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCBcIjBcIilcclxuICAgIGxldCBhSGV4ID0gXCJmZlwiXHJcbiAgICBpZiAoaXNOdW1iZXIocmdiYS5hKSkge1xyXG4gICAgICAgIGFIZXggPSBnZXRIZXgocmdiYS5hIGFzIG51bWJlcilcclxuICAgIH0gZWxzZSBpZiAoaXNOdW1iZXIocmdiYS5hMDEpKSB7XHJcbiAgICAgICAgYUhleCA9IGdldEhleCh0b0ludCgocmdiYS5hMDEgYXMgbnVtYmVyKSAqIDI1NSkpXHJcbiAgICB9IGVsc2UgaWYgKGlzTnVtYmVyKHJnYmEuYTEwMCkpIHtcclxuICAgICAgICBhSGV4ID0gZ2V0SGV4KHRvSW50KCgocmdiYS5hMTAwIGFzIG51bWJlcikgLyAxMDAuMCkgKiAyNTUpKVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGAjJHtnZXRIZXgocmdiYS5yKX0ke2dldEhleChyZ2JhLmcpfSR7Z2V0SGV4KHJnYmEuYil9JHthSGV4fWBcclxufVxyXG4iXX0=