{"version":3,"sources":["webpack://x-js-kit/webpack/universalModuleDefinition","webpack://x-js-kit/./src/constant/regex.ts","webpack://x-js-kit/./src/common/regexp.ts","webpack://x-js-kit/./src/constant/map.ts","webpack://x-js-kit/./src/entity/method-result.ts","webpack://x-js-kit/./src/common/convert.ts","webpack://x-js-kit/./src/common/string.ts","webpack://x-js-kit/./src/common/data.ts","webpack://x-js-kit/./src/common/lib.ts","webpack://x-js-kit/./src/cache/localStorage.ts","webpack://x-js-kit/./src/cache/index.ts","webpack://x-js-kit/./src/device/browser.ts","webpack://x-js-kit/./src/check/common.ts","webpack://x-js-kit/./src/check/url.ts","webpack://x-js-kit/./src/check/browser.ts","webpack://x-js-kit/./src/check/index.ts","webpack://x-js-kit/./src/common/array.ts","webpack://x-js-kit/./src/common/cookie.ts","webpack://x-js-kit/./src/common/json.ts","webpack://x-js-kit/./src/common/enumTool.ts","webpack://x-js-kit/./src/entity/idCard.ts","webpack://x-js-kit/./src/common/idCard.ts","webpack://x-js-kit/./src/common/image.ts","webpack://x-js-kit/./src/common/random.ts","webpack://x-js-kit/./src/entity/keyValue.ts","webpack://x-js-kit/./src/common/url.ts","webpack://x-js-kit/./src/common/dom.ts","webpack://x-js-kit/./src/common/color.ts","webpack://x-js-kit/./src/common/index.ts","webpack://x-js-kit/./src/recorder/log.ts","webpack://x-js-kit/./src/config/index.ts","webpack://x-js-kit/./src/constant/index.ts","webpack://x-js-kit/./src/date/format.ts","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/isDate/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/toDate/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/isValid/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/locale/en-US/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/addMilliseconds/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/subMilliseconds/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack://x-js-kit/./node_modules/date-fns/esm/format/index.js","webpack://x-js-kit/./src/date/convert.ts","webpack://x-js-kit/./src/date/index.ts","webpack://x-js-kit/./src/declaration/index.ts","webpack://x-js-kit/./src/device/index.ts","webpack://x-js-kit/./src/entity/select.ts","webpack://x-js-kit/./src/entity/serialize.ts","webpack://x-js-kit/./src/recorder/dom.ts","webpack://x-js-kit/./src/entity/message.ts","webpack://x-js-kit/./src/entity/index.ts","webpack://x-js-kit/./src/recorder/index.ts","webpack://x-js-kit/./src/pattern/strategy.ts","webpack://x-js-kit/./src/pattern/singleton.ts","webpack://x-js-kit/./src/pattern/index.ts","webpack://x-js-kit/./src/timer/stopWatch.ts","webpack://x-js-kit/./src/timer/index.ts","webpack://x-js-kit/./src/validation/fieldMessage.ts","webpack://x-js-kit/./src/file/path.ts","webpack://x-js-kit/./src/file/img.ts","webpack://x-js-kit/./src/file/index.ts","webpack://x-js-kit/./src/index.ts","webpack://x-js-kit/./src/validation/index.ts","webpack://x-js-kit/webpack/bootstrap","webpack://x-js-kit/webpack/startup","webpack://x-js-kit/webpack/runtime/define property getters","webpack://x-js-kit/webpack/runtime/global","webpack://x-js-kit/webpack/runtime/hasOwnProperty shorthand","webpack://x-js-kit/webpack/runtime/make namespace object","webpack://x-js-kit/webpack/runtime/hot module replacement"],"names":["root","factory","exports","module","define","amd","a","i","this","RegExpEngineEnum","email","allEnglish","allNumber","http","https","httpOrHttps","partNumber","cnMobile","htmlLeftRightBlank","chinaIDCard","chineseChar","escapeReg","str","engine","ECMA","replace","DOTNET","htmlEntityMap","MethodResult","undefined","MethodResult2","toIntDefault","val","defaultValue","result","parseInt","isNaN","toInt","toIntNull","toFloatDefault","parseFloat","toFloat","toFloatNull","splitString","stepCharCount","strLen","length","startIndex","push","substr","ellipsis","len","ellipsisChars","substring","getNumber","mt","match","trim","lTrim","rTrim","lTrimString","strToRemove","isIgnoreCase","RegExp","rTrimString","trimString","trimHTML","html","test","equalsIgnoreCase","b","toUpperCase","equalsIgnoreCaseAndTrim","contains","source","search","sourceStr","includes","escapeHtml","String","s","repeat","repeatCount","count","join","Builder","_arr","toString","builder","format","token","removeBlankLines","replaceNewlineToBr","getChineseWord","combineStr","separator","subStrs","filter","k","isRangeText","msg","isSuccess","message","itemReg","split","arr","removeStartLine","removeWhiteSpace","replaceAll","isNull","obj","isArray","Object","prototype","call","isNumber","isObject","isNullOrEmpty","isUndefined","isNullOrWhiteSpace","isFunction","isString","isBoolean","isNullOrUndefined","isUpper","isLower","toLowerCase","isDate","isError","Error","isIn","value","args","isInIgnoreCase","find","defaultTryRunErrorHandler","isServer","window","isBowser","getGlobalObject","global","globalObject","getDocument","document","getLocalStorage","localStorage","getSymbol","desc","g","Symbol","createNamespace","name","tokens","shift","getValue","path","temp","forEach","keyName","e","deepClone","JSON","parse","stringify","tryRun","fn","setTryRunErrorHandler","mergeObjectAndCombineSameFunc","target","sources","reduce","preItem","currentItem","pre","cur","keys","key","preValue","currentValue","isPreValueFunction","isCurrentValueFunction","clearExpiredIntervalId","globalCacheName","autoClearExpiredTimeSpan","isInited","getStore","store","getItem","defaultGlobalLocalStorage","time","Date","valueOf","items","setItem","clearExpired","runClearExpiredInterval","getGlobalCache","cacheValue","setGlobalCacheName","oldValue","removeItem","add","cache","remove","get","ignoreExpireCheck","item","expire","ch","clearInterval","setInterval","getAutoClearExpiredTimeSpan","setAutoClearExpiredTimeSpan","timeSpan","BrowserWidthTypeEnum","isEmail","regexConst","isAllEnglish","isAllNumber","isCNMobile","isChinaIDCard","isAlphaNumericKeyCode","keyCode","hasChineseWord","isHttp","url","isHttps","isHttpOrHttpsUrl","size","width","height","getWidthType","ExtraSmall","Small","Medium","Large","ExtraLarge","isIE","version","userAgent","ua","navigator","isExtraSmall","isSmall","isMedium","isLarge","isExtraLarge","isReload","performance","navigation","type","common","browser","splitArray","stepCount","arrLen","newArray","maxCount","Math","ceil","slice","unique","Array","from","Set","union","arr1","arr2","a2","intersect","x","diff","a1","diff1","diff2","map","createNumberArray","startValue","endValue","step","stepValue","isNotNullOrEmpty","isAnyNullOrEmpty","arrs","some","isAnyNotNullOrEmpty","isAllNullOrEmpty","every","isAllNotNullOrEmpty","sKey","decodeURIComponent","encodeURIComponent","sValue","vEnd","sPath","sDomain","bSecure","sExpires","constructor","Number","Infinity","toUTCString","hasItem","aKeys","nIdx","hasKey","json","hasValue","keyValue","r","toParams","m","toObject","convertEnumToList","em","lst","toEnum","isValueInEnum","CNIDCardEntity","toCNIDCardEntity","birthday","ImageSrcReg","replaceImgSrc","newAttrName","_id","create","random","padEnd","uuid","d","getTime","c","floor","range","min","max","id","KeyValue","extend","KeyNameValue","splitUrlByQueryInfo","questionMarkIndex","lastIndexOf","wellNumberMarkIndex","indexOf","hostPart","queryPart","hashPart","mergeUrlBySplitQueryInfo","splitInfo","convertQueryStringToKeyValueArray","queryString","has","convertKeyValueArrayToQueryString","appendQueryString","urlQueryKeyValue","queryInfo","getUrlParameter","paramName","results","exec","appendElementToLimitContainer","containerElement","subElement","ellipsisElement","isInsertToStart","conEle","firstChild","insertBefore","appendChild","_x_js_kit_limit_edge_index","_x_js_kit_limit_inserted_ellipsis","childNodes","removeChild","isOverflow","childLength","hexToEntity","hex","a01","a100","rgbaToHex","rgba","getHex","v","padStart","aHex","LevelTypeEnum","string","array","convert","cookie","data","enumTool","idCard","image","lib","regexp","dom","color","defaultLogRecorder","content","option","console","info","Promise","resolve","warn","error","getLogRecorder","level","isAsync","fun","infoAsync","warnAsync","errorAsync","logger","logFunc","write","writeAsync","setLoggerRecorder","logRecorder","recorder","toHourStringFromMins","mins","h","dateValue","fmtStr","fmt","dt","o","getMonth","getDate","getHours","getMinutes","getSeconds","S","getMilliseconds","$1","getFullYear","requiredArgs","required","TypeError","arguments","toDate","argument","argStr","stack","NaN","isValid","dirtyDate","date","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","options","defaultWidth","formats","formatLong","full","long","medium","short","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","matchPattern","matchPatterns","defaultMatchWidth","matchResult","matchedString","parsePatterns","defaultParseWidth","findIndex","pattern","findKey","valueCallback","rest","object","predicate","hasOwnProperty","code","formatDistance","tokenValue","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseResult","any","index","weekStartsOn","firstWeekContainsDate","toInteger","addMilliseconds","dirtyAmount","timestamp","amount","subMilliseconds","MILLISECONDS_IN_DAY","startOfUTCISOWeek","getUTCDay","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","addLeadingZeros","targetLength","sign","output","abs","signedYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","numberOfDigits","milliseconds","getUTCMilliseconds","pow","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","y","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","M","L","w","week","round","getUTCWeek","I","isoWeek","getUTCISOWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","isoDayOfWeek","dayPeriodEnumValue","B","H","K","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","O","z","t","originalDate","T","dateLongFormatter","timeLongFormatter","p","P","dateTimeFormat","datePattern","timePattern","getTimezoneOffsetInMilliseconds","utcDate","UTC","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","throwProtectedError","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","formatterOptions","firstCharacter","longFormatter","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","msPerYear","msPerMonth","msPerDay","msPerHour","msPerMin","msPerSec","toEntity","model","hour","second","millisecond","getDay","toCounterEntity","ms","dateStr","mts","convertDateTimeToYMDHMS","DateFormat","convertDateTimeToYMDHMSMS","SelectItem","text","isSelected","BaseClass","jsonObj","proto","getPrototypeOf","getOwnPropertyNames","getOwnPropertyDescriptor","KeyTypeEnum","MessageHead","MessageBody","MessageEntity","select","serialize","methodResult","DOMDataRecorder","win","location","href","refer","attrKeyName","attrPrefix","attrTypeName","attrValueName","eles","node","getAttribute","hasAttribute","txt","innerHTML","innerText","log","StrategyItem","handler","Strategy","_strategyList","classIdSymbol","getInstance","ClassName","newObj","defineProperty","strategy","singleton","StopWatch","_value","_startFlag","_stopFlag","stopWatch","FieldMessageItem","ops","fieldItems","isShowAll","isShow","oldShowValue","oldItem","needShowFields","unNeedShowFields","FieldMessageModel","isPassed","itemList","getStandardPath","isFolder","getFileName","splitIndex","getFileNameWithoutExt","fileName","dotIndex","getExt","getExtWithoutDot","isLocalDiskRootPath","getLocalPathDiskName","getPathFolderName","isFolderPath","isSystemRecyclePath","isOfficeTempPath","startsWith","convertPathToFileUrl","getRealWidthHeightFromExif","orientation","check","config","constant","declaration","device","entity","timer","validation","fieldMessage","file","img","__webpack_module_cache__","__webpack_require__","moduleId","execOptions","__webpack_modules__","require","definition","enumerable","globalThis","Function","prop","toStringTag","currentChildModule","blockingPromises","currentUpdateApplyHandlers","queuedInvalidatedModules","currentModuleData","installedModules","currentParents","registeredStatusHandlers","currentStatus","setStatus","newStatus","waitForBlockingPromises","blocker","all","then","hotCheck","applyOnUpdate","hmrM","update","applyInvalidatedModules","updatedModules","hmrC","promises","internalApply","hotApply","errors","Boolean","dispose","reportError","err","outdatedModules","apply","modules","list","hmrI","hmrD","me","hot","request","active","parents","children","createPropertyDescriptor","configurable","set","chunkId","promise","trackBlockingPromise","createRequire","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_selfInvalidated","_disposeHandlers","_main","_requireSelf","accept","dep","callback","decline","addDisposeHandler","removeDisposeHandler","idx","splice","invalidate","status","l","addStatusHandler","removeStatusHandler"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","/**\r\n * 完整的电子邮箱地址（不区分大小写）\r\n */\r\nexport const email = /^\\w+((-\\w+)|(\\.\\w+))*@[a-z0-9]+((\\.|-)[a-z0-9]+)*\\.[a-z0-9]+$/i\r\n/**\r\n * 全部是英文字母\r\n */\r\nexport const allEnglish = /^[a-zA-Z]+$/\r\n/**\r\n * 全部是数字\r\n */\r\nexport const allNumber = /^[0-9]+$/\r\n/**\r\n * 以【http://】开头（不区分大小写）\r\n */\r\nexport const http = /^http:\\/\\//i\r\n/**\r\n * 以【https://】开头（不区分大小写）\r\n */\r\nexport const https = /^https:\\/\\//i\r\n/**\r\n * 以【http://】或【https://】开头（不区分大小写）\r\n */\r\nexport const httpOrHttps = /^https?:\\/\\//i\r\n/**\r\n * 包含整数或浮点数\r\n */\r\nexport const partNumber = /\\d+(\\.\\d+)?/\r\n/**\r\n * 中国大陆手机号\r\n */\r\nexport const cnMobile = /^1\\d{10}$/\r\n/**\r\n * html左右空白字符（不区分大小写）\r\n */\r\nexport const htmlLeftRightBlank = /^((\\s+)|((<br\\/?>)+)|((nbsp;)+))|((\\s+)|((<br\\/?>)+)|((nbsp;)+))$/gi\r\n/**\r\n * 中国大陆身份证（18、15位）\r\n */\r\nexport const chinaIDCard = /(^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$)|(^[1-9]\\d{5}\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}$)/\r\n/**\r\n * 单个中文字符\r\n */\r\nexport const chineseChar = /[\\u4E00-\\u9FFF]/\r\n","/**\r\n * 正则引擎枚举\r\n */\r\nexport enum RegExpEngineEnum {\r\n    ECMA = \"ECMA\",\r\n    DOTNET = \"DOTNET\"\r\n}\r\n\r\n/**\r\n * 将字符串中的关键字符进行编码，以避免在传给Regex时，这些字符被当成正则中的关键字处理\r\n */\r\nexport function escapeReg(str: string, engine: RegExpEngineEnum = RegExpEngineEnum.ECMA) {\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    if (engine == RegExpEngineEnum.ECMA) {\r\n        return str.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\").replace(/-/g, \"\\\\x2d\")\r\n    }\r\n    if (engine == RegExpEngineEnum.DOTNET) {\r\n        //https://docs.microsoft.com/en-us/dotnet/api/system.text.regularexpressions.regex.escape?view=net-6.0\r\n        return str.replace(/[\\\\*+?|{[()^$.# ]/g, \"\\\\$&\")\r\n    }\r\n    return \"\"\r\n}\r\n","import { AnyKeyValueType } from \"../declaration/common\"\r\n\r\n/**\r\n* html转义实体\r\n*/\r\nexport const htmlEntityMap: AnyKeyValueType = {\r\n    \"&\": \"&amp;\",\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': '&quot;',\r\n    \"'\": '&#39;',\r\n    \"/\": '&#x2F;'\r\n}","/**\r\n * 消息结果实体（首字母小写）\r\n */\r\nexport class MethodResult<TResult = any, TData = any> {\r\n    /**\r\n     * 该方法执行的逻辑是否成功（默认为true）\r\n     */\r\n    isSuccess: boolean = true\r\n    /**\r\n     * 该方法返回的消息提示\r\n     */\r\n    message: string = \"\"\r\n    /**\r\n     * 该方法返回的错误消息提示\r\n     */\r\n    errorMessage: string = \"\"\r\n    /**\r\n     * 该方法返回的结果\r\n     */\r\n    result: TResult = undefined as any\r\n    /**\r\n     * 其它数据（比如用dictionary存放不同的数据结果）\r\n     */\r\n    data: TData = undefined as any\r\n}\r\n\r\n/**\r\n * 消息结果实体（首字母大写）\r\n */\r\nexport class MethodResult2<TResult = any, TData = any> {\r\n    /**\r\n     * 该方法执行的逻辑是否成功（默认为true）\r\n     */\r\n    IsSuccess: boolean = true\r\n    /**\r\n     * 该方法返回的消息提示\r\n     */\r\n    Message: string = \"\"\r\n    /**\r\n     * 该方法返回的错误消息提示\r\n     */\r\n    ErrorMessage: string = \"\"\r\n    /**\r\n     * 该方法返回的结果\r\n     */\r\n    Result: TResult = undefined as any\r\n    /**\r\n     * 其它数据（比如用dictionary存放不同的数据结果）\r\n     */\r\n    Data: TData = undefined as any\r\n}\r\n","/**\r\n * 将值转为int型，若失败，则返回defaultValue\r\n * @param val 要转换的值\r\n * @param  defaultValue 默认值\r\n * @returns 转换结果\r\n */\r\nexport function toIntDefault(val: any, defaultValue: number | null) {\r\n    const result = parseInt(val, 10)\r\n    if (isNaN(result)) {\r\n        return defaultValue\r\n    }\r\n    return result\r\n}\r\n\r\n/**\r\n * 将值转为int型，若失败，则返回0\r\n * @param  val 要转换的值\r\n */\r\nexport function toInt(val: any): number {\r\n    return toIntDefault(val, 0) as number\r\n}\r\n\r\n/**\r\n * 将值转为int型，若失败，则返回null\r\n * @param  val 要转换的值\r\n * @returns 如果转换失败，则返回null\r\n */\r\nexport function toIntNull(val: any) {\r\n    return toIntDefault(val, null)\r\n}\r\n\r\n/**\r\n * 将值转为float型，若失败，则返回defaultValue\r\n * @param val 要转换的值\r\n * @param defaultValue 默认值\r\n * @returns  转换结果\r\n */\r\nexport function toFloatDefault(val: any, defaultValue: number | null) {\r\n    const result = parseFloat(val)\r\n    if (isNaN(result)) {\r\n        return defaultValue\r\n    }\r\n    return result\r\n}\r\n\r\n/**\r\n * 将值转为float型，若失败，则返回0\r\n * @param  val 要转换的值\r\n * @returns  转换结果\r\n */\r\nexport function toFloat(val: any): number {\r\n    return toFloatDefault(val, 0) as number\r\n}\r\n\r\n/**\r\n * 将值转为float型，若失败，则返回null\r\n * @param  val 要转换的值\r\n * @returns  转换结果\r\n */\r\nexport function toFloatNull(val: any) {\r\n    return toFloatDefault(val, null)\r\n}\r\n","import { partNumber, htmlLeftRightBlank, chineseChar } from \"../constant/regex\"\r\nimport { escapeReg } from \"./regexp\"\r\nimport { htmlEntityMap } from \"../constant/map\"\r\nimport { MethodResult } from \"../entity/method-result\"\r\nimport { toInt } from \"./convert\"\r\n\r\n/**\r\n * 将字符串按一定字符数拆分成字符串数组\r\n */\r\nexport function splitString(str: string, stepCharCount: number): string[] {\r\n    if (!str || stepCharCount <= 0) {\r\n        return []\r\n    }\r\n    const strLen = str.length\r\n    if (strLen <= stepCharCount) {\r\n        return [str]\r\n    }\r\n    const result: string[] = []\r\n    let startIndex = 0\r\n    while (startIndex < strLen) {\r\n        result.push(str.substr(startIndex, stepCharCount))\r\n        startIndex += stepCharCount\r\n    }\r\n    return result\r\n}\r\n\r\n/**\r\n * 截取字符串并以省略符号显示字符串\r\n * @param str 原字符串\r\n * @param len 要保留的字符长度\r\n * @param ellipsisChars 被截断的字符显示的符号\r\n */\r\nexport function ellipsis(str: string, len: number, ellipsisChars = \"...\"): string {\r\n    if (!str || len <= 0) {\r\n        return \"\"\r\n    }\r\n    if (str.length <= len) {\r\n        return str\r\n    }\r\n    return str.substring(0, len) + ellipsisChars\r\n}\r\n\r\n/**\r\n * 从字符串中提取数字（可带小数点）。如：\"abc123.01cde\"->123.01\r\n */\r\nexport function getNumber(str: string): number | null {\r\n    if (!str) {\r\n        return null\r\n    }\r\n    const mt = str.match(partNumber)\r\n    if (!mt || !mt.length) {\r\n        return null\r\n    }\r\n    return parseFloat(mt[0])\r\n}\r\n\r\n/**\r\n * 去左右空格\r\n * @param  str 待处理字符串\r\n * @returns  处理后的字符串\r\n */\r\nexport function trim(str: string) {\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    return str.replace(/^\\s+|\\s+$/g, \"\")\r\n}\r\n\r\n/**\r\n * 去左空格\r\n * @param  str 待处理字符串\r\n * @returns  处理后的字符串\r\n */\r\nexport function lTrim(str: string) {\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    return str.replace(/^\\s+/, \"\")\r\n}\r\n\r\n/**\r\n * 去右空格\r\n * @param  str 待处理字符串\r\n * @returns  处理后的值\r\n */\r\nexport function rTrim(str: string) {\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    return str.replace(/\\s+$/, \"\")\r\n}\r\n\r\n/**\r\n * 去掉左边的指定字符串\r\n * @param str 待处理的字符串\r\n * @param strToRemove 需要移除的字符串\r\n * @param isIgnoreCase 是否忽略大小写\r\n * @returns 处理结果\r\n */\r\nexport function lTrimString(str: string, strToRemove: string, isIgnoreCase: boolean = false) {\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    if (!strToRemove) {\r\n        return str\r\n    }\r\n    return str.replace(new RegExp(`^(${escapeReg(strToRemove)})*`, isIgnoreCase ? \"gi\" : \"g\"), \"\")\r\n}\r\n\r\n/**\r\n * 去掉右边的指定字符串\r\n * @param str 待处理的字符串\r\n * @param strToRemove 需要移除的字符串\r\n * @param isIgnoreCase 是否忽略大小写\r\n * @returns 处理结果\r\n */\r\nexport function rTrimString(str: string, strToRemove: string, isIgnoreCase: boolean = false) {\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    if (!strToRemove) {\r\n        return str\r\n    }\r\n    return str.replace(new RegExp(`(${escapeReg(strToRemove)})*$`, isIgnoreCase ? \"gi\" : \"g\"), \"\")\r\n}\r\n\r\n/**\r\n * 去左右指定的字符串\r\n * @param str 待处理的字符串\r\n * @param strToRemove 需要移除的字符串\r\n * @param isIgnoreCase 是否忽略大小写\r\n * @returns 处理结果\r\n */\r\nexport function trimString(str: string, strToRemove: string, isIgnoreCase: boolean = false) {\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    if (!strToRemove) {\r\n        return str\r\n    }\r\n    return str.replace(new RegExp(`(^(${escapeReg(strToRemove)})*)|((${escapeReg(strToRemove)})*$)`, isIgnoreCase ? \"gi\" : \"g\"), \"\")\r\n}\r\n\r\n/**\r\n * 从html字符串中移除左右空白占位符\r\n * @param html 待处理的字符串\r\n * @returns 处理结果\r\n */\r\nexport function trimHTML(html: string) {\r\n    let str = html\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    while (htmlLeftRightBlank.test(str)) {\r\n        str = str.replace(htmlLeftRightBlank, \"\")\r\n    }\r\n    return str\r\n}\r\n\r\n/**\r\n * 判断两个字符串是否相等（忽略大小写）\r\n */\r\nexport function equalsIgnoreCase(a: string, b: string) {\r\n    return (a || \"\").toUpperCase() == (b || \"\").toUpperCase()\r\n}\r\n\r\n/**\r\n * 判断两个字符串是否相等（忽略大小写+去左右空白）\r\n */\r\nexport function equalsIgnoreCaseAndTrim(a: string, b: string) {\r\n    return equalsIgnoreCase(trim(a), trim(b))\r\n}\r\n\r\n/**\r\n * 指定源字符串source中是否包含search字符串\r\n * @param  source 源字符串\r\n * @param  search 要查找的字符串\r\n * @param  isIgnoreCase 是否忽略大小写(默认为false)\r\n * @returns  结果\r\n */\r\nexport function contains(source: string, search: string, isIgnoreCase: boolean = false) {\r\n    let sourceStr = source\r\n    let str = search\r\n    if (!sourceStr) {\r\n        return false\r\n    }\r\n    if (str === \"\") {\r\n        return true\r\n    }\r\n    if (!str) {\r\n        return false\r\n    }\r\n    if (isIgnoreCase) {\r\n        sourceStr = sourceStr.toUpperCase()\r\n        str = str.toUpperCase()\r\n    }\r\n    return sourceStr.includes(str)\r\n}\r\n\r\n/**\r\n * 将html标签转换为实体形式\r\n * @param  html 需要被替换的html\r\n * @returns  转换后的值\r\n */\r\nexport function escapeHtml(html: string) {\r\n    if (!html) {\r\n        return \"\"\r\n    }\r\n    return String(html).replace(/[&<>\"'/]/g, (s) => htmlEntityMap[s])\r\n}\r\n\r\n/**\r\n * @param   str 要重复的字符串\r\n * @param   repeatCount 重复次数\r\n * @returns  新的字符串\r\n */\r\nexport function repeat(str: string, repeatCount: number) {\r\n    let count = repeatCount\r\n    if (!str || count <= 0) {\r\n        return \"\"\r\n    }\r\n    const s = []\r\n    while (count--) {\r\n        s.push(str)\r\n    }\r\n    return s.join(\"\")\r\n}\r\n\r\n/**\r\n * 字符串批量构建器（无需使用\"+\"进行字符串的拼接，直接使用此对象的append方法后，再toString即可得到拼好的字符串）\r\n */\r\nexport class Builder<T> {\r\n    private _arr: T[] = []\r\n    /**\r\n     * 追加项\r\n     * @param items 待追加的项\r\n     * @returns this\r\n     */\r\n    append(...items: T[]) {\r\n        this._arr.push(...items)\r\n        return this\r\n    }\r\n    /**\r\n     * 返回已合并的所有项的字符串\r\n     */\r\n    toString() {\r\n        return this._arr.join(\"\")\r\n    }\r\n    /**\r\n     * 清空当前的构建器中的所有项\r\n     * @returns this\r\n     */\r\n    clear() {\r\n        this._arr = []\r\n        return this\r\n    }\r\n    /**\r\n     * 返回构建器中所有项的字符串总的字符长度\r\n     */\r\n    length() {\r\n        return this.toString().length\r\n    }\r\n}\r\n\r\nexport const builder = Builder\r\n\r\n/**\r\n * 使用模板格式化字符串\r\n * @param str 模板，如：\"今天是星期{0}，已成交{1}单！\"\r\n * @param args 模板中的参数\r\n */\r\nexport function format(str: string, ...args: any[]) {\r\n    if (!str || !args.length) {\r\n        return str\r\n    }\r\n    let result = str\r\n    for (let token = 0; token < args.length; token++) {\r\n        result = result.replace(new RegExp(\"\\\\{\" + token + \"\\\\}\", \"gi\"), args[token])\r\n    }\r\n    return result\r\n}\r\n\r\n/**\r\n * 删除空白行（空白行是指：此行为空白且末尾为 \\r 或 \\n）\r\n */\r\nexport function removeBlankLines(str: string): string {\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    return str.replace(/^\\s*[\\r\\n]/gm, \"\")\r\n}\r\n\r\n/**\r\n * 将文本中的字符串形式或换行符形式的 \"\\r\\n\" 和 \"\\n\" 统一替换成 <br/>\r\n */\r\nexport function replaceNewlineToBr(str: string) {\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    return str.replace(/(\\\\r\\\\n)|(\\r\\n)/gi, \"<br/>\").replace(/(\\\\n)|(\\n)/gi, \"<br/>\")\r\n}\r\n\r\n/**\r\n * 获取字符串中的中文字符\r\n */\r\nexport function getChineseWord(str: string) {\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    const match = str.match(new RegExp(chineseChar, \"g\"))\r\n    if (!match || !match.length) {\r\n        return \"\"\r\n    }\r\n    return match.join(\"\")\r\n}\r\n\r\n/**\r\n * 按分隔符合并字符串\r\n */\r\nexport function combineStr(separator: string, ...subStrs: string[]) {\r\n    if (!subStrs || !subStrs.length) {\r\n        return \"\"\r\n    }\r\n    return subStrs.filter((k) => !!k).join(separator)\r\n}\r\n\r\n/**\r\n * 判断字符串是否表示一个集合中的某一项或某一个范围（注：一个范围用英文冒号分隔，多个范围用英文逗号分隔。自动兼容全半角分隔符和多余的空格），如：\r\n * 【1】表示第1项\r\n * 【2】表示第2项\r\n * 【2:5】表示第2项到第5项\r\n * 【-1】表示最后一项\r\n * 【-2】表示倒数第2项\r\n * 【-5:-2】表示倒数第5项到倒数第2项\r\n * 【2,4:7,-5:-2】表示第2项和第4到7项和倒数第5项至倒数第2项\r\n */\r\nexport function isRangeText(str: string) {\r\n    const msg = new MethodResult()\r\n    str = str?.replace(/，/g, \",\").replace(/：/g, \":\").replace(/\\s/g, \"\")\r\n    str = trimString(str, \",\")\r\n    if (!str) {\r\n        msg.isSuccess = false\r\n        msg.message = \"必须提供一个有效的范围！\"\r\n        return msg\r\n    }\r\n    const itemReg = /^-?\\d+$/\r\n    const items = str.split(\",\")\r\n    for (const item of items) {\r\n        const arr = item.split(\":\")\r\n        if (!(arr.length == 1 || arr.length == 2)) {\r\n            msg.isSuccess = false\r\n            msg.message = \"格式不正确！\"\r\n            break\r\n        }\r\n        if (!itemReg.test(arr[0]) || !toInt(arr[0])) {\r\n            msg.isSuccess = false\r\n            msg.message = \"格式不正确，必须为整数，且不能为 0！\"\r\n            break\r\n        }\r\n        if (arr.length == 2 && (!itemReg.test(arr[1]) || !toInt(arr[1]))) {\r\n            msg.isSuccess = false\r\n            msg.message = \"格式不正确，必须为整数，且不能为 0！\"\r\n            break\r\n        }\r\n        if (arr.length == 2 && toInt(arr[0]) < 0 && toInt(arr[1]) > 0) {\r\n            msg.isSuccess = false\r\n            msg.message = \"左侧数字为负数时，右侧数字必须也同时为负数！\"\r\n            break\r\n        }\r\n        if (arr.length == 2 && toInt(arr[0]) > 0 && toInt(arr[1]) < 0) {\r\n            continue\r\n        }\r\n        if (arr.length == 2 && toInt(arr[0]) > toInt(arr[1])) {\r\n            msg.isSuccess = false\r\n            msg.message = \"格式不正确，左侧数字必须小于等于右侧数字！\"\r\n            break\r\n        }\r\n    }\r\n    return msg\r\n}\r\n\r\n/**\r\n * 删除字符串前面的下划线\r\n */\r\nexport function removeStartLine(str: string) {\r\n    return lTrimString(str, \"_\")\r\n}\r\n\r\n/**\r\n * 删除所有空白字符\r\n */\r\nexport function removeWhiteSpace(str: string) {\r\n    if (!str) {\r\n        return \"\"\r\n    }\r\n    return str.replaceAll(/\\s+/g, \"\")\r\n}\r\n","import { trim } from \"./string\"\r\n\r\n/**\r\n * 判断obj是否为null\r\n */\r\nexport function isNull(obj: any) {\r\n    return obj === null\r\n}\r\n\r\n/**\r\n * 判断obj是否为数组\r\n */\r\nexport function isArray(obj: any) {\r\n    if (!obj) {\r\n        return false\r\n    }\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\"\r\n}\r\n\r\n/**\r\n * 判断val是否为数字\r\n * @param val 要判断的值\r\n * @returns  判断结果\r\n */\r\nexport function isNumber(val: any) {\r\n    return (typeof val === \"number\" || typeof val === \"string\") && val !== \"\" && !isNaN(val as any)\r\n}\r\n\r\n/**\r\n * 判断指定值是否为一个对象\r\n * @param  val 要判断的值\r\n * @returns  判断结果\r\n */\r\nexport function isObject(val: any) {\r\n    return !!(val && typeof val === \"object\")\r\n}\r\n\r\n/**\r\n * 判断指定值为null或undefined或\"\"\r\n * @param  val 要判断的值\r\n * @returns 判断结果\r\n */\r\nexport function isNullOrEmpty(val: any) {\r\n    return isUndefined(val) || isNull(val) || val === \"\"\r\n}\r\n\r\n/**\r\n * 判断指定值为null或undefined或\"\"或空白字符串\r\n * @param  val 要判断的值\r\n * @returns 判断结果\r\n */\r\nexport function isNullOrWhiteSpace(val: any) {\r\n    return isUndefined(val) || isNull(val) || trim(val) === \"\"\r\n}\r\n\r\n/**\r\n * 判断指定值是否为function\r\n * @param  val 要判断的值\r\n * @returns 判断结果\r\n */\r\nexport function isFunction(val: any) {\r\n    return !!(val && Object.prototype.toString.call(val) == \"[object Function]\")\r\n}\r\n\r\n/**\r\n * 判断指定值是否为String\r\n * @param  val 要判断的值\r\n * @returns 判断结果\r\n */\r\nexport function isString(val: any) {\r\n    return typeof val == \"string\" || val instanceof String\r\n}\r\n\r\n/**\r\n * 判断指定字符串是否为\"true\"或\"false\"\r\n * @param  val 要判断的值\r\n * @returns 判断结果\r\n */\r\nexport function isBoolean(val: string) {\r\n    return /^true|false$/i.test(val)\r\n}\r\n\r\n/**\r\n * 判断指定值是否为undefined\r\n * @param  val 要判断的值\r\n * @returns 判断结果\r\n */\r\nexport function isUndefined(val: any) {\r\n    return val === undefined || typeof val === \"undefined\"\r\n}\r\n\r\n/**\r\n * 判断指定值是否为 null 或 undefined\r\n * @param  val 要判断的值\r\n * @returns 判断结果\r\n */\r\nexport function isNullOrUndefined(val: any) {\r\n    return isNull(val) || isUndefined(val)\r\n}\r\n\r\n/**\r\n * 指定值是否全部为大写\r\n * @param  val 要判断的值\r\n * @returns 判断结果\r\n */\r\nexport function isUpper(val: string) {\r\n    return !!(val && val.toUpperCase() === val)\r\n}\r\n\r\n/**\r\n * 指定值是否全部为小写\r\n * @param  val 要判断的值\r\n * @returns 判断结果\r\n */\r\nexport function isLower(val: string) {\r\n    return !!(val && val.toLowerCase() === val)\r\n}\r\n\r\n/**\r\n * 指定值是否为Date对象\r\n * @param val 要判断的值\r\n * @returns 判断结果\r\n */\r\nexport function isDate(val: any) {\r\n    return !!(val && Object.prototype.toString.call(val) === \"[object Date]\" && !isNaN(val))\r\n}\r\n\r\n/**\r\n * 指定值是否为Error对象\r\n * @param val 要判断的值\r\n * @returns 判断结果\r\n */\r\nexport function isError(val: any) {\r\n    return !!(val && val instanceof Error)\r\n}\r\n\r\n/**\r\n * 判断value值在后面的参数中是否存在\r\n * @param value 要判断的值\r\n * @param args 参数列表\r\n */\r\nexport function isIn<T>(value: T, ...args: T[]): boolean {\r\n    if (!args || !args.length) {\r\n        return false\r\n    }\r\n    return args.includes(value)\r\n}\r\n\r\n/**\r\n * 判断字符串value值在后面的参数中是否存在（忽略大小写）\r\n * @param value 要判断的值\r\n * @param args 参数列表\r\n */\r\nexport function isInIgnoreCase(value: string, ...args: string[]): boolean {\r\n    if (!args || !args.length) {\r\n        return false\r\n    }\r\n    if (!isString(value)) {\r\n        return args.includes(value)\r\n    }\r\n    return !!args.find((k) => (k || \"\").toUpperCase() === value.toUpperCase())\r\n}\r\n","import { AnyKeyValueType, AnyFunctionType } from \"../declaration/common\"\r\nimport { isFunction } from \"./data\"\r\n\r\n/**\r\n * tryRun在调用异常时执行的函数\r\n */\r\nlet defaultTryRunErrorHandler: AnyFunctionType = () => null\r\n\r\n/**\r\n * 是否为服务器环境（仅仅是判断 window 未定义）\r\n */\r\nexport function isServer() {\r\n    return typeof window === \"undefined\"\r\n}\r\n\r\n/**\r\n * 是否为浏览器环境\r\n */\r\nexport function isBowser() {\r\n    return !isServer()\r\n}\r\n\r\n/**\r\n * 获取全局对象\r\n */\r\n// eslint-disable-next-line no-undef\r\nexport function getGlobalObject(): Window | NodeJS.Global {\r\n    if (isBowser()) {\r\n        return window\r\n    }\r\n    return global\r\n}\r\n\r\n/**\r\n * 当前环境中的全局对象\r\n */\r\nexport const globalObject = getGlobalObject()\r\n\r\n/**\r\n * 获取document对象，若没有，则为null\r\n */\r\nexport function getDocument(): Document {\r\n    return ((globalObject as any).document || null) as Document\r\n}\r\n\r\n/**\r\n * 当前环境中的document对象，若没有，则为null\r\n */\r\nexport const document = getDocument()\r\n\r\n/**\r\n * 获取localStorage对象，若没有，则为null\r\n */\r\nexport function getLocalStorage(): Storage {\r\n    return ((globalObject as any).localStorage || null) as Storage\r\n}\r\n\r\n/**\r\n * 获取Symbol类型，若没有，则为null\r\n */\r\nexport function getSymbol(desc?: string): any {\r\n    const g = globalObject as any\r\n    return g.Symbol ? g.Symbol(desc) : null\r\n}\r\n\r\n/**\r\n * 创建全局命名空间\r\n * @param name 名称，如\"A.B.C\"\r\n * @returns 全局对象，如：window.A.B.C\r\n */\r\nexport function createNamespace(name: string): any {\r\n    if (!name) {\r\n        return null as any\r\n    }\r\n    let obj: any = globalObject\r\n    const tokens = name.split(\".\")\r\n    let token = \"\"\r\n    while (tokens.length > 0) {\r\n        token = tokens.shift() as string\r\n        if (typeof obj[token] === \"undefined\") {\r\n            obj[token] = {}\r\n        }\r\n        obj = obj[token]\r\n    }\r\n    return obj\r\n}\r\n\r\n/**\r\n * 获取指定对象的指定属性\r\n * @param obj 对象\r\n * @param path 属性路径，如：a.b.c\r\n * @returns 返回obj.a.b.c，如果获取失败，则返回null\r\n */\r\nexport function getValue<T>(obj: AnyKeyValueType, path: string): T | null {\r\n    if (!obj || !path) {\r\n        return null\r\n    }\r\n    let temp = obj\r\n    try {\r\n        path.split(\".\").forEach((keyName) => {\r\n            temp = temp[keyName]\r\n        })\r\n        if (typeof temp == \"undefined\") {\r\n            return null\r\n        }\r\n        return temp as T\r\n    } catch (e) {\r\n        return null\r\n    }\r\n}\r\n\r\n/**\r\n * 深度clone\r\n */\r\nexport function deepClone<T>(obj: T): T | null {\r\n    try {\r\n        return JSON.parse(JSON.stringify(obj))\r\n    } catch (e) {\r\n        return null\r\n    }\r\n}\r\n\r\n/**\r\n * 尝试运行指定function；若异常，则执行全局配置的异常处理函数tryRunErrorHandler，并返回null\r\n * @param fn  函数名\r\n * @param args 参数\r\n */\r\nexport function tryRun<T>(fn: AnyFunctionType, ...args: any[]): T | null {\r\n    if (!fn) {\r\n        return null\r\n    }\r\n    try {\r\n        return fn(...args) as T\r\n    } catch (e) {\r\n        if (defaultTryRunErrorHandler) {\r\n            defaultTryRunErrorHandler(e)\r\n        }\r\n        return null\r\n    }\r\n}\r\n\r\n/**\r\n * 重新设置全局异常处理函数\r\n */\r\nexport function setTryRunErrorHandler(fn: AnyFunctionType) {\r\n    defaultTryRunErrorHandler = fn\r\n}\r\n\r\n/**\r\n * 合并多个对象，与 Object.assign 的行为唯一的区别是：把相同的函数合并到一起，并从第一个参数的此函数一直调用到最后一个参数的此函数\r\n * @param objs 要合并的对象\r\n * @returns 合并后的新对象\r\n */\r\nexport function mergeObjectAndCombineSameFunc<T = any>(target: T, ...sources: T[]): T {\r\n    if (!sources || !sources.length) {\r\n        return target\r\n    }\r\n    const result = sources.reduce((preItem: any, currentItem: any) => {\r\n        if (!preItem) {\r\n            return currentItem\r\n        }\r\n        if (!currentItem) {\r\n            return preItem\r\n        }\r\n        const pre = { ...preItem }\r\n        const cur = { ...currentItem }\r\n        //合并function\r\n        Object.keys(pre).forEach((key) => {\r\n            const preValue: any = pre[key]\r\n            const currentValue: any = cur[key]\r\n            const isPreValueFunction: boolean = isFunction(preValue)\r\n            const isCurrentValueFunction: boolean = isFunction(currentValue)\r\n            if (!isPreValueFunction && !isCurrentValueFunction) {\r\n                return\r\n            }\r\n            if (isPreValueFunction && !isCurrentValueFunction) {\r\n                //上一项是函数，而下一项不是函数，则以上一项为准\r\n                cur[key] = preValue\r\n            } else if (!isPreValueFunction && isCurrentValueFunction) {\r\n                //上一项不是函数，下一项是函数，不用处理\r\n            } else {\r\n                //上一项与下一项的值均为函数，则合并\r\n                cur[key] = (...args: any[]) => {\r\n                    preValue(...args)\r\n                    currentValue(...args)\r\n                }\r\n            }\r\n            //删除上一项的值，便于后面的合并覆盖\r\n            pre[key] = undefined\r\n        })\r\n        return {\r\n            ...pre,\r\n            ...cur\r\n        }\r\n    }, target || {}) as T\r\n    return result\r\n}\r\n","import { getLocalStorage } from \"../common/lib\"\r\n\r\nlet globalCacheName = \"x-js-kit-localcache\"\r\n/**\r\n * 自动清理过期缓存的间隔时间（毫秒），默认为30分钟\r\n */\r\nlet autoClearExpiredTimeSpan = 30 * 60 * 1000\r\nlet clearExpiredIntervalId: number\r\nlet isInited = false\r\n\r\nexport interface ItemContentType<ValueType = any> {\r\n    /**\r\n     * 具体的缓存值\r\n     */\r\n    value: ValueType\r\n    /**\r\n     * 过期时间，若不指定，则无过期时间（此时间为：从1970年1月1日0时0分0秒（UTC，即协调世界时）到该日期的毫秒数。如：new Date().valueOf()）\r\n     */\r\n    expire?: number\r\n}\r\nexport interface GlobalCacheType<ValueType = any> {\r\n    /**\r\n     * 时间\r\n     */\r\n    time: number\r\n    /**\r\n     * 所有缓存项\r\n     */\r\n    items: { [key: string]: ItemContentType<ValueType> }\r\n}\r\n\r\n/**\r\n * 获取localStorage对象\r\n */\r\nfunction getStore<ValueType>(): Storage {\r\n    const store = getLocalStorage()\r\n    if (!store || isInited) {\r\n        return store\r\n    }\r\n    //初始化\r\n    isInited = true\r\n    //设置默认缓存值\r\n    if (!store.getItem(globalCacheName)) {\r\n        const defaultGlobalLocalStorage: GlobalCacheType<ValueType> = {\r\n            time: new Date().valueOf(),\r\n            items: {}\r\n        }\r\n        store.setItem(globalCacheName, JSON.stringify(defaultGlobalLocalStorage))\r\n    }\r\n    //立即清理过期缓存\r\n    clearExpired()\r\n    //执行定时清理过期缓存\r\n    runClearExpiredInterval()\r\n    return store\r\n}\r\n//立即初始化\r\ngetStore()\r\n\r\n/**\r\n * 返回全局缓存对象\r\n */\r\nexport function getGlobalCache<ValueType>(): GlobalCacheType<ValueType> | null {\r\n    const cacheValue = getStore().getItem(globalCacheName) as string\r\n    if (!cacheValue) {\r\n        return null\r\n    }\r\n    return JSON.parse(cacheValue) as GlobalCacheType<ValueType>\r\n}\r\n/**\r\n * 修改localStorage缓存的默认名称\r\n */\r\nexport function setGlobalCacheName(name: string) {\r\n    const oldValue = getStore().getItem(globalCacheName) as string\r\n    getStore().removeItem(globalCacheName)\r\n    globalCacheName = name\r\n    getStore().setItem(globalCacheName, oldValue)\r\n}\r\n\r\n/**\r\n * 添加数据至缓存（默认每30分钟自动清理所有过期的缓存）\r\n */\r\nexport function add<ValueType>(key: string, value: ItemContentType<ValueType>) {\r\n    const cache = getGlobalCache()\r\n    if (!cache) {\r\n        return\r\n    }\r\n    cache.items[key] = value\r\n    getStore().setItem(globalCacheName, JSON.stringify(cache))\r\n}\r\n\r\n/**\r\n * 删除指定缓存\r\n */\r\nexport function remove(key: string) {\r\n    const cache = getGlobalCache()\r\n    if (!cache) {\r\n        return\r\n    }\r\n    delete cache.items[key]\r\n    getStore().setItem(globalCacheName, JSON.stringify(cache))\r\n}\r\n\r\n/**\r\n * 读取指定缓存\r\n * @param key 缓存key\r\n * @param ignoreExpireCheck 是否忽略过期检测，默认为false.（true:即使过期，只要还没被清理，则依然返回。false:如果已过期，则删除此缓存并返回null）\r\n */\r\nexport function get<ValueType>(key: string, ignoreExpireCheck: boolean = false): ItemContentType<ValueType> | null {\r\n    const cache = getGlobalCache()\r\n    if (!cache) {\r\n        return null\r\n    }\r\n    const item = cache.items[key] as ItemContentType<ValueType>\r\n    if (!item) {\r\n        return null\r\n    }\r\n    if (!ignoreExpireCheck && item.expire && item.expire < new Date().valueOf()) {\r\n        remove(key)\r\n        return null\r\n    }\r\n    return item\r\n}\r\n\r\n/**\r\n * 清理过期缓存\r\n */\r\nexport function clearExpired() {\r\n    const ch = getGlobalCache()\r\n    if (!ch) return\r\n    Object.keys(ch.items).forEach((key) => {\r\n        const item = ch.items[key]\r\n        if (!item || !item.expire) {\r\n            return\r\n        }\r\n        if (item.expire < new Date().valueOf()) {\r\n            remove(key)\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * 执行自动定期清理\r\n */\r\nfunction runClearExpiredInterval() {\r\n    if (clearExpiredIntervalId) {\r\n        clearInterval(clearExpiredIntervalId)\r\n    }\r\n    clearExpiredIntervalId = setInterval(clearExpired, autoClearExpiredTimeSpan) as any\r\n}\r\n\r\n/**\r\n * 获取自动清理过期缓存的间隔（毫秒）\r\n */\r\nexport function getAutoClearExpiredTimeSpan() {\r\n    return autoClearExpiredTimeSpan\r\n}\r\n\r\n/**\r\n * 设置自动清理过期缓存的间隔（毫秒），并按计划执行清理\r\n */\r\nexport function setAutoClearExpiredTimeSpan(timeSpan: number) {\r\n    if (timeSpan <= 0) {\r\n        throw new Error(\"timeSpan must > 0.\")\r\n    }\r\n    autoClearExpiredTimeSpan = timeSpan\r\n    runClearExpiredInterval()\r\n}\r\n","/* eslint-disable import/no-default-export */\r\nimport * as localStorage from \"./localStorage\"\r\n\r\nexport default {\r\n    /**\r\n     * 带过期时间的缓存（就是浏览器中的localStorage，只是在value的结构中设置了指定的节点来表明什么时候过期，如果过期，则不返回该数据）\r\n     */\r\n    localStorage\r\n}\r\n","import { globalObject, document } from \"../common/lib\"\r\n\r\n/**\r\n * 浏览器宽度类别枚举\r\n */\r\nexport enum BrowserWidthTypeEnum {\r\n    /**\r\n     * 非常小（<576px）\r\n     */\r\n    \"ExtraSmall\" = \"ExtraSmall\",\r\n    /**\r\n     * 小（≥576px 且 <768px）\r\n     */\r\n    \"Small\" = \"Small\",\r\n    /**\r\n     * 中（≥768px 且 <992px）\r\n     */\r\n    \"Medium\" = \"Medium\",\r\n    /**\r\n     * 大（≥992px 且 <1200px）\r\n     */\r\n    \"Large\" = \"Large\",\r\n    /**\r\n     * 非常大（≥1200px）\r\n     */\r\n    \"ExtraLarge\" = \"ExtraLarge\"\r\n}\r\n\r\n/**\r\n * 获取当前浏览器窗口的大小，如：{\"width\": 1024,\"height\": 768}\r\n */\r\nexport function size(): { width: number, height: number } {\r\n    return {\r\n        width: (<Window>globalObject).innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\r\n        height: (<Window>globalObject).innerHeight || document.documentElement.clientHeight || document.body.clientHeight\r\n    }\r\n}\r\n\r\n/**\r\n * 返回当前浏览器窗口的宽度类型\r\n */\r\nexport function getWidthType(): BrowserWidthTypeEnum {\r\n    const { width } = size()\r\n    if (width < 576) {\r\n        return BrowserWidthTypeEnum.ExtraSmall\r\n    }\r\n    if (width >= 576 && width < 768) {\r\n        return BrowserWidthTypeEnum.Small\r\n    }\r\n    if (width >= 768 && width < 992) {\r\n        return BrowserWidthTypeEnum.Medium\r\n    }\r\n    if (width >= 992 && width < 1200) {\r\n        return BrowserWidthTypeEnum.Large\r\n    }\r\n    return BrowserWidthTypeEnum.ExtraLarge\r\n}","import * as regexConst from \"../constant/regex\"\r\n\r\n/**\r\n * 判断是否为email\r\n */\r\nexport function isEmail(val: string) {\r\n    return regexConst.email.test(val)\r\n}\r\n/**\r\n * 判断是否全为英文字符（a-zA-Z）\r\n */\r\nexport function isAllEnglish(val: string) {\r\n    return regexConst.allEnglish.test(val)\r\n}\r\n/**\r\n * 判断是否全为数字字符（0-9）\r\n */\r\nexport function isAllNumber(val: string) {\r\n    return regexConst.allNumber.test(val)\r\n}\r\n/**\r\n * 判断是否为中国大陆手机号（只考虑以1开头的11位数字即可）\r\n */\r\nexport function isCNMobile(val: string) {\r\n    return regexConst.cnMobile.test(val)\r\n}\r\n/**\r\n * 判断是否为中国大陆身份证号码\r\n */\r\nexport function isChinaIDCard(val: string) {\r\n    return regexConst.chinaIDCard.test(val)\r\n}\r\n/**\r\n * 判断键盘按键的keyCode是否为字母和数字\r\n */\r\nexport function isAlphaNumericKeyCode(keyCode: number) {\r\n    return (keyCode >= 65 && keyCode <= 90) || (keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 105)\r\n}\r\n/**\r\n * 判断字符串中是否包含中文字符\r\n */\r\nexport function hasChineseWord(str: string) {\r\n    return regexConst.chineseChar.test(str)\r\n}\r\n","import * as regexConst from \"../constant/regex\"\r\n\r\n/**\r\n * url是否以【http://】开头\r\n */\r\nexport function isHttp(url: string) {\r\n    if (!url) {\r\n        return false\r\n    }\r\n    return regexConst.http.test(url.toLowerCase())\r\n}\r\n\r\n/**\r\n * url是否以【https://】开头\r\n */\r\nexport function isHttps(url: string) {\r\n    if (!url) {\r\n        return false\r\n    }\r\n    return regexConst.https.test(url.toLowerCase())\r\n}\r\n\r\n/**\r\n * url是否为http或https的地址\r\n */\r\nexport function isHttpOrHttpsUrl(url: string) {\r\n    if (!url) {\r\n        return false\r\n    }\r\n    return regexConst.httpOrHttps.test(url.toLowerCase())\r\n}","import { isBowser, getGlobalObject, globalObject } from \"../common/lib\"\r\nimport { getWidthType, BrowserWidthTypeEnum } from \"../device/browser\"\r\n\r\n/**\r\n * 判断是否为IE浏览器（仅支持<=IE 11）\r\n * @param version 具体的IE版本号\r\n * @param userAgent 浏览器代理字符串，若不指定，则取navigator.userAgent\r\n */\r\nexport function isIE(version?: number, userAgent?: string): boolean {\r\n    let ua = userAgent || \"\"\r\n    if (isBowser() && !ua) {\r\n        ua = (<Window>getGlobalObject()).navigator.userAgent\r\n    }\r\n    if (!ua) {\r\n        throw new Error(\"You must set userAgent in this method.\")\r\n    }\r\n    if (!version) {\r\n        return /msie/i.test(ua) || !!ua.match(/Trident\\/7\\./i)\r\n    }\r\n    if (version == 11) {\r\n        return !!ua.match(/Trident\\/7\\./i)\r\n    }\r\n    return (ua.match(new RegExp(\"MSIE\\\\s+(\\\\d+)\", \"i\")) || [])[1] == version.toString()\r\n}\r\n\r\n/**\r\n * 是否非常小的宽度\r\n */\r\nexport function isExtraSmall() {\r\n    return getWidthType() == BrowserWidthTypeEnum.ExtraSmall\r\n}\r\n\r\n/**\r\n * 是否小的宽度\r\n */\r\nexport function isSmall() {\r\n    return getWidthType() == BrowserWidthTypeEnum.Small\r\n}\r\n\r\n/**\r\n * 是否中等宽度\r\n */\r\nexport function isMedium() {\r\n    return getWidthType() == BrowserWidthTypeEnum.Medium\r\n}\r\n\r\n/**\r\n * 是否大的宽度\r\n */\r\nexport function isLarge() {\r\n    return getWidthType() == BrowserWidthTypeEnum.Large\r\n}\r\n\r\n/**\r\n * 是否非常大的宽度\r\n */\r\nexport function isExtraLarge() {\r\n    return getWidthType() == BrowserWidthTypeEnum.ExtraLarge\r\n}\r\n\r\n/**\r\n * 当前网页是否通过F5刷新、重新加载按钮或location.reload()方法加载进来的\r\n * 判断方法：performance.navigation.type == 1\r\n */\r\nexport function isReload() {\r\n    const g = <Window>globalObject\r\n    return g.performance && g.performance.navigation && g.performance.navigation.type == 1\r\n}\r\n","/* eslint-disable import/no-default-export */\r\nimport * as common from \"./common\"\r\nimport * as url from \"./url\"\r\nimport * as browser from \"./browser\"\r\n\r\nexport default {\r\n    /**\r\n     * 公共的数据校验\r\n     */\r\n    common,\r\n    /**\r\n     * url相关的校验\r\n     */\r\n    url,\r\n    /**\r\n     * 浏览器相关校验\r\n     */\r\n    browser\r\n}\r\n","/**\r\n * 将一个数组拆分为多个数组\r\n * @param arr 原数组\r\n * @param stepCount 拆分后，每个数组最多包含的项数量\r\n */\r\nexport function splitArray<T>(arr: T[], stepCount: number): T[][] {\r\n    if (!arr || !arr.length || stepCount <= 0) {\r\n        return []\r\n    }\r\n    const arrLen = arr.length\r\n    if (arrLen <= stepCount) {\r\n        return [arr]\r\n    }\r\n    const newArray: T[][] = []\r\n    const maxCount = Math.ceil(arrLen / stepCount)\r\n    let startIndex = 0\r\n    for (let i = 0; i < maxCount; i++) {\r\n        newArray[i] = arr.slice(startIndex, (i + 1) * stepCount)\r\n        startIndex += stepCount\r\n    }\r\n    return newArray\r\n}\r\n\r\n/**\r\n * 去掉array中的重复项\r\n * @param arr 需要去重的数组\r\n */\r\nexport function unique<T>(arr: T[]): T[] {\r\n    if (!arr) {\r\n        return []\r\n    }\r\n    return Array.from(new Set(arr))\r\n}\r\n\r\n/**\r\n * 合并两个数组（未去重）\r\n * @param arr1 数组1\r\n * @param arr2 数组2\r\n */\r\nexport function union<T>(arr1: T[], arr2: T[]): T[] {\r\n    const a1 = arr1 || []\r\n    const a2 = arr2 || []\r\n    return [...a1, ...a2]\r\n}\r\n\r\n/**\r\n * 获取两个数组的交集（已去重）\r\n * @param arr1 数组1\r\n * @param arr2 数组2\r\n */\r\nexport function intersect<T>(arr1: T[], arr2: T[]): T[] {\r\n    const a1 = arr1 || []\r\n    const a2 = arr2 || []\r\n    return unique(a1.filter((x) => a2.includes(x)))\r\n}\r\n\r\n/**\r\n * 获取两个数组的差集（已去重）\r\n * @param arr1 数组1\r\n * @param arr2 数组2\r\n */\r\nexport function diff<T>(arr1: T[], arr2: T[]): T[] {\r\n    const a1 = arr1 || []\r\n    const a2 = arr2 || []\r\n    const diff1 = a1.filter((x) => !a2.includes(x))\r\n    const diff2 = a2.filter((x) => !a1.includes(x))\r\n    return unique([...diff1, ...diff2])\r\n}\r\n\r\n/**\r\n * 遍历指定数组并返回一个新数组（与原生map不一样的地方是：原生map中未过滤null和undefined，而此方法会过滤）\r\n * @param arr 需要遍历的数组\r\n * @param fn 处理函数\r\n */\r\nexport function map<TargetType = any, SourceType = any>(arr: SourceType[], fn: (item: SourceType, idx?: number) => TargetType | null | undefined): TargetType[] {\r\n    if (!arr || !fn) {\r\n        return []\r\n    }\r\n    const result: TargetType[] = []\r\n    let temp: TargetType | null | undefined\r\n    for (let i = 0; i < arr.length; i++) {\r\n        temp = fn(arr[i], i)\r\n        if (temp == null || typeof temp == \"undefined\") {\r\n            continue\r\n        }\r\n        result.push(temp)\r\n    }\r\n    return result\r\n}\r\n\r\n/**\r\n * 根据起始值和终点值创建一个数组，如：[1,2,3,4....]\r\n * @param startValue 起始值（包含）\r\n * @param endValue 终点值（包含）\r\n * @param step 步长，默认为 1\r\n */\r\nexport function createNumberArray(startValue: number, endValue: number, step?: number) {\r\n    let stepValue = 1\r\n    if (step) {\r\n        stepValue = step\r\n    }\r\n    const arr = [] as number[]\r\n    for (let i = startValue; i <= endValue; i += stepValue) {\r\n        arr.push(i)\r\n    }\r\n    return arr\r\n}\r\n\r\n/**\r\n * 判断数组是否为空\r\n */\r\nexport function isNullOrEmpty(arr: any[]) {\r\n    return !arr || arr.length == 0\r\n}\r\n\r\n/**\r\n * 判断数组不为空\r\n */\r\nexport function isNotNullOrEmpty(arr: any[]) {\r\n    return !isNullOrEmpty(arr)\r\n}\r\n\r\n/**\r\n * 判断参数数组中是否至少有一个数组为空\r\n */\r\nexport function isAnyNullOrEmpty(...arrs: any[][]) {\r\n    if (!arrs || arrs.length == 0) {\r\n        return true\r\n    }\r\n    return arrs.some((k) => isNullOrEmpty(k))\r\n}\r\n\r\n/**\r\n * 判断参数数组中是否至少有一个数组不为空\r\n */\r\nexport function isAnyNotNullOrEmpty(...arrs: any[][]) {\r\n    if (!arrs || arrs.length == 0) {\r\n        return false\r\n    }\r\n    return arrs.some((k) => isNotNullOrEmpty(k))\r\n}\r\n\r\n/**\r\n * 判断参数数组中是否所有的数组都为空\r\n */\r\nexport function isAllNullOrEmpty(...arrs: any[][]) {\r\n    if (!arrs || arrs.length == 0) {\r\n        return true\r\n    }\r\n    return arrs.every((k) => isNullOrEmpty(k))\r\n}\r\n\r\n/**\r\n * 判断参数数组中是否所有的数组都不为空\r\n */\r\nexport function isAllNotNullOrEmpty(...arrs: any[][]) {\r\n    if (!arrs || arrs.length == 0) {\r\n        return false\r\n    }\r\n    return arrs.every((k) => isNotNullOrEmpty(k))\r\n}\r\n","import { document } from \"./lib\"\r\n\r\n//reference：https://developer.mozilla.org/zh-CN/docs/Web/API/Document/cookie\r\n\r\n/**\r\n * 获取cookie内容\r\n * @param sKey cookie键名\r\n * @returns 内容\r\n */\r\nexport function getItem(sKey: string): string | null {\r\n    if (!document) {\r\n        return null\r\n    }\r\n    return decodeURIComponent(document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + encodeURIComponent(sKey).replace(/[-.+*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\")) || null;\r\n}\r\n\r\n/**\r\n * 设置cookie内容\r\n * @param sKey 键名\r\n * @param sValue 值\r\n * @param vEnd 到期时间（可为Number/String/Date对象，若为Number，则设置的是max-age；若为String或Date，则设置的是整个expires）\r\n * @param sPath 路径（默认/）\r\n * @param sDomain 域名（默认\"\"）\r\n * @param bSecure 是否只会被https传输（默认false）\r\n * @returns 是否设置成功\r\n */\r\nexport function setItem(sKey: string, sValue: string, vEnd: number | string | Date, sPath: string = \"/\", sDomain: string = \"\", bSecure: boolean = false): boolean {\r\n    if (!document) {\r\n        return false\r\n    }\r\n    if (!sKey || /^(?:expires|max-age|path|domain|secure)$/i.test(sKey)) {\r\n        return false\r\n    }\r\n    let sExpires = \"\"\r\n    if (vEnd) {\r\n        switch (vEnd.constructor) {\r\n            case Number:\r\n                sExpires = vEnd === Infinity ? \"; expires=Fri, 31 Dec 9999 23:59:59 GMT\" : \"; max-age=\" + vEnd\r\n                break\r\n            case String:\r\n                sExpires = \"; expires=\" + vEnd\r\n                break\r\n            case Date:\r\n                sExpires = \"; expires=\" + (vEnd as Date).toUTCString()\r\n                break\r\n        }\r\n    }\r\n    document.cookie = encodeURIComponent(sKey) + \"=\" + encodeURIComponent(sValue) + sExpires + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\") + (bSecure ? \"; secure\" : \"\")\r\n    return true\r\n}\r\n\r\n/**\r\n * 是否包含某个cookie\r\n * @param sKey 键名\r\n * @returns 是否包含\r\n */\r\nexport function hasItem(sKey: string): boolean {\r\n    if (!document) {\r\n        return false\r\n    }\r\n    return (new RegExp(\"(?:^|;\\\\s*)\" + encodeURIComponent(sKey).replace(/[-.+*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie)\r\n}\r\n\r\n/**\r\n * 删除cookie\r\n * @param sKey 键名\r\n * @param sPath 路径（默认/）\r\n * @param sDomain 域名（默认\"\"）\r\n * @returns 是否删除成功\r\n */\r\nexport function removeItem(sKey: string, sPath: string = \"/\", sDomain: string = \"\"): boolean {\r\n    if (!document) {\r\n        return false\r\n    }\r\n    if (!sKey || !hasItem(sKey)) {\r\n        return false\r\n    }\r\n    document.cookie = encodeURIComponent(sKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\")\r\n    return true\r\n}\r\n\r\n\r\n\r\n/**\r\n * 获取当前cookie的全部键名\r\n * @returns 所有键名\r\n */\r\nexport function keys(): string[] {\r\n    if (!document) {\r\n        return []\r\n    }\r\n    const aKeys = document.cookie.replace(/((?:^|\\s*;)[^=]+)(?=;|$)|^\\s*|\\s*(?:=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:=[^;]*)?;\\s*/)\r\n    for (let nIdx = 0; nIdx < aKeys.length; nIdx++) {\r\n        aKeys[nIdx] = decodeURIComponent(aKeys[nIdx])\r\n    }\r\n    return aKeys\r\n}","import { AnyKeyValueType } from \"../declaration/common\"\r\nimport { isArray } from \"./data\"\r\n\r\n/**\r\n   * 是否包含名key\r\n   * @param json json对象\r\n   * @param keyName key名\r\n   * @returns 判断结果\r\n   */\r\nexport function hasKey(json: AnyKeyValueType, keyName: string) {\r\n    if (!json) {\r\n        return false\r\n    }\r\n    return Object.keys(json).includes(keyName)\r\n}\r\n\r\n/**\r\n * 是否包含值value\r\n * @param  json json对象\r\n * @param keyValue value值\r\n * @returns 判断结果\r\n */\r\nexport function hasValue(json: AnyKeyValueType, keyValue: any) {\r\n    if (!json) {\r\n        return false\r\n    }\r\n    let r = false\r\n    for (const k in json) {\r\n        if (json[k] === keyValue) {\r\n            r = true\r\n            break\r\n        }\r\n    }\r\n    return r\r\n}\r\n\r\n/**\r\n * json对象转成param形式的字符串，如{a:1,b:2,c:[3,4,5]}=>\"a=1&b=2&c=3&c=4&c=5\"\r\n * @param  json 待转换的json数据源\r\n * @returns 转换结果\r\n */\r\nexport function toParams(json: AnyKeyValueType) {\r\n    if (!json) return \"\";\r\n    const arr = []\r\n    let temp = \"\";\r\n    for (const m in json) {\r\n        if (isArray(json[m])) {\r\n            temp = json[m].join(\"&\" + m + \"=\");\r\n        } else {\r\n            temp = json[m];\r\n        }\r\n        arr.push(m + \"=\" + temp);\r\n    }\r\n    return arr.join(\"&\");\r\n}\r\n\r\n/**\r\n * 将json字符串转换为对象，如果转换失败，则返回null\r\n * @param json json字符串\r\n */\r\nexport function toObject<T>(json: string): T | null {\r\n    if (!json) {\r\n        return null\r\n    }\r\n    let result: T | null = null\r\n    try {\r\n        result = JSON.parse(json)\r\n    } catch {\r\n        //\r\n    }\r\n    return result\r\n}","import { KeyValue } from \"../entity/keyValue\"\r\nimport { isNullOrUndefined } from \"./data\"\r\n\r\n/**\r\n * 将枚举转换为KeyValue列表\r\n */\r\nexport function convertEnumToList<T>(em: T): KeyValue[] {\r\n    const lst = [] as KeyValue[]\r\n    for (const key in em) {\r\n        if (!isNaN(Number(key))) {\r\n            continue\r\n        }\r\n        const item = {} as KeyValue\r\n        item.key = key\r\n        item.value = em[key]\r\n        lst.push(item)\r\n    }\r\n    return lst\r\n}\r\n\r\n/**\r\n *  将字符串或数字转换为枚举，若转换失败则取枚举的第一项或取自定义的默认枚举\r\n */\r\nexport function toEnum<T>(em: T, value: string | number, defaultValue?: T[keyof T]): T[keyof T] {\r\n    const lst = convertEnumToList(em)\r\n    if (!isNullOrUndefined(value)) {\r\n        const m = lst.find((k) => k.value == value)\r\n        if (m) {\r\n            return (em as any)[m.key]\r\n        }\r\n    }\r\n    if (!isNullOrUndefined(defaultValue)) {\r\n        return defaultValue as T[keyof T]\r\n    }\r\n    return (em as any)[lst[0].key]\r\n}\r\n\r\n/**\r\n * 判断一个值是否属于指定的枚举\r\n */\r\nexport function isValueInEnum<T>(em: T, value: string | number): boolean {\r\n    if (isNullOrUndefined(value)) {\r\n        return false\r\n    }\r\n    return !!convertEnumToList(em).find((k) => k.value == value)\r\n}\r\n","/**\r\n * 中国大陆身份证号码实体\r\n */\r\nexport class CNIDCardEntity {\r\n    /**\r\n     * 出生年月日\r\n     */\r\n    birthday: string = \"\"\r\n    /**\r\n     * 身份证长度\r\n     */\r\n    len: (15 | 18) = 18\r\n}","import { isChinaIDCard } from \"../check/common\"\r\nimport { CNIDCardEntity } from \"../entity/idCard\"\r\n\r\n/**\r\n * 将字符串转为中国大陆身份证实体\r\n */\r\nexport function toCNIDCardEntity(str: string): CNIDCardEntity | null {\r\n    let result: CNIDCardEntity = null as any\r\n    if (!isChinaIDCard(str)) {\r\n        return result\r\n    }\r\n    result = new CNIDCardEntity()\r\n    result.len = str.length as any\r\n    if (result.len == 15) {\r\n        result.birthday = \"19\" + str.substr(6, 6)\r\n    } else {\r\n        result.birthday = str.substr(6, 8)\r\n    }\r\n    result.birthday = result.birthday.substr(0, 4) + \"-\" + result.birthday.substr(4, 2) + \"-\" + result.birthday.substr(6, 2)\r\n    return result\r\n}","const ImageSrcReg = /(<img\\s+[^>]*)(src)(=[^>]*>)/gi\r\n\r\n/**\r\n * 替换html中所有img标签的src标签名称\r\n * 如：<img src=\"http://www.a.com/a.jpg\"/> ==> <img data-src=\"http://www.a.com/a.jpg\"/>\r\n * @param html html字符串\r\n * @param newAttrName 新的替代src的属性名，默认为data-src\r\n * @returns 新的html字符串\r\n */\r\nexport function replaceImgSrc(html: string, newAttrName: string = \"data-src\"): string {\r\n    if (!html) {\r\n        return \"\"\r\n    }\r\n    return html.replace(ImageSrcReg, `$1${newAttrName}$3`)\r\n}","/* eslint-disable no-bitwise */\r\nlet _id = 0\r\n\r\n/**\r\n * 生成字符长度为22的随机字符串（如：i8ejoqjq3khibr89soi31t）\r\n */\r\nexport function create() {\r\n    const str = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n    if (str.length < 22) {\r\n        return str.padEnd(22, \"0\")\r\n    }\r\n    return str.substr(0, 22)\r\n}\r\n\r\n/**\r\n * 生成UUID（如：24ff0a46-81c1-431b-a3de-68440bbc3045）\r\n */\r\nexport function uuid() {\r\n    //https://github.com/simongong/js-stackoverflow-highest-votes/blob/master/questions1-10/how-to-create-a-UUID-in-javascript.md\r\n    let d = new Date().getTime()\r\n    const str = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\r\n        const r = (d + Math.random() * 16) % 16 | 0\r\n        d = Math.floor(d / 16)\r\n        return (c == \"x\" ? r : (r & 0x7) | 0x8).toString(16)\r\n    })\r\n    return str\r\n}\r\n\r\n/**\r\n * 在min（含）与max（含）之间生成一个随机整数\r\n * @param min 最小值\r\n * @param max 最大值\r\n */\r\nexport function range(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min) + min)\r\n}\r\n\r\n/**\r\n * 返回一个自增加1的数字（第一次调用时返回1，往后每调用一次加1）\r\n */\r\nexport function id() {\r\n    return ++_id\r\n}\r\n","/**\r\n * 键值对实体\r\n */\r\nexport class KeyValue<ValueType = any, ExtendType = any> {\r\n    constructor(key: string, value: ValueType, extend?: ExtendType) {\r\n        this.key = key\r\n        this.value = value\r\n        this.extend = extend\r\n    }\r\n    /**\r\n     * 键名\r\n     */\r\n    key: string = \"\"\r\n    /**\r\n     * value值\r\n     */\r\n    value: ValueType\r\n    /**\r\n     * 扩展属性\r\n     */\r\n    extend?: ExtendType\r\n}\r\n\r\n/**\r\n * 键名值对实体\r\n */\r\nexport class KeyNameValue<ValueType = any, ExtendType = any> {\r\n    constructor(key: string, name: string, value: ValueType, extend?: ExtendType) {\r\n        this.key = key\r\n        this.name = name\r\n        this.value = value\r\n        this.extend = extend\r\n    }\r\n    /**\r\n     * 键名\r\n     */\r\n    key: string = \"\"\r\n    /**\r\n     * name名\r\n     */\r\n    name: string = \"\"\r\n    /**\r\n     * value值\r\n     */\r\n    value: ValueType\r\n    /**\r\n     * 扩展属性\r\n     */\r\n    extend?: ExtendType\r\n}","import { KeyValue } from \"../entity/keyValue\"\r\nimport { lTrimString } from \"./string\"\r\n\r\n/**\r\n * url分隔的类型\r\n */\r\nexport interface UrlSplitByQueryType {\r\n    /**\r\n     * 域名主机等主体部分\r\n     */\r\n    hostPart: string\r\n    /**\r\n     * 查询字符串部分\r\n     */\r\n    queryPart: string\r\n    /**\r\n     * 结尾的hash部分\r\n     */\r\n    hashPart: string\r\n}\r\n\r\n/**\r\n * 将url字符串以查询串分隔后，提取成三个部分（也就是以字符?和字符#中间的字符串为界限分隔）\r\n * 注意：边界不包含字符?或#\r\n * @param url url字符串\r\n */\r\nexport function splitUrlByQueryInfo(url: string): UrlSplitByQueryType {\r\n    const result = {} as UrlSplitByQueryType\r\n    result.hostPart = \"\"\r\n    result.queryPart = \"\"\r\n    result.hashPart = \"\"\r\n    if (!url) {\r\n        return result\r\n    }\r\n    const questionMarkIndex = url.lastIndexOf(\"?\")\r\n    const wellNumberMarkIndex = url.indexOf(\"#\")\r\n\r\n    //只存在查询串\r\n    if (questionMarkIndex >= 0 && wellNumberMarkIndex < 0) {\r\n        result.hostPart = url.substr(0, questionMarkIndex)\r\n        result.queryPart = lTrimString(url.substring(questionMarkIndex + 1), \"?\")\r\n        return result\r\n    }\r\n\r\n    //只存在hash\r\n    if (questionMarkIndex < 0 && wellNumberMarkIndex >= 0) {\r\n        result.hostPart = url.substr(0, wellNumberMarkIndex)\r\n        result.hashPart = lTrimString(url.substr(wellNumberMarkIndex + 1), \"#\")\r\n        return result\r\n    }\r\n\r\n    //同时存在查询串和hash\r\n    if (questionMarkIndex >= 0 && wellNumberMarkIndex >= 0) {\r\n        result.hostPart = url.substr(0, questionMarkIndex)\r\n        result.queryPart = lTrimString(url.substring(questionMarkIndex + 1, wellNumberMarkIndex), \"?\")\r\n        result.hashPart = lTrimString(url.substr(wellNumberMarkIndex + 1), \"#\")\r\n        return result\r\n    }\r\n\r\n    result.hostPart = url\r\n    return result\r\n}\r\n\r\n/**\r\n * 将url拆分对象合并成完整的url\r\n */\r\nexport function mergeUrlBySplitQueryInfo(splitInfo: UrlSplitByQueryType) {\r\n    if (!splitInfo) {\r\n        return \"\"\r\n    }\r\n    let url = splitInfo.hostPart || \"\"\r\n    if (splitInfo.queryPart) {\r\n        url += \"?\" + splitInfo.queryPart\r\n    }\r\n    if (splitInfo.hashPart) {\r\n        url += \"#\" + splitInfo.hashPart\r\n    }\r\n    return url\r\n}\r\n\r\n/**\r\n * 将查询串转换为key value数组（注意：若key重复，只处理第一个）\r\n * @param queryString 查询字符串，如：a=b&c=d\r\n */\r\nexport function convertQueryStringToKeyValueArray(queryString: string): KeyValue<string>[] {\r\n    const result = [] as KeyValue<string>[]\r\n    if (!queryString) {\r\n        return result\r\n    }\r\n    const keys = new Set()\r\n    queryString.split(\"&\").forEach((item) => {\r\n        if (!item) {\r\n            return\r\n        }\r\n        const [key, value] = item.split(\"=\")\r\n        if (!key) {\r\n            return\r\n        }\r\n        if (keys.has(key)) {\r\n            return\r\n        }\r\n        keys.add(key)\r\n        result.push(new KeyValue<string>(key, value))\r\n    })\r\n    return result\r\n}\r\n\r\n/**\r\n * 将查询串的key value数组转换成普通的字符串，如：a=b&c=d（注意：若key重复，只处理第一个）\r\n * @param arr key value数组\r\n */\r\nexport function convertKeyValueArrayToQueryString(arr: KeyValue<string>[]) {\r\n    if (!arr || !arr.length) {\r\n        return \"\"\r\n    }\r\n    const keys = new Set()\r\n    const queryString = [] as string[]\r\n    arr.forEach((item) => {\r\n        if (keys.has(item.key)) {\r\n            return\r\n        }\r\n        keys.add(item.key)\r\n        queryString.push(`${item.key}=${item.value}`)\r\n    })\r\n    return queryString.join(\"&\")\r\n}\r\n\r\n/**\r\n * 在url后面追加查询字符串，若其中key已存在，则覆盖\r\n * @param url url地址，如location.href\r\n * @param queryString 要追加的查询串，如：\"a=123&b=456\"\r\n */\r\nexport function appendQueryString(url: string, queryString: string) {\r\n    if (!url) {\r\n        return \"\"\r\n    }\r\n    if (!queryString) {\r\n        return url\r\n    }\r\n    const splitInfo = splitUrlByQueryInfo(url)\r\n    const urlQueryKeyValue = convertQueryStringToKeyValueArray(splitInfo.queryPart)\r\n    const appendQueryKeyValue = convertQueryStringToKeyValueArray(queryString)\r\n    appendQueryKeyValue.forEach((item) => {\r\n        //已存在，则修改\r\n        const queryInfo = urlQueryKeyValue.find((k) => k.key == item.key)\r\n        if (queryInfo) {\r\n            queryInfo.value = item.value\r\n            return\r\n        }\r\n        if (!item.value) {\r\n            return\r\n        }\r\n        //不存在，则追加\r\n        urlQueryKeyValue.push(new KeyValue<string>(item.key, item.value))\r\n    })\r\n    splitInfo.queryPart = convertKeyValueArrayToQueryString(urlQueryKeyValue)\r\n    return mergeUrlBySplitQueryInfo(splitInfo)\r\n}\r\n\r\n/**\r\n * 从查询串中获取指定参数\r\n * @param search 查询串，如：location.search\r\n * @param paramName 参数名\r\n */\r\nexport function getUrlParameter(search: string, paramName: string) {\r\n    const name = paramName.replace(/[[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\")\r\n    const regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\")\r\n    const results = regex.exec(search)\r\n    return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"))\r\n}\r\n","export interface AppendElementToLimitContainerResultType {\r\n    /**\r\n     * 子元素是否超出最大范围\r\n     */\r\n    isOverflow: boolean\r\n}\r\n\r\n/**\r\n * 在指定容器的开头或末尾追加一个子元素，并且限制此容器内的子元素的最大数量。如果超出最大数量，则显示一个占位元素\r\n * 应用场景：一个 div 需要实时显示无数条日志，每条日志占用一行，当日志过多时，限制显示的数量，并展示一个【更多】按钮供用户单击查看完整日志\r\n * @param containerElement 外层容器\r\n * @param subElement 子元素\r\n * @param maxCount 最大子元素数量\r\n * @param ellipsisElement 当子元素超过最大数量时，显示一个省略占位元素，如：<p>...</p>\r\n * @param isInsertToStart 是否将子元素追加到容器的开头\r\n */\r\nexport function appendElementToLimitContainer(\r\n    containerElement: HTMLElement,\r\n    subElement: HTMLElement,\r\n    maxCount: number,\r\n    ellipsisElement: HTMLElement,\r\n    isInsertToStart?: boolean\r\n): AppendElementToLimitContainerResultType {\r\n    const result = {} as AppendElementToLimitContainerResultType\r\n    result.isOverflow = false\r\n    if (!containerElement || !subElement) {\r\n        return result\r\n    }\r\n    const conEle = containerElement as HTMLElement & {\r\n        /**\r\n         * 范围边界元素\r\n         */\r\n        // eslint-disable-next-line camelcase\r\n        _x_js_kit_limit_edge_index: number\r\n        /**\r\n         * 是否已插入省略占位元素\r\n         */\r\n        // eslint-disable-next-line camelcase\r\n        _x_js_kit_limit_inserted_ellipsis: boolean\r\n    }\r\n    if (isInsertToStart && conEle.firstChild) {\r\n        conEle.insertBefore(subElement, conEle.firstChild)\r\n    } else {\r\n        conEle.appendChild(subElement)\r\n    }\r\n    //超出范围\r\n    if (conEle._x_js_kit_limit_edge_index > 0) {\r\n        if (!conEle._x_js_kit_limit_inserted_ellipsis) {\r\n            conEle.insertBefore(ellipsisElement, conEle.childNodes[isInsertToStart ? conEle._x_js_kit_limit_edge_index + 1 : conEle._x_js_kit_limit_edge_index])\r\n            conEle._x_js_kit_limit_inserted_ellipsis = true\r\n        }\r\n        conEle.removeChild(conEle.childNodes[isInsertToStart ? conEle._x_js_kit_limit_edge_index : conEle._x_js_kit_limit_edge_index + 1])\r\n        result.isOverflow = true\r\n        return result\r\n    }\r\n    //正常范围\r\n    const childLength = containerElement.childNodes.length\r\n    if (childLength == maxCount) {\r\n        conEle._x_js_kit_limit_edge_index = Math.ceil(childLength / 2)\r\n    }\r\n    return result\r\n}\r\n","import { toInt } from \"./convert\"\r\nimport { isNumber } from \"./data\"\r\nimport { splitString } from \"./string\"\r\n\r\n/**\r\n * 颜色实体\r\n */\r\nexport interface RGBAColorType {\r\n    /**\r\n     * 0-255\r\n     */\r\n    r: number\r\n    /**\r\n     * 0-255\r\n     */\r\n    g: number\r\n    /**\r\n     * 0-255\r\n     */\r\n    b: number\r\n    /**\r\n     * 0-255\r\n     */\r\n    a?: number\r\n    /**\r\n     * a 的 0~1 小数形式\r\n     */\r\n    a01?: number\r\n    /**\r\n     * a 的 0~100 百分比形式\r\n     */\r\n    a100?: number\r\n}\r\n\r\n/**\r\n * 将十六进制的 RGBA 颜色转换为实体对象\r\n */\r\nexport function hexToEntity(hex: string) {\r\n    let result: RGBAColorType = null as any\r\n    hex = hex?.replaceAll(\"#\", \"\").trim()\r\n    if (!hex) {\r\n        return result\r\n    }\r\n    const arr = splitString(hex, 2)\r\n    if (arr.length == 3) {\r\n        result = {} as any\r\n        result.r = parseInt(arr[0], 16)\r\n        result.g = parseInt(arr[1], 16)\r\n        result.b = parseInt(arr[2], 16)\r\n        result.a = 255\r\n        result.a01 = 1\r\n        result.a100 = 100\r\n        return result\r\n    }\r\n    if (arr.length == 4) {\r\n        result = {} as any\r\n        result.r = parseInt(arr[0], 16)\r\n        result.g = parseInt(arr[1], 16)\r\n        result.b = parseInt(arr[2], 16)\r\n        result.a = parseInt(arr[3], 16)\r\n        result.a01 = result.a / 255.0\r\n        result.a100 = toInt(result.a01 * 100)\r\n        return result\r\n    }\r\n    return result\r\n}\r\n\r\n/**\r\n * 将 RGBA 转换为十六进制的颜色字符串（小写，如：#ff001199）\r\n */\r\nexport function rgbaToHex(rgba: RGBAColorType) {\r\n    if (!rgba) {\r\n        return \"\"\r\n    }\r\n    const getHex = (v: number) => v.toString(16).padStart(2, \"0\")\r\n    let aHex = \"ff\"\r\n    if (isNumber(rgba.a)) {\r\n        aHex = getHex(rgba.a as number)\r\n    } else if (isNumber(rgba.a01)) {\r\n        aHex = getHex(toInt((rgba.a01 as number) * 255))\r\n    } else if (isNumber(rgba.a100)) {\r\n        aHex = getHex(toInt(((rgba.a100 as number) / 100.0) * 255))\r\n    }\r\n    return `#${getHex(rgba.r)}${getHex(rgba.g)}${getHex(rgba.b)}${aHex}`\r\n}\r\n","/* eslint-disable import/no-default-export */\r\nimport * as string from \"./string\"\r\nimport * as array from \"./array\"\r\nimport * as convert from \"./convert\"\r\nimport * as cookie from \"./cookie\"\r\nimport * as json from \"./json\"\r\nimport * as data from \"./data\"\r\nimport * as enumTool from \"./enumTool\"\r\nimport * as idCard from \"./idCard\"\r\nimport * as image from \"./image\"\r\nimport * as lib from \"./lib\"\r\nimport * as random from \"./random\"\r\nimport * as url from \"./url\"\r\nimport * as regexp from \"./regexp\"\r\nimport * as dom from \"./dom\"\r\nimport * as color from \"./color\"\r\n\r\nexport default {\r\n    /**\r\n     * 字符串操作\r\n     */\r\n    string,\r\n    /**\r\n     * 数组操作\r\n     */\r\n    array,\r\n    /**\r\n     * 数据类型转换操作\r\n     */\r\n    convert,\r\n    /**\r\n     * cookie操作相关\r\n     */\r\n    cookie,\r\n    /**\r\n     * json操作\r\n     */\r\n    json,\r\n    /**\r\n     * 数据类型判断\r\n     */\r\n    data,\r\n    /**\r\n     * 枚举工具类\r\n     */\r\n    enumTool,\r\n    /**\r\n     * 证件相关\r\n     */\r\n    idCard,\r\n    /**\r\n     * 图片操作相关\r\n     */\r\n    image,\r\n    /**\r\n     * 其它常用方法\r\n     */\r\n    lib,\r\n    /**\r\n     * 随机字符串相关\r\n     */\r\n    random,\r\n    /**\r\n     * url操作\r\n     */\r\n    url,\r\n    /**\r\n     * 正则操作\r\n     */\r\n    regexp,\r\n    /**\r\n     * dom 操作\r\n     */\r\n    dom,\r\n    /**\r\n     * 颜色相关\r\n     */\r\n    color\r\n}\r\n","/* eslint-disable class-methods-use-this */\r\nimport { AnyKeyValueType } from \"../declaration/common\"\r\n\r\n/**\r\n * 日志级别类型\r\n */\r\nexport enum LevelTypeEnum {\r\n    \"info\" = \"info\",\r\n    \"warn\" = \"warn\",\r\n    \"error\" = \"error\"\r\n}\r\n\r\n/**\r\n * 异步日志返回类型\r\n */\r\nexport type PromiseType = Promise<void> | Promise<unknown>\r\n\r\n/**\r\n * 日志记录器接口\r\n */\r\nexport interface LogRecorderType {\r\n    /**\r\n     * 一般日志\r\n     */\r\n    info(content: any, option: AnyKeyValueType): void\r\n    /**\r\n     * 一般日志（异步）\r\n     */\r\n    infoAsync(content: any, option: AnyKeyValueType): PromiseType\r\n    /**\r\n     * 警告日志\r\n     */\r\n    warn(content: any, option: AnyKeyValueType): void\r\n    /**\r\n     * 警告日志（异步）\r\n     */\r\n    warnAsync(content: any, option: AnyKeyValueType): PromiseType\r\n    /**\r\n     * 错误日志\r\n     */\r\n    error(content: any, option: AnyKeyValueType): void\r\n    /**\r\n     * 错误日志（异步）\r\n     */\r\n    errorAsync(content: any, option: AnyKeyValueType): PromiseType\r\n}\r\n\r\nclass DefaultLogRecorderClass {\r\n    info(content: any, option: AnyKeyValueType) {\r\n        console.info(content, option)\r\n    }\r\n    infoAsync(content: any, option: AnyKeyValueType) {\r\n        console.info(content, option)\r\n        return Promise.resolve()\r\n    }\r\n    warn(content: any, option: AnyKeyValueType) {\r\n        console.warn(content, option)\r\n    }\r\n    warnAsync(content: any, option: AnyKeyValueType) {\r\n        console.warn(content, option)\r\n        return Promise.resolve()\r\n    }\r\n    error(content: any, option: AnyKeyValueType) {\r\n        console.error(content, option)\r\n    }\r\n    errorAsync(content: any, option: AnyKeyValueType) {\r\n        console.error(content, option)\r\n        return Promise.resolve()\r\n    }\r\n}\r\n\r\n/**\r\n * 当前默认的日志记录器（默认为window.console）\r\n */\r\nlet defaultLogRecorder: LogRecorderType = new DefaultLogRecorderClass()\r\n\r\n/**\r\n * 根据日志级别返回对应的日志记录函数\r\n */\r\nfunction getLogRecorder(level: LevelTypeEnum, isAsync: boolean): (obj: any, option: AnyKeyValueType) => void | ((obj: any, option: AnyKeyValueType) => PromiseType) {\r\n    if (isAsync) {\r\n        let fun = defaultLogRecorder.infoAsync\r\n        switch (level) {\r\n            case LevelTypeEnum.info:\r\n                fun = defaultLogRecorder.infoAsync\r\n                break\r\n            case LevelTypeEnum.warn:\r\n                fun = defaultLogRecorder.warnAsync\r\n                break\r\n            case LevelTypeEnum.error:\r\n                fun = defaultLogRecorder.errorAsync\r\n                break\r\n        }\r\n        return fun as any\r\n    }\r\n    let fun = defaultLogRecorder.info\r\n    switch (level) {\r\n        case LevelTypeEnum.info:\r\n            fun = defaultLogRecorder.info\r\n            break\r\n        case LevelTypeEnum.warn:\r\n            fun = defaultLogRecorder.warn\r\n            break\r\n        case LevelTypeEnum.error:\r\n            fun = defaultLogRecorder.error\r\n            break\r\n    }\r\n    return fun as any\r\n}\r\n\r\nclass LoggerHelper {\r\n    /**\r\n     * 写日志\r\n     * @param level 日志级别\r\n     * @param content 日志内容\r\n     * @param option 自定义选项\r\n     */\r\n    write(level: LevelTypeEnum, content: any, option: AnyKeyValueType = {}) {\r\n        const logFunc = getLogRecorder(level, false)\r\n        logFunc(content, option)\r\n    }\r\n    /**\r\n     * 写日志（异步）\r\n     * @param level 日志级别\r\n     * @param content 日志内容\r\n     * @param option 自定义选项\r\n     */\r\n    writeAsync(level: LevelTypeEnum, content: any, option: AnyKeyValueType = {}) {\r\n        const logFunc = getLogRecorder(level, true)\r\n        return <PromiseType>(logFunc(content, option) as any)\r\n    }\r\n    /**\r\n     *  写一般日志\r\n     * @param content 日志内容\r\n     * @param option 自定义选项\r\n     */\r\n    info(content: any, option: AnyKeyValueType = {}) {\r\n        this.write(LevelTypeEnum.info, content, option)\r\n    }\r\n    /**\r\n     *  写一般日志（异步）\r\n     * @param content 日志内容\r\n     * @param option 自定义选项\r\n     */\r\n    infoAsync(content: any, option: AnyKeyValueType = {}) {\r\n        return this.writeAsync(LevelTypeEnum.info, content, option)\r\n    }\r\n    /**\r\n     *  写警告日志\r\n     * @param content 日志内容\r\n     * @param option 自定义选项\r\n     */\r\n    warn(content: any, option: AnyKeyValueType = {}) {\r\n        this.write(LevelTypeEnum.warn, content, option)\r\n    }\r\n    /**\r\n     *  写警告日志（异步）\r\n     * @param content 日志内容\r\n     * @param option 自定义选项\r\n     */\r\n    warnAsync(content: any, option: AnyKeyValueType = {}) {\r\n        return this.writeAsync(LevelTypeEnum.warn, content, option)\r\n    }\r\n    /**\r\n     *  写错误日志\r\n     * @param content 日志内容\r\n     * @param option 自定义选项\r\n     */\r\n    error(content: any, option: AnyKeyValueType = {}) {\r\n        this.write(LevelTypeEnum.error, content, option)\r\n    }\r\n    /**\r\n     *  写错误日志（异步）\r\n     * @param content 日志内容\r\n     * @param option 自定义选项\r\n     */\r\n    errorAsync(content: any, option: AnyKeyValueType = {}) {\r\n        return this.writeAsync(LevelTypeEnum.error, content, option)\r\n    }\r\n}\r\n\r\n/**\r\n * 当前日志工具类，把类型为【信息、警告、错误】的日志统一起来。\r\n * 默认的记录器为全局的console，也可以自定义日志记录器，只需要实现相应的接口即可。\r\n */\r\nexport const logger: LoggerHelper = new LoggerHelper()\r\n\r\n/**\r\n * 重新设置默认的日志记录器\r\n * @param logRecorder 新的日志记录器（默认的日志记录器为window.console）\r\n */\r\nexport function setLoggerRecorder(logRecorder: LogRecorderType) {\r\n    defaultLogRecorder = logRecorder\r\n}\r\n","/* eslint-disable import/no-default-export */\r\nimport * as common from \"./common\"\r\nimport * as recorder from \"./recorder\"\r\n\r\nexport default {\r\n    /**\r\n     * 公共相关配置\r\n     */\r\n    common,\r\n    /**\r\n     * 记录器相关配置\r\n     */\r\n    recorder\r\n}\r\n","/* eslint-disable import/no-default-export */\r\nimport * as regexConst from \"./regex\"\r\nimport * as map from \"./map\"\r\n\r\nexport default {\r\n    /**\r\n     * 正则常量\r\n     */\r\n    regexConst,\r\n    /**\r\n     * key/value常量\r\n     */\r\n    map\r\n}\r\n","import { isNumber, isDate } from \"../common/data\"\r\n\r\n/**\r\n * 将分钟数转为带小时的字符串，如：10小时20分钟\r\n */\r\nexport function toHourStringFromMins(mins: number): string {\r\n    if (mins < 0) {\r\n        return \"\"\r\n    }\r\n    if (mins == 0) {\r\n        return \"0分钟\"\r\n    }\r\n    const h = parseInt((mins / 60).toString())\r\n    const m = parseInt((mins % 60).toString())\r\n    const s = []\r\n    if (h > 0) {\r\n        s.push(`${h}小时`)\r\n    }\r\n    if (m > 0) {\r\n        s.push(`${m}分钟`)\r\n    }\r\n    return s.join(\"\")\r\n}\r\n\r\n/**\r\n * 将Date对象转换为指定的格式字符串\r\n * 注：月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)\r\n * @param dateValue 日期对象\r\n * @param fmtStr 格式（默认值为yyyy-MM-dd），如：yyyy-MM-dd\r\n * @returns 格式化后的字符串\r\n */\r\nexport function format(dateValue: Date | number, fmtStr: string = \"yyyy-MM-dd\") {\r\n    let fmt = fmtStr\r\n    let dt: Date = dateValue as Date\r\n    if (isNumber(dateValue as any)) {\r\n        dt = new Date(dateValue)\r\n    }\r\n    if (!isDate(dt)) {\r\n        return \"\"\r\n    }\r\n    const o: any = {\r\n        \"M+\": dt.getMonth() + 1, //月份\r\n        \"d+\": dt.getDate(), //日\r\n        \"h+\": dt.getHours(), //小时\r\n        \"m+\": dt.getMinutes(), //分\r\n        \"s+\": dt.getSeconds(), //秒\r\n        \"q+\": Math.floor((dt.getMonth() + 3) / 3), //季度\r\n        S: dt.getMilliseconds() //毫秒\r\n    }\r\n    if (/(y+)/.test(fmt)) {\r\n        fmt = fmt.replace(RegExp.$1, (dt.getFullYear() + \"\").substr(4 - RegExp.$1.length))\r\n    }\r\n    for (const k in o) {\r\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\r\n            fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length))\r\n        }\r\n    }\r\n    return fmt\r\n}\r\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import DateFormat from \"date-fns/format\"\r\nimport { DateTimeCounterEntityType, DateTimeEntityType, MonthValueType, WeekValueType } from \"../declaration/date\"\r\nimport { isDate, isString } from \"../common/data\"\r\nimport { toInt } from \"../common/convert\"\r\n\r\n/**\r\n * 一年的毫秒数（按360天计算）\r\n */\r\nconst msPerYear = 31104000000\r\n/**\r\n * 一个月的毫秒数（按30天计算）\r\n */\r\nconst msPerMonth = 2592000000\r\n/**\r\n * 一天的毫秒数\r\n */\r\nconst msPerDay = 86400000\r\n/**\r\n * 一小时的毫秒数\r\n */\r\nconst msPerHour = 3600000\r\n/**\r\n * 一分钟的毫秒数\r\n */\r\nconst msPerMin = 60000\r\n/**\r\n * 一秒钟的毫秒数\r\n */\r\nconst msPerSec = 1000\r\n\r\n/**\r\n * 返回时间实体对象\r\n */\r\nexport function toEntity(dt: Date): DateTimeEntityType {\r\n    const model = {} as DateTimeEntityType\r\n    model.year = dt.getFullYear()\r\n    model.month = (dt.getMonth() + 1) as MonthValueType\r\n    model.day = dt.getDate()\r\n    model.hour = dt.getHours()\r\n    model.min = dt.getMinutes()\r\n    model.second = dt.getSeconds()\r\n    model.millisecond = dt.getMilliseconds()\r\n    model.week = dt.getDay() as WeekValueType\r\n    return model\r\n}\r\n\r\n/**\r\n * 根据毫秒数返回用于计时统计的实体\r\n */\r\nexport function toCounterEntity(ms: number): DateTimeCounterEntityType {\r\n    const model = {} as DateTimeCounterEntityType\r\n    model.year = 0\r\n    model.month = 0\r\n    model.day = 0\r\n    model.hour = 0\r\n    model.min = 0\r\n    model.second = 0\r\n    model.millisecond = 0\r\n\r\n    if (ms <= 0) {\r\n        return model\r\n    }\r\n\r\n    if (ms >= msPerYear) {\r\n        model.year = toInt(ms / msPerYear)\r\n    }\r\n    if (ms >= msPerMonth) {\r\n        model.month = toInt((ms % msPerYear) / msPerMonth)\r\n    }\r\n    if (ms >= msPerDay) {\r\n        model.day = toInt(((ms % msPerYear) % msPerMonth) / msPerDay)\r\n    }\r\n    if (ms >= msPerHour) {\r\n        model.hour = toInt((((ms % msPerYear) % msPerMonth) % msPerDay) / msPerHour)\r\n    }\r\n    if (ms >= msPerMin) {\r\n        model.min = toInt(((((ms % msPerYear) % msPerMonth) % msPerDay) % msPerHour) / msPerMin)\r\n    }\r\n    if (ms >= msPerSec) {\r\n        model.second = toInt((((((ms % msPerYear) % msPerMonth) % msPerDay) % msPerHour) % msPerMin) / msPerSec)\r\n    }\r\n    model.millisecond = toInt((((((ms % msPerYear) % msPerMonth) % msPerDay) % msPerHour) % msPerMin) % msPerSec)\r\n    return model\r\n}\r\n\r\n/**\r\n * 将字符串\"/Date(...)/\"的日期转为js Date对象\r\n * @param dateStr date字符串，如\"/Date(1441036800000)/\"\r\n * @returns 如果转换成功，则返回Date对象，否则返回null\r\n */\r\nexport function parse(dateStr: string): Date | null {\r\n    if (!dateStr || !isString(dateStr)) {\r\n        return null\r\n    }\r\n    let date = null\r\n    const mts = dateStr.match(/(\\/Date\\((\\d+)\\)\\/)/)\r\n    if (mts && mts.length >= 3) {\r\n        date = new Date(parseInt(mts[2]))\r\n    }\r\n    if (!isDate(date)) {\r\n        return null\r\n    }\r\n    return date\r\n}\r\n\r\n/**\r\n * 将日期对象转换为：yyyy-MM-dd HH:mm:ss\r\n */\r\nexport function convertDateTimeToYMDHMS(dt: Date) {\r\n    return DateFormat(dt, \"yyyy-MM-dd HH:mm:ss\")\r\n}\r\n\r\n/**\r\n * 将日期对象转换为：yyyy-MM-dd HH:mm:ss.SSS\r\n */\r\nexport function convertDateTimeToYMDHMSMS(dt: Date) {\r\n    return DateFormat(dt, \"yyyy-MM-dd HH:mm:ss.SSS\")\r\n}\r\n","/* eslint-disable import/no-default-export */\r\nimport * as format from \"./format\"\r\nimport * as convert from \"./convert\"\r\n\r\nexport default {\r\n    /**\r\n     * 格式化相关\r\n     */\r\n    format,\r\n    /**\r\n     * 转换相关\r\n     */\r\n    convert\r\n}\r\n","/* eslint-disable import/no-default-export */\r\nimport * as common from \"./common\"\r\nimport * as date from \"./date\"\r\n\r\nexport default {\r\n    common,\r\n    date\r\n}\r\n","/* eslint-disable import/no-default-export */\r\nimport * as browser from \"./browser\"\r\n\r\nexport default {\r\n    /**\r\n     * 浏览器相关\r\n     */\r\n    browser\r\n}\r\n","/**\r\n * 下拉框实体\r\n */\r\nexport class SelectItem<ValueType, ExtendType> {\r\n    constructor(text: string, value: ValueType, isSelected: boolean = false, extend?: ExtendType) {\r\n        this.text = text\r\n        this.value = value\r\n        this.isSelected = isSelected\r\n        this.extend = extend\r\n    }\r\n    /**\r\n     * 文本名\r\n     */\r\n    text: string = \"\"\r\n    /**\r\n     * 是否已选中\r\n     */\r\n    isSelected = false\r\n    /**\r\n     * value值\r\n     */\r\n    value: ValueType\r\n    /**\r\n     * 扩展属性\r\n     */\r\n    extend?: ExtendType\r\n}","/**\r\n * 序列化基类（解决getter的JSON.stringify无效的问题）\r\n */\r\nexport class BaseClass {\r\n    toJSON() {\r\n        const jsonObj = { ...this } as any\r\n        const proto = Object.getPrototypeOf(this)\r\n        for (const key of Object.getOwnPropertyNames(proto)) {\r\n            const desc = Object.getOwnPropertyDescriptor(proto, key)\r\n            const hasGetter = desc && typeof desc.get === 'function'\r\n            if (hasGetter) {\r\n                jsonObj[key] = (this as any)[key]\r\n            }\r\n        }\r\n        return jsonObj\r\n    }\r\n}","import { document, globalObject } from \"../common/lib\"\r\nimport { AnyKeyValueType } from \"../declaration/common\"\r\n\r\n/**\r\n * key 的枚举值\r\n */\r\nenum KeyTypeEnum {\r\n    /**\r\n     * 记录属性值\r\n     */\r\n    val = \"val\",\r\n    /**\r\n     * 记录innerText\r\n     */\r\n    txt = \"txt\",\r\n    /**\r\n     * 记录innerHTML\r\n     */\r\n    html = \"html\",\r\n    /**\r\n     * 记录次数\r\n     */\r\n    count = \"count\"\r\n}\r\n\r\n\r\n/**\r\n * DOM数据收集记录器类。用于批量收集DOM元素的属性信息，并将这些属性内容存放到一个对象中。jskit-key 属性必须要指定。\r\n * 示例：<div jskit-key=\"name\" jskit-type=\"val\" jskit-val=\"test\"></div>，则最终会把【name】与【test】保存到一个对象中。\r\n * 具体说明：\r\n * 1：如果此DOM的 jskit-type=\"val\"，则会记录属性 jskit-val 的值（这种情况，jskit-type 可以省略不用指定）\r\n * 2：如果此DOM的 jskit-type=\"txt\"，则会记录该DOM的innerText\r\n * 3：如果此DOM的 jskit-type=\"html\"，则会记录该DOM的innerHTML\r\n * 4：如果此DOM的 jskit-type=\"count\"，则会记录与该DOM相同【jskit-key】的DOM元素的出现次数\r\n * 5：如果此DOM只有 jskit-key 属性，则会默认记录一个标记为\"1\"\r\n */\r\nexport class DOMDataRecorder {\r\n    /**\r\n     * 当前url地址\r\n     */\r\n    url: string = \"\"\r\n    /**\r\n     * 来源url地址\r\n     */\r\n    refer: string = \"\"\r\n    /**\r\n     * 数据标识\r\n     */\r\n    id: string = \"\"\r\n    /**\r\n     * DOM元素属性前缀，默认为：jskit-\r\n     */\r\n    attrPrefix = \"jskit-\"\r\n    /**\r\n     * 数据值（键值对的形式）\r\n     */\r\n    readonly value: { [name: string]: string[] | number } = {}\r\n    /**\r\n     * 扩展自定义数据\r\n     */\r\n    extend: AnyKeyValueType | undefined = undefined\r\n    /**\r\n     * 初始化\r\n     */\r\n    init() {\r\n        //环境校验\r\n        if (!document) {\r\n            throw new Error(\"Document is not found!\")\r\n        }\r\n        //基本属性\r\n        const win = globalObject as Window\r\n        this.url = win.location.href\r\n        this.refer = document.referrer\r\n        //数据\r\n        const attrKeyName = `${this.attrPrefix}key`\r\n        const attrTypeName = `${this.attrPrefix}type`\r\n        const attrValueName = `${this.attrPrefix}val`\r\n        const eles = Array.from(document.querySelectorAll(`[${attrKeyName}]`))\r\n        if (!eles || !eles.length) {\r\n            return this\r\n        }\r\n        eles.forEach(node => {\r\n            const key = (node.getAttribute(attrKeyName) || \"\").toLowerCase().trim()\r\n            if (!key) {\r\n                return\r\n            }\r\n            const type = (node.getAttribute(attrTypeName) || \"\").toLowerCase().trim()\r\n\r\n            //初始化\r\n            if (type == KeyTypeEnum.count) {\r\n                if (!this.value[key]) {\r\n                    this.value[key] = 0\r\n                }\r\n            } else {\r\n                this.value[key] = this.value[key] || []\r\n            }\r\n\r\n            //如果存在jskit-val属性，则记录此属性值\r\n            if (node.hasAttribute(attrValueName)) {\r\n                (this.value[key] as string[]).push((node.getAttribute(attrValueName) || \"\").trim())\r\n                return\r\n            }\r\n            //记录此节点的innerText值\r\n            if (type == KeyTypeEnum.txt) {\r\n                (this.value[key] as string[]).push(((node as HTMLElement).innerText || \"\").trim())\r\n                return\r\n            }\r\n            //记录此节点的innerHTML值\r\n            if (type == KeyTypeEnum.html) {\r\n                (this.value[key] as string[]).push(((node as HTMLElement).innerHTML || \"\").trim())\r\n                return\r\n            }\r\n            //统计这些属性元素的个数\r\n            if (type == KeyTypeEnum.count) {\r\n                (this.value[key] as number) = (this.value[key] as number) + 1\r\n                return\r\n            }\r\n            //如果不存在其它属性，则直接记录一个标记\r\n            (this.value[key] as string[]).push(\"1\")\r\n        })\r\n        return this\r\n    }\r\n}","/**\r\n * 消息头\r\n */\r\nclass MessageHead {\r\n    /**\r\n     * 是否响应\r\n     */\r\n    isAck: boolean = true\r\n    /**\r\n     * 时间\r\n     */\r\n    date: number = new Date().valueOf()\r\n    /**\r\n     * 消息是否成功\r\n     */\r\n    isSuccess: boolean = true\r\n    /**\r\n     * 是否为异常\r\n     */\r\n    isException: boolean = false\r\n    /**\r\n     * 提示语\r\n     */\r\n    message: string = \"\"\r\n    /**\r\n     * 提示语的详细信息\r\n     */\r\n    messageMore: string = \"\"\r\n    /**\r\n     * 需要跳转的url地址\r\n     */\r\n    redirectURL: string = \"\"\r\n    /**\r\n     * 是否需要刷新当前页面\r\n     */\r\n    isRefresh: boolean = false\r\n    /**\r\n     * 错误码\r\n     */\r\n    errorCode: string = \"\"\r\n}\r\n\r\n/**\r\n * 消息正文\r\n */\r\nclass MessageBody<T1, T2> {\r\n    /**\r\n     * 数据\r\n     */\r\n    data: T1 = null as any\r\n    /**\r\n     * 扩展数据\r\n     */\r\n    extendData: T2 = null as any\r\n}\r\n\r\n\r\n/**\r\n * 消息实体\r\n */\r\nexport class MessageEntity<BodyDataType = any, BodyExtendDataType = any> {\r\n    /**\r\n     * 头信息\r\n     */\r\n    head: MessageHead = new MessageHead()\r\n    /**\r\n     * 正文信息\r\n     */\r\n    body: MessageBody<BodyDataType, BodyExtendDataType> = new MessageBody<BodyDataType, BodyExtendDataType>()\r\n}\r\n\r\n","/* eslint-disable import/no-default-export */\r\nimport * as idCard from \"./idCard\"\r\nimport * as keyValue from \"./keyValue\"\r\nimport * as select from \"./select\"\r\nimport * as serialize from \"./serialize\"\r\nimport * as message from \"./message\"\r\nimport * as methodResult from \"./method-result\"\r\n\r\nexport default {\r\n    /**\r\n     * 证件实体\r\n     */\r\n    idCard,\r\n    /**\r\n     * key/value实体\r\n     */\r\n    keyValue,\r\n    /**\r\n     * 下拉框相关实体\r\n     */\r\n    select,\r\n    /**\r\n     * 序列化相关\r\n     */\r\n    serialize,\r\n    /**\r\n     * 消息提示实体\r\n     */\r\n    message,\r\n    /**\r\n     * 方法结果实体\r\n     */\r\n    methodResult\r\n}\r\n","/* eslint-disable import/no-default-export */\r\nimport * as log from \"./log\"\r\nimport * as dom from \"./dom\"\r\n\r\nexport default {\r\n    log,\r\n    dom\r\n}\r\n","/* eslint-disable react/static-property-placement */\r\n/**\r\n * 策略项\r\n */\r\nexport class StrategyItem<ContextType> {\r\n    constructor(name: string, context: ContextType, handler: (item: StrategyItem<ContextType>) => void) {\r\n        this.name = name\r\n        this.context = context\r\n        this.handler = handler\r\n    }\r\n    name: string = \"\"\r\n    context: ContextType\r\n    handler: (item: StrategyItem<ContextType>) => void\r\n}\r\n\r\n/**\r\n * 策略管理类，用于一次性执行多次策略方法。\r\n * 使用方法：const strategy = new Strategy()\r\n * strategy.add(item => {...}).add(item => {...}).add(item => {...}).execute()\r\n */\r\nexport class Strategy<ContextType = any> {\r\n    /**\r\n     * 策略列表\r\n     */\r\n    private _strategyList: StrategyItem<ContextType>[] = []\r\n    /**\r\n     * 上下文，用于多个策略之间的数据共享\r\n     */\r\n    context: ContextType = null as any\r\n    /**\r\n     * 添加一个策略项\r\n     */\r\n    add(handler: (item: StrategyItem<ContextType>) => void, name: string = \"\") {\r\n        this._strategyList.push(new StrategyItem(name, this.context, handler))\r\n        return this\r\n    }\r\n    /**\r\n     * 执行策略列表\r\n     */\r\n    execute() {\r\n        this._strategyList.forEach((item) => {\r\n            item.handler(item)\r\n        })\r\n    }\r\n}\r\n","import { getSymbol } from \"../common/lib\"\r\n\r\nconst classIdSymbol = getSymbol(\"class-id\")\r\n\r\n/**\r\n * 获取指定类的单个实例\r\n * @param className 类的名字\r\n */\r\nexport function getInstance<T>(ClassName: new () => T): T {\r\n    if (!classIdSymbol) {\r\n        throw new Error(\"Type of Symbol is not found!\")\r\n    }\r\n    const obj = (ClassName as any)[classIdSymbol] as T\r\n    if (typeof (obj) != 'undefined') {\r\n        return obj\r\n    }\r\n    const newObj = new ClassName()\r\n    Object.defineProperty(ClassName, classIdSymbol, {\r\n        value: newObj\r\n    })\r\n    return newObj\r\n}","/* eslint-disable import/no-default-export */\r\nimport * as strategy from \"./strategy\"\r\nimport * as singleton from \"./singleton\"\r\n\r\nexport default {\r\n    /**\r\n     * 策略模式\r\n     */\r\n    strategy,\r\n    /**\r\n     * 单例模式\r\n     */\r\n    singleton\r\n}\r\n","/* eslint-disable import/no-default-export */\r\n/**\r\n * 定时器，提供开始计时与结束计时方法，最终会计算出这两个时间的差。\r\n */\r\nexport default class StopWatch {\r\n    private _date = new Date()\r\n    private _value = 0\r\n    private _startFlag = false\r\n    private _stopFlag = false\r\n    /**\r\n     * 间隔的毫秒数\r\n     */\r\n    get value() {\r\n        return this._value\r\n    }\r\n    /**\r\n     * 开始计时\r\n     */\r\n    start() {\r\n        if (this._startFlag || this._stopFlag) {\r\n            throw new Error(\"You cannot call 'start' because this object has been started or stopt!\")\r\n        }\r\n        this._startFlag = true\r\n        this._date = new Date()\r\n        return this\r\n    }\r\n    /**\r\n     * 停止计时\r\n     */\r\n    stop() {\r\n        if (this._stopFlag) {\r\n            throw new Error(\"You cannot call 'stop' because this object has been stopt!\")\r\n        }\r\n        this._stopFlag = true\r\n        this._value = new Date().valueOf() - this._date.valueOf()\r\n        return this\r\n    }\r\n}\r\n","/* eslint-disable import/no-default-export */\r\nimport stopWatch from \"./stopWatch\"\r\n\r\nexport default {\r\n    /**\r\n     * 计时器（请使用大写字母开头的）\r\n     */\r\n    stopWatch,\r\n    /**\r\n     * 计时器\r\n     */\r\n    StopWatch: stopWatch\r\n}\r\n","import { BaseClass } from \"../entity/serialize\"\r\n\r\nexport interface ValidationInitOpsType<ExtendType> {\r\n    /**\r\n     * 是否显示所有提示语\r\n     */\r\n    isShowAll?: boolean\r\n    /**\r\n     * 上一次的字段提示对象（主要用于初始化时合并对象）\r\n     */\r\n    oldItem?: FieldMessageItem<ExtendType>\r\n    /**\r\n     * 需要显示提示语的字段\r\n     */\r\n    needShowFields?: string[]\r\n    /**\r\n     * 不需要显示提示语的字段\r\n     */\r\n    unNeedShowFields?: string[]\r\n}\r\n\r\nexport interface FieldItemType {\r\n    /**\r\n     * 提示语\r\n     */\r\n    msg: string\r\n    /**\r\n     * 是否显示\r\n     */\r\n    isShow: boolean\r\n}\r\n\r\n/**\r\n * 每一项的具体提示类\r\n */\r\nexport class FieldMessageItem<ExtendType = any> {\r\n    /**\r\n     * 唯一id标识\r\n     */\r\n    id: string = \"\"\r\n    /**\r\n     * 是否验证通过\r\n     */\r\n    isPassed: boolean = true\r\n    /**\r\n     * 需要验证的具体字段信息\r\n     */\r\n    fieldItems: { [name: string]: FieldItemType } = {}\r\n    /**\r\n     * 扩展字段\r\n     */\r\n    extend: ExtendType = undefined as any\r\n    /**\r\n     * 初始化，重新设置fieldItems中的属性\r\n     */\r\n    init(ops: ValidationInitOpsType<ExtendType>) {\r\n        if (!ops) {\r\n            return this\r\n        }\r\n        Object.keys(this.fieldItems).forEach((k) => {\r\n            //如果isShowAll有值，则将所有字段的isShow设置为该值\r\n            if (ops && typeof ops.isShowAll == \"boolean\") {\r\n                this.fieldItems[k].isShow = ops.isShowAll\r\n                return\r\n            }\r\n            //如果原有的验证对象中的字段：【needShowFields包含该字段时，则isShow设置为true】，【unNeedShowFields包含该字段时，则isShow设置为false】\r\n            let oldShowValue = !!(ops.oldItem && ops.oldItem.fieldItems[k].isShow)\r\n            if ((ops.needShowFields || []).includes(k)) {\r\n                oldShowValue = true\r\n            }\r\n            if ((ops.unNeedShowFields || []).includes(k)) {\r\n                oldShowValue = false\r\n            }\r\n            this.fieldItems[k].isShow = oldShowValue\r\n        })\r\n        return this\r\n    }\r\n}\r\n\r\n/**\r\n * 字段信息提示实体类。把类似“表单验证”的场景通过一个统一的实体类来表现，方便js代码去读取与管理这些状态与信息。\r\n * 比如：如果一个输入项校验不通过，会涉及到这些数据的变化：是否验证通过、错误提示消息、是否只显示当前这一个错误消息等、是否需要清空其它错误消息等。\r\n * 示例用法：\r\n * const model = new FieldMessageModel()\r\n * model.itemList = []\r\n * const item = new FieldMessageItem()\r\n * item.isPassed = false\r\n * item.fieldItems = {\r\n * name: {\r\n *     isShow: false,\r\n *     msg: \"\"\r\n * }\r\n * 当数据化生变化时，要做的只是更新这个对象中的具体字段状态即可，业务代码中根据这些状态信息统一去显示页面。\r\n *\r\n*}\r\nmodel.itemList.push(item)\r\n *\r\n */\r\nexport class FieldMessageModel<ExtendType = any> extends BaseClass {\r\n    /**\r\n     * 是否itemList中的所有的字段提示列表均已验证通过\r\n     */\r\n    get isPassed(): boolean {\r\n        return isPassed(this)\r\n    }\r\n    /**\r\n     * 字段提示列表\r\n     */\r\n    itemList: FieldMessageItem<ExtendType>[] = []\r\n    /**\r\n     * 根据id返回指定的字段提示项\r\n     */\r\n    getItem(id: string): FieldMessageItem<ExtendType> | null {\r\n        return getItem(this, id)\r\n    }\r\n    toJSON() {\r\n        return {\r\n            isPassed: this.isPassed,\r\n            itemList: this.itemList\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 判断FieldMessageModel是否验证通过\r\n */\r\nexport function isPassed<ExtendType>(model: FieldMessageModel<ExtendType>) {\r\n    if (!model.itemList.length) {\r\n        return true\r\n    }\r\n    return !model.itemList.find((k) => !k.isPassed)\r\n}\r\n\r\n/**\r\n * 根据id返回FieldMessageModel中对应的FieldMessageItem\r\n */\r\nexport function getItem<ExtendType>(model: FieldMessageModel<ExtendType>, id: string): FieldMessageItem<ExtendType> | null {\r\n    return model.itemList.find((k) => k.id == id) || null\r\n}\r\n","import { rTrimString } from \"../common/string\"\r\n\r\n/**\r\n * 将指定路径转换为标准的路径，标准的路径分隔符为 \\，如果是文件夹，则最后也带 \\\r\n */\r\nexport function getStandardPath(path: string, isFolder: boolean) {\r\n    if (!path) {\r\n        return \"\"\r\n    }\r\n    path = path.trim().replaceAll(\"/\", \"\\\\\")\r\n    path = rTrimString(path, \"\\\\\")\r\n    if (isFolder) {\r\n        return path + \"\\\\\"\r\n    }\r\n    return path\r\n}\r\n\r\n/**\r\n * 获取文件名（包含扩展名），如：c:\\1\\2\\3.txt => 3.txt\r\n */\r\nexport function getFileName(path: string): string {\r\n    if (!path) {\r\n        return \"\"\r\n    }\r\n    const str = getStandardPath(path, false)\r\n    const splitIndex = str.lastIndexOf(\"\\\\\")\r\n    if (splitIndex < 0) {\r\n        return path.trim()\r\n    }\r\n    return str.substr(splitIndex + 1).trim()\r\n}\r\n\r\n/**\r\n * 获取文件名（不包含扩展名），如：c:\\1\\2\\3.txt => 3\r\n */\r\nexport function getFileNameWithoutExt(path: string): string {\r\n    const fileName = getFileName(path)\r\n    if (!fileName) {\r\n        return \"\"\r\n    }\r\n    const dotIndex = fileName.lastIndexOf(\".\")\r\n    if (dotIndex < 0) {\r\n        return fileName\r\n    }\r\n    return fileName.substr(0, dotIndex)\r\n}\r\n\r\n/**\r\n * 获取扩展名（包含点）\r\n */\r\nexport function getExt(path: string): string {\r\n    const fileName = getFileName(path)\r\n    if (!fileName) {\r\n        return \"\"\r\n    }\r\n    const dotIndex = fileName.lastIndexOf(\".\")\r\n    if (dotIndex < 0) {\r\n        return \"\"\r\n    }\r\n    return fileName.substr(dotIndex)\r\n}\r\n\r\n/**\r\n * 获取扩展名（不包含点）\r\n */\r\nexport function getExtWithoutDot(path: string): string {\r\n    const fileName = getFileName(path)\r\n    if (!fileName) {\r\n        return \"\"\r\n    }\r\n    const dotIndex = fileName.lastIndexOf(\".\")\r\n    if (dotIndex < 0) {\r\n        return \"\"\r\n    }\r\n    return fileName.substr(dotIndex + 1)\r\n}\r\n\r\n/**\r\n * 判断某个路径是否为本地磁盘根路径，如：c:\\  或  \\\\test-pc\\\r\n */\r\nexport function isLocalDiskRootPath(path: string) {\r\n    if (!path) {\r\n        return false\r\n    }\r\n    path = getStandardPath(path, true)\r\n    return /^[^\\\\]+:\\\\$/.test(path) || /^\\\\\\\\[^\\\\]+\\\\$/.test(path)\r\n}\r\n\r\n/**\r\n * 获取路径中的磁盘名称，如：c:\\a\\b\\c\\ -> c，\\\\test-pc\\a\\b\\c\\ -> test-pc\r\n */\r\nexport function getLocalPathDiskName(path: string) {\r\n    if (!path) {\r\n        return \"\"\r\n    }\r\n    path = getStandardPath(path, true)\r\n    let mt = path.match(/^[^\\\\]+(?=:)/)\r\n    if (mt?.length) {\r\n        return mt[0]\r\n    }\r\n    mt = path.match(/^\\\\\\\\([^\\\\]+)(?=\\\\)/)\r\n    if (mt?.length) {\r\n        return mt[1]\r\n    }\r\n    return \"\"\r\n}\r\n\r\n/**\r\n * 获取路径所在的文件夹名称，如：c:\\  --> c；  c:\\a\\b\\ --> b;  c:\\a\\b\\c.pdf --> b\r\n */\r\nexport function getPathFolderName(path: string, isFolderPath: boolean) {\r\n    if (!path) {\r\n        return \"\"\r\n    }\r\n    path = getStandardPath(path, isFolderPath)\r\n    const arr = path.split(\"\\\\\")\r\n    return arr[arr.length - 2].replaceAll(\":\", \"\")\r\n}\r\n\r\n/**\r\n * 判断一个路径是否为系统回收站的路径\r\n */\r\nexport function isSystemRecyclePath(path: string) {\r\n    if (!path) {\r\n        return false\r\n    }\r\n    return path.toUpperCase().includes(\"$RECYCLE.BIN\")\r\n}\r\n\r\n/**\r\n * 判断一个路径是否为 Office 临时文件的路径（文件名以 ~$ 开头）\r\n */\r\nexport function isOfficeTempPath(path: string) {\r\n    if (!path) {\r\n        return false\r\n    }\r\n    return getFileName(path).startsWith(\"~$\")\r\n}\r\n\r\n/**\r\n * 将物理绝对路径转换为 file 协议的 url\r\n */\r\nexport function convertPathToFileUrl(path: string) {\r\n    if (!path) {\r\n        return \"\"\r\n    }\r\n    return `file://${path.replaceAll(\"\\\\\", \"/\").trim()}`\r\n}\r\n","/**\r\n * 根据宽、高、及 exif 中的方向信息来返回忽略 exif 时的实际图片的宽高\r\n */\r\nexport function getRealWidthHeightFromExif(width: number, height: number, orientation: number): { width: number; height: number } {\r\n    if (orientation >= 5) {\r\n        return {\r\n            width: height,\r\n            height: width\r\n        }\r\n    }\r\n    return { width, height }\r\n}\r\n","import * as path from \"./path\"\r\nimport * as img from \"./img\"\r\n\r\nexport default { path, img }\r\n","/* eslint-disable import/no-default-export */\r\nimport cache from \"./cache/index\"\r\nimport check from \"./check/index\"\r\nimport common from \"./common/index\"\r\nimport config from \"./config/index\"\r\nimport constant from \"./constant/index\"\r\nimport date from \"./date/index\"\r\nimport declaration from \"./declaration/index\"\r\nimport device from \"./device/index\"\r\nimport entity from \"./entity/index\"\r\nimport recorder from \"./recorder/index\"\r\nimport pattern from \"./pattern/index\"\r\nimport timer from \"./timer/index\"\r\nimport validation from \"./validation/index\"\r\nimport file from \"./file/index\"\r\n\r\nexport default {\r\n    cache,\r\n    check,\r\n    common,\r\n    config,\r\n    constant,\r\n    date,\r\n    declaration,\r\n    device,\r\n    entity,\r\n    recorder,\r\n    pattern,\r\n    timer,\r\n    validation,\r\n    file\r\n}\r\n","/* eslint-disable import/no-default-export */\r\nimport * as fieldMessage from \"./fieldMessage\"\r\n\r\nexport default {\r\n    /**\r\n     * 带提示信息的字段显示与隐藏\r\n     */\r\n    fieldMessage\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };\n\t__webpack_require__.i.forEach(function(handler) { handler(execOptions); });\n\tmodule = execOptions.module;\n\texecOptions.factory.call(module.exports, module, module.exports, execOptions.require);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n// expose the module execution interceptor\n__webpack_require__.i = [];\n\n","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(5566);\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var currentModuleData = {};\nvar installedModules = __webpack_require__.c;\n\n// module and require creation\nvar currentChildModule;\nvar currentParents = [];\n\n// status\nvar registeredStatusHandlers = [];\nvar currentStatus = \"idle\";\n\n// while downloading\nvar blockingPromises;\n\n// The update info\nvar currentUpdateApplyHandlers;\nvar queuedInvalidatedModules;\n\n// eslint-disable-next-line no-unused-vars\n__webpack_require__.hmrD = currentModuleData;\n\n__webpack_require__.i.push(function (options) {\n\tvar module = options.module;\n\tvar require = createRequire(options.require, options.id);\n\tmodule.hot = createModuleHotObject(options.id, module);\n\tmodule.parents = currentParents;\n\tmodule.children = [];\n\tcurrentParents = [];\n\toptions.require = require;\n});\n\n__webpack_require__.hmrC = {};\n__webpack_require__.hmrI = {};\n\nfunction createRequire(require, moduleId) {\n\tvar me = installedModules[moduleId];\n\tif (!me) return require;\n\tvar fn = function (request) {\n\t\tif (me.hot.active) {\n\t\t\tif (installedModules[request]) {\n\t\t\t\tvar parents = installedModules[request].parents;\n\t\t\t\tif (parents.indexOf(moduleId) === -1) {\n\t\t\t\t\tparents.push(moduleId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentParents = [moduleId];\n\t\t\t\tcurrentChildModule = request;\n\t\t\t}\n\t\t\tif (me.children.indexOf(request) === -1) {\n\t\t\t\tme.children.push(request);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t\"[HMR] unexpected require(\" +\n\t\t\t\t\trequest +\n\t\t\t\t\t\") from disposed module \" +\n\t\t\t\t\tmoduleId\n\t\t\t);\n\t\t\tcurrentParents = [];\n\t\t}\n\t\treturn require(request);\n\t};\n\tvar createPropertyDescriptor = function (name) {\n\t\treturn {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn require[name];\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\trequire[name] = value;\n\t\t\t}\n\t\t};\n\t};\n\tfor (var name in require) {\n\t\tif (Object.prototype.hasOwnProperty.call(require, name) && name !== \"e\") {\n\t\t\tObject.defineProperty(fn, name, createPropertyDescriptor(name));\n\t\t}\n\t}\n\tfn.e = function (chunkId) {\n\t\treturn trackBlockingPromise(require.e(chunkId));\n\t};\n\treturn fn;\n}\n\nfunction createModuleHotObject(moduleId, me) {\n\tvar hot = {\n\t\t// private stuff\n\t\t_acceptedDependencies: {},\n\t\t_declinedDependencies: {},\n\t\t_selfAccepted: false,\n\t\t_selfDeclined: false,\n\t\t_selfInvalidated: false,\n\t\t_disposeHandlers: [],\n\t\t_main: currentChildModule !== moduleId,\n\t\t_requireSelf: function () {\n\t\t\tcurrentParents = me.parents.slice();\n\t\t\tcurrentChildModule = moduleId;\n\t\t\t__webpack_require__(moduleId);\n\t\t},\n\n\t\t// Module API\n\t\tactive: true,\n\t\taccept: function (dep, callback) {\n\t\t\tif (dep === undefined) hot._selfAccepted = true;\n\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n\t\t\telse if (typeof dep === \"object\" && dep !== null)\n\t\t\t\tfor (var i = 0; i < dep.length; i++)\n\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function () {};\n\t\t\telse hot._acceptedDependencies[dep] = callback || function () {};\n\t\t},\n\t\tdecline: function (dep) {\n\t\t\tif (dep === undefined) hot._selfDeclined = true;\n\t\t\telse if (typeof dep === \"object\" && dep !== null)\n\t\t\t\tfor (var i = 0; i < dep.length; i++)\n\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n\t\t\telse hot._declinedDependencies[dep] = true;\n\t\t},\n\t\tdispose: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\taddDisposeHandler: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\tremoveDisposeHandler: function (callback) {\n\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n\t\t},\n\t\tinvalidate: function () {\n\t\t\tthis._selfInvalidated = true;\n\t\t\tswitch (currentStatus) {\n\t\t\t\tcase \"idle\":\n\t\t\t\t\tcurrentUpdateApplyHandlers = [];\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tsetStatus(\"ready\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ready\":\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"prepare\":\n\t\t\t\tcase \"check\":\n\t\t\t\tcase \"dispose\":\n\t\t\t\tcase \"apply\":\n\t\t\t\t\t(queuedInvalidatedModules = queuedInvalidatedModules || []).push(\n\t\t\t\t\t\tmoduleId\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// ignore requests in error states\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\t// Management API\n\t\tcheck: hotCheck,\n\t\tapply: hotApply,\n\t\tstatus: function (l) {\n\t\t\tif (!l) return currentStatus;\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\taddStatusHandler: function (l) {\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\tremoveStatusHandler: function (l) {\n\t\t\tvar idx = registeredStatusHandlers.indexOf(l);\n\t\t\tif (idx >= 0) registeredStatusHandlers.splice(idx, 1);\n\t\t},\n\n\t\t//inherit from previous dispose call\n\t\tdata: currentModuleData[moduleId]\n\t};\n\tcurrentChildModule = undefined;\n\treturn hot;\n}\n\nfunction setStatus(newStatus) {\n\tcurrentStatus = newStatus;\n\tfor (var i = 0; i < registeredStatusHandlers.length; i++)\n\t\tregisteredStatusHandlers[i].call(null, newStatus);\n}\n\nfunction trackBlockingPromise(promise) {\n\tswitch (currentStatus) {\n\t\tcase \"ready\":\n\t\t\tsetStatus(\"prepare\");\n\t\t\tblockingPromises.push(promise);\n\t\t\twaitForBlockingPromises(function () {\n\t\t\t\tsetStatus(\"ready\");\n\t\t\t});\n\t\t\treturn promise;\n\t\tcase \"prepare\":\n\t\t\tblockingPromises.push(promise);\n\t\t\treturn promise;\n\t\tdefault:\n\t\t\treturn promise;\n\t}\n}\n\nfunction waitForBlockingPromises(fn) {\n\tif (blockingPromises.length === 0) return fn();\n\tvar blocker = blockingPromises;\n\tblockingPromises = [];\n\treturn Promise.all(blocker).then(function () {\n\t\treturn waitForBlockingPromises(fn);\n\t});\n}\n\nfunction hotCheck(applyOnUpdate) {\n\tif (currentStatus !== \"idle\") {\n\t\tthrow new Error(\"check() is only allowed in idle status\");\n\t}\n\tsetStatus(\"check\");\n\treturn __webpack_require__.hmrM().then(function (update) {\n\t\tif (!update) {\n\t\t\tsetStatus(applyInvalidatedModules() ? \"ready\" : \"idle\");\n\t\t\treturn null;\n\t\t}\n\n\t\tsetStatus(\"prepare\");\n\n\t\tvar updatedModules = [];\n\t\tblockingPromises = [];\n\t\tcurrentUpdateApplyHandlers = [];\n\n\t\treturn Promise.all(\n\t\t\tObject.keys(__webpack_require__.hmrC).reduce(function (\n\t\t\t\tpromises,\n\t\t\t\tkey\n\t\t\t) {\n\t\t\t\t__webpack_require__.hmrC[key](\n\t\t\t\t\tupdate.c,\n\t\t\t\t\tupdate.r,\n\t\t\t\t\tupdate.m,\n\t\t\t\t\tpromises,\n\t\t\t\t\tcurrentUpdateApplyHandlers,\n\t\t\t\t\tupdatedModules\n\t\t\t\t);\n\t\t\t\treturn promises;\n\t\t\t},\n\t\t\t[])\n\t\t).then(function () {\n\t\t\treturn waitForBlockingPromises(function () {\n\t\t\t\tif (applyOnUpdate) {\n\t\t\t\t\treturn internalApply(applyOnUpdate);\n\t\t\t\t} else {\n\t\t\t\t\tsetStatus(\"ready\");\n\n\t\t\t\t\treturn updatedModules;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction hotApply(options) {\n\tif (currentStatus !== \"ready\") {\n\t\treturn Promise.resolve().then(function () {\n\t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n\t\t});\n\t}\n\treturn internalApply(options);\n}\n\nfunction internalApply(options) {\n\toptions = options || {};\n\n\tapplyInvalidatedModules();\n\n\tvar results = currentUpdateApplyHandlers.map(function (handler) {\n\t\treturn handler(options);\n\t});\n\tcurrentUpdateApplyHandlers = undefined;\n\n\tvar errors = results\n\t\t.map(function (r) {\n\t\t\treturn r.error;\n\t\t})\n\t\t.filter(Boolean);\n\n\tif (errors.length > 0) {\n\t\tsetStatus(\"abort\");\n\t\treturn Promise.resolve().then(function () {\n\t\t\tthrow errors[0];\n\t\t});\n\t}\n\n\t// Now in \"dispose\" phase\n\tsetStatus(\"dispose\");\n\n\tresults.forEach(function (result) {\n\t\tif (result.dispose) result.dispose();\n\t});\n\n\t// Now in \"apply\" phase\n\tsetStatus(\"apply\");\n\n\tvar error;\n\tvar reportError = function (err) {\n\t\tif (!error) error = err;\n\t};\n\n\tvar outdatedModules = [];\n\tresults.forEach(function (result) {\n\t\tif (result.apply) {\n\t\t\tvar modules = result.apply(reportError);\n\t\t\tif (modules) {\n\t\t\t\tfor (var i = 0; i < modules.length; i++) {\n\t\t\t\t\toutdatedModules.push(modules[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// handle errors in accept handlers and self accepted module load\n\tif (error) {\n\t\tsetStatus(\"fail\");\n\t\treturn Promise.resolve().then(function () {\n\t\t\tthrow error;\n\t\t});\n\t}\n\n\tif (queuedInvalidatedModules) {\n\t\treturn internalApply(options).then(function (list) {\n\t\t\toutdatedModules.forEach(function (moduleId) {\n\t\t\t\tif (list.indexOf(moduleId) < 0) list.push(moduleId);\n\t\t\t});\n\t\t\treturn list;\n\t\t});\n\t}\n\n\tsetStatus(\"idle\");\n\treturn Promise.resolve(outdatedModules);\n}\n\nfunction applyInvalidatedModules() {\n\tif (queuedInvalidatedModules) {\n\t\tif (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];\n\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\tqueuedInvalidatedModules.forEach(function (moduleId) {\n\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\tmoduleId,\n\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t\tqueuedInvalidatedModules = undefined;\n\t\treturn true;\n\t}\n}"],"sourceRoot":""}